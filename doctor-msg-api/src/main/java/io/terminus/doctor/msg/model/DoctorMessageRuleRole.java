package io.terminus.doctor.msg.model;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.terminus.common.utils.JsonMapper;
import io.terminus.doctor.msg.dto.Rule;
import lombok.Data;
import lombok.SneakyThrows;
import org.apache.commons.lang3.StringUtils;

import java.io.Serializable;
import java.util.Date;

/**
 * Code generated by terminus code gen
 * Desc: 猪场软件消息规则与角色表Model类
 * Date: 2016-05-31
 * Author: chk@terminus.io
 */
@Data
public class DoctorMessageRuleRole implements Serializable {

    private static final long serialVersionUID = -4099522632279358394L;
    private static final ObjectMapper OBJECT_MAPPER = JsonMapper.JSON_NON_EMPTY_MAPPER.getMapper();

    private Long id;

    /**
     * 预警类型id
     */
    private Long ruleId;

    /**
     * 消息规则模板id
     */
    private Long templateId;

    /**
     * 猪场id
     */
    private Long farmId;

    /**
     * 子账号的角色id
     */
    private Long roleId;

    /**
     * 规则值, json值
     */
    private String ruleValue;

    /**
     * 是否使用默认配置
     */
    private Integer useDefault;

    /**
     * 消息发送渠道, 多个以逗号分隔. 0->站内信, 1->短信, 2->邮箱
     */
    private String channels;

    /**
     * 创建时间
     */
    private Date createdAt;

    /**
     * 更新时间
     */
    private Date updatedAt;

    /**
     * 获取规则值的对象类型
     */
    @SneakyThrows
    public Rule getRule() {
        if (StringUtils.isNotBlank(this.ruleValue)) {
            return OBJECT_MAPPER.readValue(this.ruleValue, new TypeReference<Rule>() {});
        }
        return null;
    }
}
