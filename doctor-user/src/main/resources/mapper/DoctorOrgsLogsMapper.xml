<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 ~ Desc:
 ~ Mail: [ your email ]
 ~ Date: 2018-06-13 19:41:03
 ~ Created by [ your name ]
-->

<mapper namespace="DoctorOrgsLogs">
    <resultMap id="DoctorOrgsLogsMap" type="DoctorOrgsLogs">
        <id property="id" column="id"/>
        <result property="orgId" column="org_id"/>
        <result property="orgFrotName" column="org_frot_name"/>
        <result property="orgLaterName" column="org_later_name"/>
        <result property="creatorId" column="creator_id"/>
        <result property="creatorName" column="creator_name"/>
        <result property="updatorId" column="updator_id"/>
        <result property="updatorName" column="updator_name"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        doctor_orgs_logs
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `org_id`, `org_frot_name`, `org_later_name`, `creator_id`, `creator_name`, `updator_id`, `updator_name`, 
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{orgId}, #{orgFrotName}, #{orgLaterName}, #{creatorId}, #{creatorName}, #{updatorId}, #{updatorName}, 
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="orgFrotName != null">AND `org_frot_name` = #{orgFrotName}</if>
            <if test="orgLaterName != null">AND `org_later_name` = #{orgLaterName}</if>
            <if test="creatorId != null">AND `creator_id` = #{creatorId}</if>
            <if test="creatorName != null">AND `creator_name` = #{creatorName}</if>
            <if test="updatorId != null">AND `updator_id` = #{updatorId}</if>
            <if test="updatorName != null">AND `updator_name` = #{updatorName}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="DoctorOrgsLogs" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorOrgsLogsMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorOrgsLogsMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorOrgsLogs">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="orgId != null">`org_id` = #{orgId},</if>
            <if test="orgFrotName != null">`org_frot_name` = #{orgFrotName},</if>
            <if test="orgLaterName != null">`org_later_name` = #{orgLaterName},</if>
            <if test="creatorId != null">`creator_id` = #{creatorId},</if>
            <if test="creatorName != null">`creator_name` = #{creatorName},</if>
            <if test="updatorId != null">`updator_id` = #{updatorId},</if>
            <if test="updatorName != null">`updator_name` = #{updatorName},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>
    
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorOrgsLogsMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="DoctorOrgsLogsMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

</mapper>
