<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorOrg">
    <resultMap id="DoctorOrgMap" type="DoctorOrg">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="mobile" property="mobile"/>
        <result column="parent_id" property="parentId"/>
        <result column="type" property="type"/>
        <result column="license" property="license"/>
        <result column="out_id" property="outId"/>
        <result column="extra" property="extra"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        doctor_orgs
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        name, mobile, parent_id, `type`, license, out_id, extra, created_at, updated_at
    </sql>

    <sql id="vals">
        #{name}, #{mobile}, #{parentId}, #{type}, #{license}, #{outId}, #{extra}, now(), now()
    </sql>

    <insert id="create" parameterType="DoctorOrg" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE
        id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="findByName" parameterType="string" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE `name` = #{name}
    </select>

    <select id="findName" parameterType="long" resultMap="DoctorOrgMap" >
        SELECT name
        FROM doctor_orgs
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="DoctorOrg">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="license != null">license = #{license},</if>
            <if test="outId != null">out_id = #{outId},</if>
            <if test="extra != null">extra = #{extra},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateName" parameterType="map">
        UPDATE doctor_orgs
        set name = #{name}
        WHERE id = #{id}
    </update>

    <update id="updateBarnName" parameterType="map">
        UPDATE doctor_barns
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updateFarmsName" parameterType="map">
        UPDATE doctor_farms
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updateGroupEventName" parameterType="map">
        UPDATE doctor_group_events
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updateGroupName" parameterType="map">
        UPDATE doctor_groups
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updatePigEventsName" parameterType="map">
        UPDATE doctor_pig_events
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updatePigScoreApplyName" parameterType="map">
        UPDATE doctor_pig_score_applys
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updatePigName" parameterType="map">
        UPDATE doctor_pigs
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updateGroupDaileName" parameterType="map">
        UPDATE doctor_group_dailies
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <update id="updatePigDailieName" parameterType="map">
        UPDATE doctor_pig_dailies
        set  org_name = #{name}
        WHERE org_id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="findAll" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
    </select>

    <select id="findOrgByParentId" parameterType="long" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE
        parent_id = #{parentId}
    </select>

    <sql id="criteria">
        1=1
        <if test="name != null">AND `name` = #{name}</if>
        <if test="fuzzyName != null">AND `name` LIKE concat('%', #{fuzzyName}, '%')</if>
        <if test="id != null">AND `id` = #{id}</if>
        <if test="type != null">AND `type` = #{type}</if>
        <if test="parentId != null">AND `parent_id` = #{parentId}</if>
    </sql>
    <select id="count" parameterType="map" resultType="long">
        SELECT count(*)
        FROM <include refid="tb"/>
        WHERE <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE <include refid="criteria"/>
        <if test="fuzzyName != null">
        ORDER BY instr(`name`, #{fuzzyName}) ASC, LENGTH (`name`) ASC
        </if>
        limit #{offset}, #{limit}
    </select>

    <select id="findByFuzzyName" parameterType="map" resultMap="DoctorOrgMap">
        SELECT id, `name`
        FROM <include refid="tb" />
        WHERE `name` LIKE concat('%', #{fuzzyName}, '%')
        <if test="type != null">AND `type` =  #{type} </if>
        ORDER BY instr(`name`, #{fuzzyName}) ASC, LENGTH (`name`) ASC
        limit 0, 20
    </select>

    <update id="bindDepartment" parameterType="map" >
        UPDATE
        <include refid="tb"/>
        SET parent_id = #{parentId}, `type` = 2
        WHERE
        id IN
        <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
            #{orgId}
        </foreach>
    </update>

    <update id="unbindDepartment" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET parent_id = 0, `type` = 1
        WHERE
        id IN
        <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
            #{orgId}
        </foreach>
    </update>

    <select id="findExcludeIds" parameterType="map" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        WHERE
        1=1
        <if test="orgIds !=null &amp;&amp; orgIds.size()>0">
        AND id NOT IN
        <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">
            #{orgId}
        </foreach>
        </if>
    </select>

    <select id="findByType" parameterType="int" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        WHERE
        `type` = #{type}
    </select>

    <select id="findByMobile" parameterType="string" resultMap="DoctorOrgMap">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        WHERE
        `mobile` = #{mobile}
    </select>
    <select id="findGroupcompanyByOrgId" parameterType="long" resultMap="DoctorOrgMap">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb"/>
        WHERE
        id = #{orgId}
    </select>


    <select id="findOrgByGroup" parameterType="map" resultMap="DoctorOrgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE
        id in
        <foreach collection="orgIds" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and parent_id = #{groupId}
    </select>
</mapper>