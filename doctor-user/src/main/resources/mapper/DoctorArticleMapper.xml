<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DoctorArticle">
    <resultMap id="DoctorArticleMap" type="DoctorArticle">
        <id property="id" column="id"/>
        <result property="categoryId" column="categoryId"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        doctor_articles
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `categoryId`, `title`, `content`, `status`, 
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{categoryId}, #{title}, #{content}, #{status}, 
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="categoryId != null">AND `categoryId` = #{categoryId}</if>
            <if test="title != null">AND `title` = #{title}</if>
            <if test="content != null">AND `content` = #{content}</if>
            <if test="status != null">AND `status` = #{status}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="DoctorArticle" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorArticleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorArticleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorArticle">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="categoryId != null">`categoryId` = #{categoryId},</if>
            <if test="title != null">`title` = #{title},</if>
            <if test="content != null">`content` = #{content},</if>
            <if test="status != null">`status` = #{status},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <!--  查询记录数  -->
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <!--  分页  -->
    <select id="paging" parameterType="map" resultMap="DoctorArticleMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="DoctorArticleMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

</mapper>
