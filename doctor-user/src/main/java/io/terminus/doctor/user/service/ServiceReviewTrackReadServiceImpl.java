package io.terminus.doctor.user.service;

import io.terminus.doctor.user.dao.ServiceReviewTrackDao;
import io.terminus.doctor.user.model.DoctorServiceReview;
import io.terminus.doctor.user.model.ServiceReviewTrack;



import com.google.common.base.Throwables;
import io.terminus.common.model.Response;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * Code generated by terminus code gen
 * Desc: 读服务实现类
 * Date: 2016-05-31
 */
@Slf4j
@Service
public class ServiceReviewTrackReadServiceImpl implements ServiceReviewTrackReadService {

    private final ServiceReviewTrackDao serviceReviewTrackDao;

    @Autowired
    public ServiceReviewTrackReadServiceImpl(ServiceReviewTrackDao ServiceReviewTrackDao) {
        this.serviceReviewTrackDao = ServiceReviewTrackDao;
    }

    @Override
    public Response<ServiceReviewTrack> findServiceReviewTrackById(Long serviceReviewTrackId) {
        try {
            return Response.ok(serviceReviewTrackDao.findById(serviceReviewTrackId));
        } catch (Exception e) {
            log.error("find serviceReviewTrack by id failed, serviceReviewTrackId:{}, cause:{}", serviceReviewTrackId, Throwables.getStackTraceAsString(e));
            return Response.fail("serviceReviewTrack.find.fail");
        }
    }

    @Override
    public Response<List<ServiceReviewTrack>> findByUserId(Long userId) {
        Response<List<ServiceReviewTrack>> response = new Response<>();
        try{
            response.setResult(serviceReviewTrackDao.findByUserId(userId));
        }catch(Exception e) {
            log.error("find serviceReviewTrack failed, cause:{}", Throwables.getStackTraceAsString(e));
            response.setError("serviceReviewTrack.find.fail");
        }
        return response;
    }

    @Override
    public Response<List<ServiceReviewTrack>> findByUserIdAndType(Long userId, DoctorServiceReview.Type type) {
        Response<List<ServiceReviewTrack>> response = new Response<>();
        try{
            response.setResult(serviceReviewTrackDao.findByUserIdAndType(userId, type));
        }catch(Exception e) {
            log.error("find serviceReviewTrack failed, cause:{}", Throwables.getStackTraceAsString(e));
            response.setError("serviceReviewTrack.find.fail");
        }
        return response;
    }

    @Override
    public Response<ServiceReviewTrack> findLastByUserIdAndType(Long userId, DoctorServiceReview.Type type) {
        Response<ServiceReviewTrack> response = new Response<>();
        try{
            response.setResult(serviceReviewTrackDao.findLastByUserIdAndType(userId, type));
        }catch(Exception e) {
            log.error("find serviceReviewTrack failed, cause:{}", Throwables.getStackTraceAsString(e));
            response.setError("serviceReviewTrack.find.fail");
        }
        return response;
    }
}
