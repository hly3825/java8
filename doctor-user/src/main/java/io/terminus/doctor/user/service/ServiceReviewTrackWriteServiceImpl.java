package io.terminus.doctor.user.service;

import com.google.common.base.Throwables;
import io.terminus.boot.rpc.common.annotation.RpcProvider;
import io.terminus.common.model.Response;
import io.terminus.doctor.user.dao.ServiceReviewTrackDao;
import io.terminus.doctor.user.model.ServiceReviewTrack;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Code generated by terminus code gen
 * Desc: 写服务实现类
 * Date: 2016-05-31
 */
@Slf4j
@Service
@RpcProvider
public class ServiceReviewTrackWriteServiceImpl implements ServiceReviewTrackWriteService {

    private final ServiceReviewTrackDao serviceReviewTrackDao;

    @Autowired
    public ServiceReviewTrackWriteServiceImpl(ServiceReviewTrackDao serviceReviewTrackDao) {
        this.serviceReviewTrackDao = serviceReviewTrackDao;
    }

    @Override
    public Response<Long> createServiceReviewTrack(ServiceReviewTrack serviceReviewTrack) {
        try {
            serviceReviewTrackDao.create(serviceReviewTrack);
            return Response.ok(serviceReviewTrack.getId());
        } catch (Exception e) {
            log.error("create serviceReviewTrack failed, serviceReviewTrack:{}, cause:{}", serviceReviewTrack, Throwables.getStackTraceAsString(e));
            return Response.fail("serviceReviewTrack.create.fail");
        }
    }

    @Override
    public Response<Boolean> updateServiceReviewTrack(ServiceReviewTrack serviceReviewTrack) {
        try {
            return Response.ok(serviceReviewTrackDao.update(serviceReviewTrack));
        } catch (Exception e) {
            log.error("update serviceReviewTrack failed, serviceReviewTrack:{}, cause:{}", serviceReviewTrack, Throwables.getStackTraceAsString(e));
            return Response.fail("serviceReviewTrack.update.fail");
        }
    }

    @Override
    public Response<Boolean> deleteServiceReviewTrackById(Long serviceReviewTrackId) {
        try {
            return Response.ok(serviceReviewTrackDao.delete(serviceReviewTrackId));
        } catch (Exception e) {
            log.error("delete serviceReviewTrack failed, serviceReviewTrackId:{}, cause:{}", serviceReviewTrackId, Throwables.getStackTraceAsString(e));
            return Response.fail("serviceReviewTrack.delete.fail");
        }
    }
}
