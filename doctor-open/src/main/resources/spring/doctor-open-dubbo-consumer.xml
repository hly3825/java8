<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015 杭州端点网络科技有限公司
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- user services -->
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.user.service.UserReadService" id="userReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.user.service.UserWriteService" id="userWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.DoctorMobileMenuReadService" id="doctorMobileMenuReadService" check="false"/>

    <!-- file services -->
    <dubbo:reference version="1.0.0" interface="io.terminus.parana.file.service.UserFileService" id="userFileService" check="false" retries="0"/>
    <dubbo:reference version="1.0.0" interface="io.terminus.parana.file.service.UserFolderService" id="userFolderService" check="false" retries="0"/>

    <!-- config service -->
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.config.service.ConfigReadService" id="configReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.config.service.ConfigWriteService" id="configWriteService" check="false"/>

    <!--farm service-->
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.DoctorFarmReadService" id="doctorFarmReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.DoctorFarmWriteService" id="doctorFarmWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.DoctorServiceReviewReadService" id="doctorServiceReviewReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.DoctorServiceReviewWriteService" id="doctorServiceReviewWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.DoctorUserReadService" id="doctorUserReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.DoctorOrgReadService" id="doctorOrgReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.DoctorOrgWriteService" id="doctorOrgWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.business.DoctorServiceReviewService" id="doctorServiceReviewService" check="false"/>

    <!--image service-->
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.basic.service.DoctorCarouselFigureReadService" id="doctorCarouselFigureReadService" check="false"/>

    <!-- message service -->
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.ReceiverGroupReadService" id="receiverGroupReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.ReceiverGroupWriteService" id="receiverGroupWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.SubscriptionReadService" id="subscriptionReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.SubscriptionWriteService" id="subscriptionWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.MessageTemplateReadService" id="messageTemplateReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.MessageTemplateWriteService" id="messageTemplateWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.MessageReadService" id="messageReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.MessageWriteService" id="messageWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.NotifyReadService" id="notifyReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.msg.service.NotifyWriteService" id="notifyWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.user.service.DeviceReadService" id="deviceReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.user.service.DeviceWriteService" id="deviceWriteService" check="false"/>

    <!-- auth services -->
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.parana.user.auth.UserRoleLoader" id="userRoleLoader" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.SellerReadService" id="sellerReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.SellerWriteService" id="sellerWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.SellerRoleReadService" id="sellerRoleReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.SellerRoleWriteService" id="sellerRoleWriteService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.OperatorRoleReadService" id="operatorRoleReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.UserBindReadService" id="userBindReadService" check="false"/>
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.user.service.UserBindWriteService" id="userBindWriteService" check="false"/>

    <!--event service-->
    <dubbo:reference version="1.0.0" retries="0" interface="io.terminus.doctor.event.service.DoctorPigTypeStatisticReadService" id="doctorPigTypeStatisticReadService" check="false"/>

</beans>
