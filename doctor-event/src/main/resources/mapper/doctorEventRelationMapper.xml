<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorEventRelation">
    <resultMap id="DoctorEventRelationMap" type="DoctorEventRelation">
        <id column="id" property="id"/>
        <result column="origin_pig_event_id" property="originPigEventId"/>
        <result column="origin_group_event_id" property="originGroupEventId"/>
        <result column="trigger_pig_event_id" property="triggerPigEventId"/>
        <result column="trigger_group_event_id" property="triggerGroupEventId"/>
        <result column="status" property="status"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        doctor_event_relations
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
       origin_pig_event_id, origin_group_event_id, trigger_pig_event_id, trigger_group_event_id, status, created_at, updated_at
    </sql>

    <sql id="vals">
       #{originPigEventId}, #{originGroupEventId}, #{triggerPigEventId}, #{triggerGroupEventId}, #{status}, now(), now()
    </sql>

    <insert id="create" parameterType="DoctorEventRelation" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        <foreach collection="list" item="i" separator=",">
            (#{i.originPigEventId}, #{i.originGroupEventId}, #{i.triggerPigEventId},  #{i.triggerGroupEventId}, #{i.status}, now(), now())
        </foreach>
    </insert>

    <select id="findById" parameterType="long" resultType="DoctorEventRelation" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="long" resultType="DoctorEventRelation" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorEventRelation">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="originPigEventId != null">origin_pig_event_id = #{originPigEventId},</if>
            <if test="originGroupEventId != null">origin_group_event_id = #{originGroupEventId},</if>
            <if test="triggerPigEventId != null">trigger_pig_event_id = #{triggerPigEventId},</if>
            <if test="triggerGroupEventId != null">trigger_group_target_type = #{triggerGroupEventId},</if>
            <if test="status != null">status = #{status},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" item="i" open="(" separator="," close=")">
            #{i}
        </foreach>
    </delete>

    <sql id="criteria">
        <where>
            <if test="originPigEventId != null">AND origin_pig_event_id = #{originPigEventId}</if>
            <if test="originGroupEventId != null">AND origin_group_event_id = #{originGroupEventId}</if>
            <if test="triggerPigEventId != null">AND trigger_pig_event_id = #{triggerPigEventId}</if>
            <if test="triggerGroupEventId != null">AND trigger_group_event_id = #{triggerGroupEventId}</if>
            <if test="status != null">AND status = #{status}</if>
        </where>
    </sql>

    <select id="list" parameterType="map" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        LIMIT #{offset}, #{limit}
    </select>


    <select id="findByPigTrigger" parameterType="long" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE
        trigger_pig_event_id = #{triggerPigEventId}
        AND status = 1
    </select>

    <select id="findByGroupTrigger" parameterType="long" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE
        trigger_group_event_id = #{triggerGroupEventId}
        AND status = 1
    </select>

    <select id="findByPigOrigin" parameterType="long" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE
        origin_pig_event_id = #{originPigEventId}
        AND status = 1
    </select>

    <select id="findByGroupOrigin" parameterType="long" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE
        origin_group_event_id = #{originGroupEventId}
        AND status = 1
    </select>

    <select id="findGroupEventByGroupOrigin" parameterType="long" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE
        origin_group_event_id = #{triggerGroupEventId}
        AND status = 1
    </select>

    <select id="findPigEventByGroupOrigin" parameterType="long" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE
        origin_group_event_id = #{triggerPigEventId}
        AND status = 1
    </select>

    <select id="findGroupEventByPigOrigin" parameterType="long" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE
        origin_pig_event_id = #{triggerGroupEventId}
        AND status = 1
    </select>

    <select id="findPigEventByPigOrigin" parameterType="long" resultMap="DoctorEventRelationMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE
        origin_pig_event_id = #{triggerPigEventId}
        AND status = 1
    </select>


    <update id="updateGroupEventStatus" parameterType="map" >
        UPDATE <include refid="tb"/>
        set status = #{status}
        WHERE
        origin_group_event_id IN
        <foreach collection="list" item="i" open="(" separator="," close=")" >
            #{i}
        </foreach>
        OR
        trigger_group_event_id IN
        <foreach collection="list" item="i" open="(" separator="," close=")" >
            #{i}
        </foreach>
    </update>

    <update id="updatePigEventStatus" parameterType="map" >
        UPDATE <include refid="tb"/>
        set status = #{status}
        WHERE
        origin_pig_event_id IN
        <foreach collection="list" item="i" open="(" separator="," close=")" >
            #{i}
        </foreach>
        OR
        trigger_pig_event_id IN
        <foreach collection="list" item="i" open="(" separator="," close=")" >
            #{i}
        </foreach>
    </update>

    <update id="updatePigEventStatusUnderHandling" parameterType="map" >
        UPDATE <include refid="tb"/>
        set status = #{status}
        WHERE
        status = 0 AND
        origin_pig_event_id IN
        <foreach collection="list" item="i" open="(" separator="," close=")" >
            #{i}
        </foreach>
        OR
        trigger_pig_event_id IN
        <foreach collection="list" item="i" open="(" separator="," close=")" >
            #{i}
        </foreach>
    </update>

</mapper>