<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorKpi">

    <sql id="criteria">
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="startAt != null">AND event_at &gt;= #{startAt}</if>
        <if test="endAt != null">AND event_at &lt;= #{endAt}</if>
    </sql>

    <!-- 预产胎数-->
    <select id="preDeliveryCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events
        where type = 9
        and current_mating_count = 1
        <include refid="criteria"/>
    </select>

    <!-- 分娩窝数-->
    <select id="deliveryCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 分娩初生重-->
    <select id="farrowWeightAvg" parameterType="map" resultType="double">
        select ifnull(sum(farrow_weight)/case sum(live_count) when 0 then 1 else sum(live_count) end , 0)
        from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 产活仔数-->
    <select id="deliveryLiveCounts" parameterType="map" resultType="int">
        select ifnull(sum(live_count),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 产健仔数-->
    <select id="deliveryHealthCounts" parameterType="map" resultType="int">
        select ifnull(sum(health_count),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 产弱仔数-->
    <select id="deliveryWeakCounts" parameterType="map" resultType="int">
        select ifnull(sum(weak_count),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 产死仔数-->
    <select id="deliveryDeadCounts" parameterType="map" resultType="int">
        select ifnull(sum(dead_count),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 产木乃伊数-->
    <select id="deliveryMnyCounts" parameterType="map" resultType="int">
        select ifnull(sum(mny_count),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 死黑木畸 -->
    <select id="getDeliveryDeadBlackMuJi" parameterType="map" resultType="int">
        select ifnull(sum(dead_count),0) + ifnull(sum(black_count),0) + ifnull(sum(mny_count),0) + ifnull(sum(jx_count),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!--产黑胎数 -->
    <select id="deliveryBlackCounts" parameterType="map" resultType="int">
        select ifnull(sum(black_count),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!--产畸形数 -->
    <select id="deliveryJxCounts" parameterType="map" resultType="int">
        select ifnull(sum(jx_count),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 总产仔数-->
    <select id="deliveryAllCounts" parameterType="map" resultType="int">
        select ifnull(sum(health_count+ weak_count+ jx_count+ mny_count+ dead_count + black_count),0) from
        doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 窝均健仔数-->
    <select id="deliveryHealthCountsAvg" parameterType="map" resultType="double">
        select ifnull(sum(health_count)/count(1),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 窝均弱仔数-->
    <select id="deliveryWeakCountsAvg" parameterType="map" resultType="double">
        select ifnull(sum(weak_count)/count(1),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 窝均产仔数-->
    <select id="deliveryAllCountsAvg" parameterType="map" resultType="double">
        select ifnull(sum(health_count+ weak_count+ jx_count+ mny_count+ dead_count + black_count)/count(1),0) from
        doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 窝均活仔数-->
    <select id="deliveryLiveCountsAvg" parameterType="map" resultType="double">
        select ifnull(sum(live_count)/count(1),0) from doctor_pig_events
        where type = 15
        <include refid="criteria"/>
    </select>

    <!-- 断奶母猪数-->
    <select id="weanSowCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events
        where type = 16
        <include refid="criteria"/>
    </select>

    <!-- 断奶仔猪数-->
    <select id="weanPigletCounts" parameterType="map" resultType="int">
        select ifnull(sum(wean_count),0) from doctor_pig_events
        where type = 16
        <include refid="criteria"/>
    </select>

    <!-- 断奶仔猪均重-->
    <select id="weanPigletWeightAvg" parameterType="map" resultType="double">
        select ifnull(sum(wean_count*wean_avg_weight)/sum(wean_count),0) from doctor_pig_events
        where type = 16
        <include refid="criteria"/>
    </select>

    <!-- 窝均断奶数-->
    <select id="weanPigletCountsAvg" parameterType="map" resultType="double">
        select ifnull(sum(wean_count)/count(1),0) from doctor_pig_events
        where type = 16
        <include refid="criteria"/>
    </select>

    <!-- 断奶日龄-->
    <select id="getWeanDayAgeAvg" parameterType="map" resultType="double">
        select ifnull(sum(feed_days*wean_count)/case sum(wean_count) when 0 then 1 else sum(wean_count) end , 0)
        from doctor_pig_events
        where type = 16
        <include refid="criteria"/>
    </select>

    <!-- 销售情况: 母猪 -->
    <select id="getSaleSow" parameterType="map" resultType="int">
        SELECT
        count(1)
        FROM doctor_pig_events
        WHERE
        change_type_id = 109 AND -- 变动类型是销售
        type = 6 AND -- 事件类型是离场
        kind = 1 -- 猪类母猪
        <include refid="criteria"/>
    </select>

    <!-- 销售情况: 公猪 -->
    <select id="getSaleBoar" parameterType="map" resultType="int">
        SELECT
        count(1)
        FROM doctor_pig_events
        WHERE
        change_type_id = 109 AND -- 变动类型是销售
        type = 6 AND -- 事件类型是离场
        kind = 2 -- 猪类公猪
        <include refid="criteria"/>
    </select>

    <!-- 销售情况: 保育猪（产房+保育） -->
    <select id="getSaleNursery" parameterType="map" resultType="int">
        SELECT
        ifnull(sum(quantity),0)
        FROM doctor_group_events
        WHERE
        change_type_id = 109 AND -- 变动类型是销售
        pig_type IN (1, 2) -- 产房 + 保育
        <include refid="criteria"/>
    </select>

    <!-- 销售情况: 育肥猪 -->
    <select id="getSaleFatten" parameterType="map" resultType="int">
        SELECT
        ifnull(sum(quantity),0)
        FROM doctor_group_events
        WHERE
        change_type_id = 109 AND -- 变动类型是销售
        pig_type = 3 -- 育肥猪
        <include refid="criteria"/>
    </select>

    <!-- 死淘情况: 母猪 -->
    <select id="getDeadSow" parameterType="map" resultType="int">
        SELECT
        count(1)
        FROM doctor_pig_events
        WHERE
        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
        type = 6 AND -- 事件类型是离场
        kind = 1 -- 猪类母猪
        <include refid="criteria"/>
    </select>

    <!-- 死淘情况: 公猪 -->
    <select id="getDeadBoar" parameterType="map" resultType="int">
        SELECT
        count(1)
        FROM doctor_pig_events
        WHERE
        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
        type = 6 AND -- 事件类型是离场
        kind = 2 -- 猪类公猪
        <include refid="criteria"/>
    </select>

    <!-- 死淘情况: 产房仔猪 -->
    <select id="getDeadFarrow" parameterType="map" resultType="int">
        SELECT
        ifnull(sum(quantity),0)
        FROM doctor_group_events
        WHERE
        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
        pig_type IN (1, 7) -- 产房仔猪
        <include refid="criteria"/>
    </select>

    <!-- 死淘情况: 保育猪 -->
    <select id="getDeadNursery" parameterType="map" resultType="int">
        SELECT
        ifnull(sum(quantity),0)
        FROM doctor_group_events
        WHERE
        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
        pig_type = 2 -- 保育猪
        <include refid="criteria"/>
    </select>

    <!-- 死淘情况: 育肥猪 -->
    <select id="getDeadFatten" parameterType="map" resultType="int">
        SELECT
        ifnull(sum(quantity),0)
        FROM doctor_group_events
        WHERE
        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
        pig_type = 3 -- 育肥猪
        <include refid="criteria"/>
    </select>

    <!-- 死淘情况: 后备猪 -->
    <select id="getDeadHoubei" parameterType="map" resultType="int">
        SELECT
        ifnull(sum(quantity),0)
        FROM doctor_group_events
        WHERE
        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
        pig_type IN (4, 8) -- 后备猪
        <include refid="criteria"/>
    </select>

    <!-- 死淘情况: 产房死淘率 -->
    <select id="getDeadFarrowRate" parameterType="map" resultType="double">
        SELECT
        a.dead_count / case (b.trans_in_count + c.farrow_count) when 0 then 1 else (b.trans_in_count + c.farrow_count)
        end
        FROM
        (
        SELECT
        ifnull(farm_id, #{farmId}) as farm_id,
        ifnull(sum(quantity),0) AS dead_count
        FROM doctor_group_events
        WHERE
        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
        pig_type IN (1, 7) -- 产房仔猪
        <include refid="criteria"/>
        ) AS a
        LEFT JOIN
        (
        SELECT
        ifnull(farm_id, #{farmId}) as farm_id,
        ifnull(sum(quantity),0) AS trans_in_count
        FROM doctor_group_events
        WHERE
        pig_type IN (1, 7) AND -- 产房仔猪
        type = 2 AND -- 转入猪群事件
        trans_group_type != 0 -- 排除掉内转
        <include refid="criteria"/>
        ) AS b
        ON a.farm_id = b.farm_id
        LEFT JOIN
        (
        SELECT
        farm_id,
        farrow_count -- 当天产房仔猪存栏
        FROM doctor_daily_reports
        WHERE
        farm_id = #{farmId} AND
        sum_at = date_format(#{endAt}, '%Y-%m-%d')
        ) AS c
        ON a.farm_id = c.farm_id
    </select>

    <!-- 死淘情况: 保育死淘率 -->
    <select id="getDeadNurseryRate" parameterType="map" resultType="double">
        SELECT
        a.dead_count / case (b.trans_in_count + c.nursery_count) when 0 then 1 else (b.trans_in_count + c.nursery_count)
        end
        FROM
        (
        SELECT
        ifnull(farm_id, #{farmId}) as farm_id,
        ifnull(sum(quantity),0) AS dead_count
        FROM doctor_group_events
        WHERE
        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
        pig_type = 2 -- 保育猪
        <include refid="criteria"/>
        ) AS a
        LEFT JOIN
        (
        SELECT
        ifnull(farm_id, #{farmId}) as farm_id,
        ifnull(sum(quantity),0) AS trans_in_count
        FROM doctor_group_events
        WHERE
        pig_type = 2 AND -- 保育猪
        type = 2 AND -- 转入猪群事件
        trans_group_type != 0 -- 排除掉内转
        <include refid="criteria"/>
        ) AS b
        ON a.farm_id = b.farm_id
        LEFT JOIN
        (
        SELECT
        farm_id,
        nursery_count -- 当天保育存栏
        FROM doctor_daily_reports
        WHERE
        farm_id = #{farmId} AND
        sum_at = date_format(#{endAt}, '%Y-%m-%d')
        ) AS c
        ON a.farm_id = c.farm_id
    </select>

    <!-- 死淘情况: 育肥死淘率 -->
    <select id="getDeadFattenRate" parameterType="map" resultType="double">
        SELECT
        a.dead_count / case (b.trans_in_count + c.fatten_count) when 0 then 1 else (b.trans_in_count + c.fatten_count)
        end
        FROM
        (
        SELECT
        ifnull(farm_id, #{farmId}) as farm_id,
        ifnull(sum(quantity),0) AS dead_count
        FROM doctor_group_events
        WHERE
        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
        pig_type = 3 -- 育肥猪
        <include refid="criteria"/>
        ) AS a
        LEFT JOIN
        (
        SELECT
        ifnull(farm_id, #{farmId}) as farm_id,
        ifnull(sum(quantity),0) AS trans_in_count
        FROM doctor_group_events
        WHERE
        pig_type = 3 AND -- 育肥猪
        type = 2 AND -- 转入猪群事件
        trans_group_type != 0 -- 排除掉内转
        <include refid="criteria"/>
        ) AS b
        ON a.farm_id = b.farm_id
        LEFT JOIN
        (
        SELECT
        farm_id,
        fatten_count -- 当天育肥存栏
        FROM doctor_daily_reports
        WHERE
        farm_id = #{farmId} AND
        sum_at = date_format(#{endAt}, '%Y-%m-%d')
        ) AS c
        ON a.farm_id = c.farm_id
    </select>

    <!-- 配后备-->
    <select id="firstMatingCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.`doctor_mate_type` = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= #{endAt}</if>
    </select>

    <!-- 配流产-->
    <select id="abortionMatingCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.`doctor_mate_type` in (2, 3)
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= #{endAt}</if>
    </select>

    <!-- 配断奶-->
    <select id="weanMatingCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.`doctor_mate_type` = 4
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= #{endAt}</if>
    </select>

    <!-- 配阴性-->
    <select id="yinMatingCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.`doctor_mate_type` = 5
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= #{endAt}</if>
    </select>

    <!-- 配返情-->
    <select id="fanQMatingCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.`doctor_mate_type` = 6
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= #{endAt}</if>
    </select>


    <!-- 妊娠检查阳性-->
    <select id="checkYangCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 11
        and t1.kind = 1
        and t1.`preg_check_result` = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`check_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`check_date` &lt;= #{endAt}</if>
    </select>

    <!-- 返情-->
    <select id="checkFanQCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 11
        and t1.kind = 1
        and t1.`preg_check_result` = 4
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`check_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`check_date` &lt;= #{endAt}</if>
    </select>

    <!-- 妊娠检查阴性-->
    <select id="checkYingCounts" parameterType="map" resultType="int">
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 11
        and t1.kind = 1
        and t1.`preg_check_result` = 2
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`check_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`check_date` &lt;= #{endAt}</if>
    </select>

    <!-- 流产-->
    <select id="checkAbortionCounts" parameterType="map" resultType="int">
        select
        (
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 11
        and t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`check_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`check_date` &lt;= #{endAt}</if>
        and t1.`preg_check_result` = 3
        )
        +
        (
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 13
        and t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`abortion_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`abortion_date` &lt;= #{endAt}</if>
        ) from dual
    </select>


    <!-- 估算受胎率 -->
    <select id="assessPregnancyRate" parameterType="map" resultType="double">
        select
        (
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 11
        and t1.kind = 1
        and t1.`preg_check_result` = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`check_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`check_date` &lt;= #{endAt}</if>
        )
        /
        (
        select case ifnull(count(1),0) when 0 then 1 else count(1) end
        from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.current_mating_count = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= DATE_SUB(#{startAt}, INTERVAL 28 DAY)</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= DATE_SUB(#{endAt}, INTERVAL 28 DAY)</if>
        ) from dual
    </select>

    <!-- 实际受胎率 -->
    <select id="realPregnancyRate" parameterType="map" resultType="double">
        select
        (
        select ifnull(count(1),0)
        from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.current_mating_count = 1
        and t1.`is_impregnation` = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= #{endAt}</if>
        ) /
        (
        select case ifnull(count(1),0) when 0 then 1 else count(1) end
        from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.current_mating_count = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= #{endAt}</if>
        ) from dual
    </select>

    <!-- 估算分娩率 -->
    <select id="assessFarrowingRate" parameterType="map" resultType="double">
        select
        (
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 15
        and t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`farrowing_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`farrowing_date` &lt;= #{endAt}</if>
        ) /
        (
        select case ifnull(count(1),0) when 0 then 1 else count(1) end from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= DATE_SUB(#{startAt}, INTERVAL 114 DAY)</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= DATE_SUB(#{endAt}, INTERVAL 114 DAY)</if>
        and t1.current_mating_count = 1
        ) from dual
    </select>


    <!-- 实际配种分娩率 -->
    <select id="realFarrowingRate" parameterType="map" resultType="double">
        select
        (
        select ifnull(count(1),0) from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.current_mating_count = 1
        and t1.`is_delivery` = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= #{endAt}</if>
        ) /
        (
        select case ifnull(count(1),0) when 0 then 1 else count(1) end
        from doctor_pig_events t1
        where
        t1.`type` = 9
        and t1.kind = 1
        and t1.current_mating_count = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`matting_date` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`matting_date` &lt;= #{endAt}</if>
        ) from dual
    </select>

    <!-- NPD -->
    <select id="npd" parameterType="map" resultType="double">
        select (
        select ifnull(sum(npd),0) from doctor_pig_events t1
        where
        t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.`event_at` &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.`event_at` &lt;= #{endAt}</if>
        ) /
        (
        select
        case sum(sow_count)/(case count(1) when 0 then 1 else count(1) end)
        when 0 then 1
        else sum(sow_count)/(case count(1) when 0 then 1 else count(1) end) end
        from doctor_daily_reports
        where 1=1
        <if test="farmId != null">and farm_id = #{farmId}</if>
        <if test="startAt != null">and sum_at &gt;= #{startAt}</if>
        <if test="endAt != null">and sum_at &lt;= #{endAt}</if>
        ) * 12 from dual
    </select>

    <!-- PSY -->
    <select id="psy" parameterType="map" resultType="double">
        SELECT (365 -
        (SELECT
        (SELECT ifnull(sum(npd),0)
        FROM doctor_pig_events t1
        WHERE
        t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.event_at &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.event_at &lt;= #{endAt}</if>
        ) /
        (
        SELECT CASE sum(sow_count)/(CASE count(1) WHEN 0 THEN 1 ELSE count(1) END)
        WHEN 0 THEN 1 ELSE sum(sow_count)/(CASE count(1) WHEN 0 THEN 1 ELSE count(1) END) END
        FROM doctor_daily_reports
        WHERE 1=1
        <if test="farmId != null">and farm_id = #{farmId}</if>
        <if test="startAt != null">and sum_at &gt;= #{startAt}</if>
        <if test="endAt != null">and sum_at &lt;= #{endAt}</if>
        ) * 12
        FROM dual)) / (CASE (
        (SELECT ifnull(sum(preg_days), 0) / (CASE count(1) WHEN 0 THEN 1 ELSE count(1) END)
        FROM doctor_pig_events t1
        WHERE
        t1.`type` = 15
        AND t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.farrowing_date &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.farrowing_date &lt;= #{endAt}</if>
        ) +
        (SELECT ifnull(sum(feed_days), 0) / (CASE count(1) WHEN 0 THEN 1 ELSE count(1) END)
        FROM doctor_pig_events t1
        WHERE
        t1.`type` = 16
        AND t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.partwean_date &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.partwean_date &lt;= #{endAt}</if>
        ))
        WHEN 0 THEN 1
        ELSE (
        (SELECT ifnull(sum(preg_days), 0) / (CASE count(1) WHEN 0 THEN 1 ELSE count(1) END)
        FROM doctor_pig_events t1
        WHERE
        t1.`type` = 15
        AND t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.farrowing_date &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.farrowing_date &lt;= #{endAt}</if>
        ) +
        (SELECT ifnull(sum(feed_days), 0) / (CASE count(1) WHEN 0 THEN 1 ELSE count(1) END)
        FROM doctor_pig_events t1
        WHERE
        t1.`type` = 16
        AND t1.kind = 1
        <if test="farmId != null">and t1.farm_id = #{farmId}</if>
        <if test="startAt != null">and t1.partwean_date &gt;= #{startAt}</if>
        <if test="endAt != null">and t1.partwean_date &lt;= #{endAt}</if>
        ))
        END) * (
        select ifnull(sum(wean_count)/count(1),0) from doctor_pig_events
        where type = 16
        <include refid="criteria"/>
        )
        FROM dual
    </select>

    <!-- 实时存栏: 产房仔猪 -->
    <select id="realTimeLiveStockFarrow" parameterType="map" resultType="int">
        SELECT
        (
          SELECT
            ifnull(sum(quantity), 0) AS nowCount    -- 当前存栏
          FROM
            (
              SELECT id
              FROM doctor_groups
              WHERE `status` = 1 AND pig_type IN (1, 7) AND farm_id = #{farmId}
            ) AS a
            LEFT JOIN doctor_group_tracks b ON a.id = b.group_id
        )
          -
        (
            SELECT
              ifnull(sum(ifnull(delta.inCount, 0)) - sum(ifnull(delta.outCount, 0)) - sum(ifnull(delta.turnCount, 0)), 0) AS deltaCount  -- 算出这段时间的增量
            FROM (
                   SELECT
                     CASE WHEN TYPE = 2 THEN quantity ELSE 0 END AS inCount,
                     CASE WHEN TYPE IN (3, 4, 9) THEN quantity ELSE 0 END AS outCount,
                     CASE WHEN TYPE = 5 THEN 1 ELSE 0 END AS turnCount
                   FROM doctor_group_events
                   WHERE
                     farm_id = #{farmId} AND
                     event_at &gt;= date_add(date(#{date}), INTERVAL 1 day) AND   -- 日期取下一天的天初(因为每天的存栏算的是天末)
                     pig_type IN (1, 7) AND
                     TYPE IN (2, 3, 4, 5, 9)
                 ) AS delta
          )
        FROM DUAL
    </select>

    <!-- 实时存栏: 保育猪 -->
    <select id="realTimeLiveStockNursery" parameterType="map" resultType="int">
        SELECT
        (
            SELECT
              ifnull(sum(quantity), 0) AS nowCount    -- 当前存栏
            FROM
            (
                SELECT id
                FROM doctor_groups
                WHERE `status` = 1 AND pig_type = 2 AND farm_id = #{farmId}
            ) AS a
            LEFT JOIN doctor_group_tracks b ON a.id = b.group_id
        )
        -
        (
            SELECT
              ifnull(sum(ifnull(delta.inCount, 0)) - sum(ifnull(delta.outCount, 0)) - sum(ifnull(delta.turnCount, 0)), 0) AS deltaCount  -- 算出这段时间的增量
            FROM (
                SELECT
                    CASE WHEN TYPE = 2 THEN quantity ELSE 0 END AS inCount,
                    CASE WHEN TYPE IN (3, 4, 9) THEN quantity ELSE 0 END AS outCount,
                    CASE WHEN TYPE = 5 THEN 1 ELSE 0 END AS turnCount
                FROM doctor_group_events
                WHERE
                    farm_id = #{farmId} AND
                    event_at &gt;= date_add(date(#{date}), INTERVAL 1 day) AND   -- 日期取下一天的天初(因为每天的存栏算的是天末)
                    pig_type = 2 AND
                    TYPE IN (2, 3, 4, 5, 9)
            ) AS delta
        )
        FROM DUAL
    </select>

    <!-- 实时存栏: 育肥猪 -->
    <select id="realTimeLiveStockFatten" parameterType="map" resultType="int">
        SELECT
        (
            SELECT
              ifnull(sum(quantity), 0) AS nowCount    -- 当前存栏
            FROM
            (
                SELECT id
                FROM doctor_groups
                WHERE `status` = 1 AND pig_type = 3 AND farm_id = #{farmId}
            ) AS a
            LEFT JOIN doctor_group_tracks b ON a.id = b.group_id
        )
        -
        (
            SELECT
              ifnull(sum(ifnull(delta.inCount, 0)) - sum(ifnull(delta.outCount, 0)) - sum(ifnull(delta.turnCount, 0)), 0) AS deltaCount  -- 算出这段时间的增量
            FROM (
                SELECT
                    CASE WHEN TYPE = 2 THEN quantity ELSE 0 END AS inCount,
                    CASE WHEN TYPE IN (3, 4, 9) THEN quantity ELSE 0 END AS outCount,
                    CASE WHEN TYPE = 5 THEN 1 ELSE 0 END AS turnCount
                FROM doctor_group_events
                WHERE
                    farm_id = #{farmId} AND
                    event_at &gt;= date_add(date(#{date}), INTERVAL 1 day) AND   -- 日期取下一天的天初(因为每天的存栏算的是天末)
                    pig_type = 3 AND
                    TYPE IN (2, 3, 4, 5, 9)
            ) AS delta
        )
        FROM DUAL
    </select>

    <!-- 实时存栏: 后备母猪 -->
    <select id="realTimeLiveStockHoubeiSow" parameterType="map" resultType="int">
        SELECT
        (
            SELECT
              ifnull(sum(quantity), 0) AS nowCount    -- 当前存栏
            FROM
            (
                SELECT id
                FROM doctor_groups
                WHERE `status` = 1 AND pig_type = 4 AND farm_id = #{farmId}
            ) AS a
            LEFT JOIN doctor_group_tracks b ON a.id = b.group_id
        )
        -
        (
            SELECT
              ifnull(sum(ifnull(delta.inCount, 0)) - sum(ifnull(delta.outCount, 0)) - sum(ifnull(delta.turnCount, 0)), 0) AS deltaCount  -- 算出这段时间的增量
            FROM (
                SELECT
                    CASE WHEN TYPE = 2 THEN quantity ELSE 0 END AS inCount,
                    CASE WHEN TYPE IN (3, 4, 9) THEN quantity ELSE 0 END AS outCount,
                    CASE WHEN TYPE = 5 THEN 1 ELSE 0 END AS turnCount
                FROM doctor_group_events
                WHERE
                    farm_id = #{farmId} AND
                    event_at &gt;= date_add(date(#{date}), INTERVAL 1 day) AND   -- 日期取下一天的天初(因为每天的存栏算的是天末)
                    pig_type = 4 AND
                    TYPE IN (2, 3, 4, 5, 9)
            ) AS delta
        )
        FROM DUAL
    </select>

    <!-- 实时存栏: 后备公猪 -->
    <select id="realTimeLiveStockHoubeiBoar" parameterType="map" resultType="int">
        SELECT
        (
            SELECT
              ifnull(sum(quantity), 0) AS nowCount    -- 当前存栏
            FROM
            (
                SELECT id
                FROM doctor_groups
                WHERE `status` = 1 AND pig_type = 8 AND farm_id = #{farmId}
            ) AS a
            LEFT JOIN doctor_group_tracks b ON a.id = b.group_id
        )
        -
        (
            SELECT
              ifnull(sum(ifnull(delta.inCount, 0)) - sum(ifnull(delta.outCount, 0)) - sum(ifnull(delta.turnCount, 0)), 0) AS deltaCount  -- 算出这段时间的增量
            FROM (
                SELECT
                    CASE WHEN TYPE = 2 THEN quantity ELSE 0 END AS inCount,
                    CASE WHEN TYPE IN (3, 4, 9) THEN quantity ELSE 0 END AS outCount,
                    CASE WHEN TYPE = 5 THEN 1 ELSE 0 END AS turnCount
                FROM doctor_group_events
                WHERE
                    farm_id = #{farmId} AND
                    event_at &gt;= date_add(date(#{date}), INTERVAL 1 day) AND   -- 日期取下一天的天初(因为每天的存栏算的是天末)
                    pig_type = 8 AND
                    TYPE IN (2, 3, 4, 5, 9)
            ) AS delta
        )
        FROM DUAL
    </select>

    <!-- 实时存栏: 公猪 -->
    <select id="realTimeLiveStockBoar" parameterType="map" resultType="int">
        SELECT
          (
            SELECT count(1)
            FROM doctor_pigs
            WHERE is_removal = 0 AND pig_type = 2 AND farm_id = #{farmId}
          )
          -
          (
            SELECT
              ifnull(
                ifnull(max(CASE WHEN delta.type = 7 THEN quantity ELSE 0 END), 0) -     -- 进场 - 离场 算出delta数量
                ifnull(max(CASE WHEN delta.type = 6 THEN quantity ELSE 0 END), 0), 0
              )
            FROM (
                  SELECT
                    type,
                    count(type) AS quantity
                  FROM doctor_pig_events
                  WHERE
                    event_at &gt;= date_add(date(#{date}), INTERVAL 1 day) AND
                    farm_id = #{farmId} AND
                    kind = 2 AND type IN (6, 7)
                  GROUP BY type
                ) AS delta
          )
        FROM dual
    </select>

    <!-- 实时存栏: 母猪 -->
    <select id="realTimeLiveStockSow" parameterType="map" resultType="int">
        SELECT
          (
            SELECT count(1)
            FROM doctor_pigs
            WHERE is_removal = 0 AND pig_type = 1 AND farm_id = #{farmId}
          )
          -
          (
            SELECT
              ifnull(
                ifnull(max(CASE WHEN delta.type = 7 THEN quantity ELSE 0 END), 0) -     -- 进场 - 离场 算出delta数量
                ifnull(max(CASE WHEN delta.type = 6 THEN quantity ELSE 0 END), 0), 0
              )
            FROM (
                  SELECT
                    type,
                    count(type) AS quantity
                  FROM doctor_pig_events
                  WHERE
                    event_at &gt;= date_add(date(#{date}), INTERVAL 1 day) AND
                    farm_id = #{farmId} AND
                    kind = 1 AND type IN (6, 7)
                  GROUP BY type
                ) AS delta
          )
        FROM dual
    </select>

    <!-- 实时存栏: 在产房的母猪 -->
    <select id="realTimeLiveStockFarrowSow" parameterType="map" resultType="int">
        SELECT
          (SELECT
             ifnull(count(1), 0)      -- 当前在产房的母猪数量
           FROM (
                  SELECT current_barn_id
                  FROM doctor_pig_tracks
                  WHERE
                    farm_id = #{farmId} AND
                    pig_type = 1 AND
                    is_removal = 0
                ) AS pig
             LEFT JOIN doctor_barns AS barn ON pig.current_barn_id = barn.id
           WHERE barn.pig_type = 7
          )
          -
          (
            SELECT
              ifnull(sum(ifnull(final.inCount, 0)) - sum(ifnull(final.outCount, 0)), 0)  -- 产房: 转入-转出
            FROM (
                   SELECT
                     CASE WHEN ev.pig_type = 7 AND ev.type NOT IN (7, 14)     -- 转配种舍, 转妊娠舍, 离场 都算转出
                       THEN ev.quantity
                     ELSE 0 END AS outCount,
                     CASE WHEN ev.pig_type != 7 AND ev.type = 14 OR (ev.pig_type = 7 AND ev.type = 7)  -- 去分娩, 进场到分娩(没有这种情况), 算转入
                       THEN ev.quantity
                     ELSE 0 END AS inCount
                   FROM (
                          SELECT
                            event.type,
                            barn.pig_type,
                            ifnull(count(barn.pig_type), 0) AS quantity
                          FROM (
                                 SELECT
                                   type,
                                   barn_id
                                 FROM doctor_pig_events
                                 WHERE
                                   farm_id = #{farmId} AND
                                   event_at &gt;= date_add(date(#{date}), INTERVAL 1 day) AND
                                   kind = 1 AND
                                   type IN (2, 6, 7, 10, 12, 14)      -- 限定这几个事件范围
                               ) AS event
                            LEFT JOIN doctor_barns AS barn ON event.barn_id = barn.id
                          WHERE barn.pig_type = 7 OR event.type = 14  -- 限定分娩舍发生的事件
                          GROUP BY event.type, barn.pig_type
                        ) AS ev
                 ) AS final
          )
        FROM dual
    </select>

    <!-- 猪群销售: 基础价格10kg的均价 -->
    <select id="getGroupSaleBasePrice10" parameterType="map" resultType="long">
        SELECT
          ifnull(avg(price),0)
        FROM doctor_group_events
        WHERE
            change_type_id = 109 AND  -- 变动类型是销售
            pig_type IN (1, 2, 7) AND -- 产房仔猪和保育猪
            base_weight = 10
            <include refid="criteria"/>
    </select>

    <!-- 猪群销售: 基础价格15kg的均价 -->
    <select id="getGroupSaleBasePrice15" parameterType="map" resultType="long">
        SELECT
          ifnull(avg(price),0)
        FROM doctor_group_events
        WHERE
            change_type_id = 109 AND  -- 变动类型是销售
            pig_type IN (1, 2, 7) AND -- 产房仔猪和保育猪
            base_weight = 15
            <include refid="criteria"/>
    </select>

    <!-- 猪群销售: 育肥猪均价 -->
    <select id="getGroupSaleFattenPrice" parameterType="map" resultType="long">
        SELECT
          ifnull(avg(price),0)
        FROM doctor_group_events
        WHERE
            change_type_id = 109 AND -- 变动类型是销售
            pig_type = 3 AND         -- 育肥猪
            price != 0
            <include refid="criteria"/>
    </select>

    <!-- 公猪生产月报: 配种次数 -->
    <select id="getBoarMateCount" parameterType="map" resultType="int">
        select ifnull(count(1), 0)
        from doctor_pig_events
        where type = 9
        <include refid="criteria"/>
    </select>

    <!-- 公猪生产月报: 首配母猪头数 -->
    <select id="getBoarSowFirstMateCount" parameterType="map" resultType="int">
        select ifnull(count(1), 0)
        from doctor_pig_events
        where type = 9
        and current_mating_count = 1
        <include refid="criteria"/>
    </select>

    <!-- 公猪生产月报: 受胎头数 -->
    <select id="getBoarSowPregCount" parameterType="map" resultType="int">
        select count(1)
        FROM
        (select farm_id, boar_code, pig_code, parity
        from doctor_pig_events
        where type = 9
        <include refid="criteria"/>
        group by farm_id, boar_code, pig_code,parity) as t1
        left join doctor_pig_events t2 on t1.farm_id =t2.farm_id and t1.boar_code = t2.boar_code and t1.pig_code = t2.pig_code and t1.parity = t2.parity
        where t2.type = 11
        and t2.preg_check_result = 1
    </select>

    <!-- 公猪生产月报: 产仔母猪数 -->
    <select id="getBoarSowFarrowCount" parameterType="map" resultType="int">
        select ifnull(count(1),0)
        FROM
        (select farm_id, boar_code, pig_code, parity
        from doctor_pig_events
        where type = 9
        <include refid="criteria"/>
        group by farm_id, boar_code, pig_code,parity) as t1
        left join doctor_pig_events t2 on t1.farm_id =t2.farm_id and t1.boar_code = t2.boar_code and t1.pig_code = t2.pig_code and t1.parity = t2.parity
        where t2.type = 15
    </select>


    <!-- 公猪生产月报: 平均产仔数 -->
    <select id="getBoarSowFarrowAvgCount" parameterType="map" resultType="double">
        select ifnull(sum(t2.live_count + t2.dead_count + t2.jx_count + t2.mny_count + t2.black_count),0)/case ifnull(count(1),1) when 0 then 1 else ifnull(count(1),1) end
        FROM
        (select farm_id, boar_code, pig_code, parity
        from doctor_pig_events
        where type = 9
        <include refid="criteria"/>
        group by farm_id, boar_code, pig_code,parity) as t1
        left join doctor_pig_events t2 on t1.farm_id =t2.farm_id and t1.boar_code = t2.boar_code and t1.pig_code = t2.pig_code and t1.parity = t2.parity
        where t2.type = 15
    </select>

    <!-- 公猪生产月报: 平均产活仔数 -->
    <select id="getBoarSowFarrowLiveAvgCount" parameterType="map" resultType="double">
        select ifnull(sum(live_count),0)/case ifnull(count(1),1) when 0 then 1 else ifnull(count(1),1) end
        FROM
        (select farm_id, boar_code, pig_code, parity
        from doctor_pig_events
        where type = 9
        <include refid="criteria"/>
        group by farm_id, boar_code, pig_code,parity) as t1
        left join doctor_pig_events t2 on t1.farm_id =t2.farm_id and t1.boar_code = t2.boar_code and t1.pig_code = t2.pig_code and t1.parity = t2.parity
        where t2.type = 15
    </select>

    <!-- 公猪生产月报: 受胎率 -->
    <select id="getBoarSowPregRate" parameterType="map" resultType="double">
        SELECT
        (select ifnull(count(1), 0)
        FROM
        (select farm_id, boar_code, pig_code, parity
        from doctor_pig_events
        where type = 9
        <include refid="criteria"/>
        group by farm_id, boar_code, pig_code,parity) as t1
        left join doctor_pig_events t2 on t1.farm_id =t2.farm_id and t1.boar_code = t2.boar_code and t1.pig_code = t2.pig_code and t1.parity = t2.parity
        where t2.type = 11
        and t2.preg_check_result = 1)
        / (
        select case ifnull(count(1),1) when 0 then 1 else ifnull(count(1),1) end as pzcs
        from doctor_pig_events
        where type = 9
        <include refid="criteria"/>
        )
        from dual
    </select>


    <!-- 公猪生产月报: 分娩 -->
    <select id="getBoarSowFarrowRate" parameterType="map" resultType="double">
        SELECT
        (select ifnull(count(1), 0)
        FROM
        (select farm_id, boar_code, pig_code, parity
        from doctor_pig_events
        where type = 9
        <include refid="criteria"/>
        group by farm_id, boar_code, pig_code,parity) as t1
        left join doctor_pig_events t2 on t1.farm_id =t2.farm_id and t1.boar_code = t2.boar_code and t1.pig_code = t2.pig_code and t1.parity = t2.parity
        where t2.type = 15)
        / (
        select case ifnull(count(1),1) when 0 then 1 else ifnull(count(1),1) end as pzcs
        from doctor_pig_events
        where type = 9
        <include refid="criteria"/>
        )
        from dual
    </select>

    <!--存栏变动月报: 转入(后备,产房仔猪,保育,育肥)-->
    <select id="getMonthlyLiveStockChangeIn" parameterType="map" resultType="io.terminus.doctor.event.dto.report.monthly.DoctorLiveStockChangeMonthlyReport">
        SELECT
            ifnull(max(CASE WHEN pig_type = 1 THEN result ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 THEN result ELSE 0 END), 0) AS farrowIn,
            ifnull(max(CASE WHEN pig_type = 2 THEN result ELSE 0 END), 0) AS nurseryIn,
            ifnull(max(CASE WHEN pig_type = 3 THEN result ELSE 0 END), 0) AS fattenIn,
            ifnull(max(CASE WHEN pig_type = 4 THEN result ELSE 0 END), 0) AS houbeiIn
        FROM
        (
            SELECT ifnull(sum(quantity), 0) AS result, pig_type
            FROM  doctor_group_events
            WHERE  `type` = 2 AND -- include
              in_type != 3
              <include refid="criteria"/>
            GROUP BY pig_type
        ) AS a
    </select>

    <!--存栏变动月报: 进场-->
    <select id="getMonthlyLiveStockChangeSowIn" parameterType="map" resultType="int">
        SELECT ifnull(count(1), 0)
        FROM  doctor_pig_events
        WHERE `type` = 7
          <include refid="criteria"/>
    </select>

    <!--存栏变动月报: 断奶转入-->
    <select id="getMonthlyLiveStockChangeWeanIn" parameterType="map" resultType="int">
        SELECT ifnull(count(1), 0)
        FROM
        (
            SELECT barn_id
            FROM  doctor_pig_events
            WHERE `type` = 12  -- 转入配种舍事件
              <include refid="criteria"/>
        ) a
        LEFT JOIN doctor_barns b ON a.barn_id = b.id
        WHERE b.pig_type IN (1, 7)
    </select>

    <!--存栏变动月报: 配怀转产房-->
    <select id="getMonthlyLiveStockChangeToFarrow" parameterType="map" resultType="int">
        SELECT ifnull(count(1), 0)
        FROM doctor_pig_events
        WHERE `type` = 14
          <include refid="criteria"/>
    </select>

    <!--存栏变动月报: 后备转种猪-->
    <select id="getMonthlyLiveStockChangeToSeed" parameterType="map" resultType="int">
        SELECT ifnull(count(1), 0)
        FROM doctor_group_events
        WHERE `type` = 5
          <include refid="criteria"/>
    </select>

    <!--存栏变动月报: 产房转保育-->
    <select id="getMonthlyLiveStockChangeToNursery" parameterType="map" resultType="int">
        SELECT ifnull(sum(a.quantity), 0)
        FROM
        (
            SELECT other_barn_id, quantity
            FROM doctor_group_events
            WHERE `type` = 4 AND  -- 转群事件
              pig_type IN (1, 7)
              <include refid="criteria"/>
        ) AS a
        LEFT JOIN doctor_barns b ON a.other_barn_id = b.id
        WHERE b.pig_type = 2
    </select>

    <!--存栏变动月报: 保育转育肥-->
    <select id="getMonthlyLiveStockChangeToFatten" parameterType="map" resultType="int">
        SELECT ifnull(sum(a.quantity), 0)
        FROM
        (
            SELECT other_barn_id, quantity
            FROM doctor_group_events
            WHERE `type` = 4 AND  -- 转群事件
              pig_type = 2
              <include refid="criteria"/>
        ) AS a
        LEFT JOIN doctor_barns b ON a.other_barn_id = b.id
        WHERE b.pig_type = 3
    </select>

    <!--存栏变动月报: 死淘(后备,产房仔猪,保育,育肥)-->
    <select id="getMonthlyLiveStockChangeGroupDead" parameterType="map" resultType="io.terminus.doctor.event.dto.report.monthly.DoctorLiveStockChangeMonthlyReport">
        SELECT
            ifnull(max(CASE WHEN pig_type = 1 THEN result ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 THEN result ELSE 0 END), 0) AS farrowDead,
            ifnull(max(CASE WHEN pig_type = 2 THEN result ELSE 0 END), 0) AS nurseryDead,
            ifnull(max(CASE WHEN pig_type = 3 THEN result ELSE 0 END), 0) AS fattenDead,
            ifnull(max(CASE WHEN pig_type = 4 THEN result ELSE 0 END), 0) AS houbeiDead
        FROM
        (
            SELECT
              ifnull(sum(quantity), 0) AS result, pig_type
            FROM  doctor_group_events
            WHERE
                `type` = 3 AND
                change_type_id IN (110, 111)    -- 死亡, 淘汰
                <include refid="criteria"/>
            GROUP BY pig_type
        ) AS a
    </select>

    <!--存栏变动月报: 死淘(配怀,产房母猪)-->
    <select id="getMonthlyLiveStockChangeSowDead" parameterType="map" resultType="io.terminus.doctor.event.dto.report.monthly.DoctorLiveStockChangeMonthlyReport">
        SELECT
            ifnull(max(CASE WHEN pig_type = 5 THEN result ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 6 THEN result ELSE 0 END), 0) AS peiHuaiDead,
            ifnull(max(CASE WHEN pig_type = 1 THEN result ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 THEN result ELSE 0 END), 0) AS farrowSowDead
        FROM
        (
            SELECT
               ifnull(count(1), 0) AS result,
               b.pig_type AS pig_type
            FROM
            (
                SELECT
                     barn_id
                FROM doctor_pig_events
                WHERE
                        change_type_id IN (110, 111) AND -- 变动类型是死亡和淘汰
                        `type` = 6 AND -- 事件类型是离场
                        kind = 1 -- 猪类母猪
                        <include refid="criteria"/>
            ) AS a
            LEFT JOIN doctor_barns b ON a.barn_id = b.id
            WHERE b.pig_type IN (1, 5, 6, 7)
            GROUP BY b.pig_type
        ) AS c
    </select>

    <!--存栏变动月报: 销售(后备,产房仔猪,保育,育肥)-->
    <select id="getMonthlyLiveStockChangeSale" parameterType="map" resultType="io.terminus.doctor.event.dto.report.monthly.DoctorLiveStockChangeMonthlyReport">
        SELECT
            ifnull(max(CASE WHEN pig_type = 1 THEN result ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 THEN result ELSE 0 END), 0) AS farrowSale,
            ifnull(max(CASE WHEN pig_type = 2 THEN result ELSE 0 END), 0) AS nurserySale,
            ifnull(max(CASE WHEN pig_type = 3 THEN result ELSE 0 END), 0) AS fattenSale,
            ifnull(max(CASE WHEN pig_type = 4 THEN result ELSE 0 END), 0) AS houbeiSale
        FROM
        (
            SELECT
              ifnull(sum(quantity), 0) AS result, pig_type
            FROM  doctor_group_events
            WHERE
              `type` = 3 AND
              change_type_id = 109    -- 销售
              <include refid="criteria"/>
            GROUP BY pig_type
        ) AS a
    </select>

    <!--存栏变动月报: 饲料数量-->
    <select id="getMonthlyLiveStockChangeFeedCount" parameterType="map" resultType="io.terminus.doctor.event.dto.report.monthly.DoctorLiveStockChangeMonthlyReport">
        SELECT
            ifnull(max(CASE WHEN pig_type = 1 THEN result ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 THEN result ELSE 0 END), 0) AS farrowSowFeedCount,
            ifnull(max(CASE WHEN pig_type = 1 THEN result ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 THEN result ELSE 0 END), 0) AS farrowFeedCount,
            ifnull(max(CASE WHEN pig_type = 2 THEN result ELSE 0 END), 0) AS nurseryFeedCount,
            ifnull(max(CASE WHEN pig_type = 3 THEN result ELSE 0 END), 0) AS fattenFeedCount,
            ifnull(max(CASE WHEN pig_type = 4 THEN result ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 8 THEN result ELSE 0 END), 0) AS houbeiFeedCount,
            ifnull(max(CASE WHEN pig_type = 5 THEN result ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 6 THEN result ELSE 0 END), 0) AS peiHuaiFeedCount
        FROM
        (
            SELECT
              barns.pig_type AS pig_type,
              ifnull(sum(cp.event_count), 0) AS result
            FROM doctor_material_consume_providers AS cp
            LEFT JOIN doctor_barns AS barns ON cp.barn_id = barns.id
            WHERE cp.event_type = 1 AND
                  cp.type = 1
                <if test="farmId != null">AND cp.farm_id = #{farmId}</if>
                <if test="startAt != null">AND cp.event_time &gt;= #{startAt}</if>
                <if test="endAt != null">AND cp.event_time &lt;= #{endAt}</if>
        GROUP BY barns.pig_type
        ) AS a
    </select>

    <!--存栏变动月报: 饲料金额-->
    <select id="getMonthlyLiveStockChangeMaterielAmount" parameterType="map" resultType="io.terminus.doctor.event.dto.report.monthly.DoctorLiveStockChangeMonthlyReport">
        SELECT
            -- 饲料
            ifnull(max(CASE WHEN pig_type = 4 AND material_type = 1 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 8 AND material_type = 1 THEN amount ELSE 0 END), 0) AS houbeiFeedAmount,
            ifnull(max(CASE WHEN pig_type = 1 AND material_type = 1 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 AND material_type = 1 THEN amount ELSE 0 END), 0) AS farrowSowFeedAmount,
            ifnull(max(CASE WHEN pig_type = 1 AND material_type = 1 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 AND material_type = 1 THEN amount ELSE 0 END), 0) AS farrowFeedAmount,
            ifnull(max(CASE WHEN pig_type = 2 AND material_type = 1 THEN amount ELSE 0 END), 0) AS nurseryFeedAmount,
            ifnull(max(CASE WHEN pig_type = 3 AND material_type = 1 THEN amount ELSE 0 END), 0) AS fattenFeedAmount,
            ifnull(max(CASE WHEN pig_type = 5 AND material_type = 1 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 6 AND material_type = 1 THEN amount ELSE 0 END), 0) AS peiHuaiFeedAmount,
            -- 疫苗
            ifnull(max(CASE WHEN pig_type = 4 AND material_type = 3 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 8 AND material_type = 3 THEN amount ELSE 0 END), 0) AS houbeiVaccineAmount,
            ifnull(max(CASE WHEN pig_type = 1 AND material_type = 3 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 AND material_type = 3 THEN amount ELSE 0 END), 0) AS farrowSowVaccineAmount,
            ifnull(max(CASE WHEN pig_type = 1 AND material_type = 3 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 AND material_type = 3 THEN amount ELSE 0 END), 0) AS farrowVaccineAmount,
            ifnull(max(CASE WHEN pig_type = 2 AND material_type = 3 THEN amount ELSE 0 END), 0) AS nurseryVaccineAmount,
            ifnull(max(CASE WHEN pig_type = 3 AND material_type = 3 THEN amount ELSE 0 END), 0) AS fattenVaccineAmount,
            ifnull(max(CASE WHEN pig_type = 5 AND material_type = 3 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 6 AND material_type = 3 THEN amount ELSE 0 END), 0) AS peiHuaiVaccineAmount,
            -- 药品
            ifnull(max(CASE WHEN pig_type = 4 AND material_type = 4 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 8 AND material_type = 4 THEN amount ELSE 0 END), 0) AS houbeiDrugAmount,
            ifnull(max(CASE WHEN pig_type = 1 AND material_type = 4 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 AND material_type = 4 THEN amount ELSE 0 END), 0) AS farrowSowDrugAmount,
            ifnull(max(CASE WHEN pig_type = 1 AND material_type = 4 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 AND material_type = 4 THEN amount ELSE 0 END), 0) AS farrowDrugAmount,
            ifnull(max(CASE WHEN pig_type = 2 AND material_type = 4 THEN amount ELSE 0 END), 0) AS nurseryDrugAmount,
            ifnull(max(CASE WHEN pig_type = 3 AND material_type = 4 THEN amount ELSE 0 END), 0) AS fattenDrugAmount,
            ifnull(max(CASE WHEN pig_type = 5 AND material_type = 4 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 6 AND material_type = 4 THEN amount ELSE 0 END), 0) AS peiHuaiDrugAmount,
            -- 消耗品
            ifnull(max(CASE WHEN pig_type = 4 AND material_type = 5 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 8 AND material_type = 5 THEN amount ELSE 0 END), 0) AS houbeiConsumerAmount,
            ifnull(max(CASE WHEN pig_type = 1 AND material_type = 5 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 AND material_type = 5 THEN amount ELSE 0 END), 0) AS farrowSowConsumerAmount,
            ifnull(max(CASE WHEN pig_type = 1 AND material_type = 5 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 7 AND material_type = 5 THEN amount ELSE 0 END), 0) AS farrowConsumerAmount,
            ifnull(max(CASE WHEN pig_type = 2 AND material_type = 5 THEN amount ELSE 0 END), 0) AS nurseryConsumerAmount,
            ifnull(max(CASE WHEN pig_type = 3 AND material_type = 5 THEN amount ELSE 0 END), 0) AS fattenConsumerAmount,
            ifnull(max(CASE WHEN pig_type = 5 AND material_type = 5 THEN amount ELSE 0 END), 0) +
            ifnull(max(CASE WHEN pig_type = 6 AND material_type = 5 THEN amount ELSE 0 END), 0) AS peiHuaiConsumerAmount
        FROM
        (
            SELECT
              barns.`pig_type`,
              cp.`type` AS material_type,
              ifnull(sum(cp.`event_count` * cp.`unit_price`), 0) AS amount
            FROM doctor_material_consume_providers cp
            LEFT JOIN doctor_barns barns ON cp.`barn_id` = barns.id
            WHERE cp.`event_type` = 1 AND
                  cp.`unit_price` IS NOT NULL
                <if test="farmId != null">AND cp.farm_id = #{farmId}</if>
                <if test="startAt != null">AND cp.event_time &gt;= #{startAt}</if>
                <if test="endAt != null">AND cp.event_time &lt;= #{endAt}</if>
            GROUP BY barns.`pig_type`, cp.`type`
        ) AS res
    </select>

    <select id="getParityStockMonthly" parameterType="map" resultType="io.terminus.doctor.event.dto.report.monthly.DoctorStockStructureMonthlyReport">
        select  date_format(#{endAt}, '%Y-%m-%d') as sumAt,
                1 as type,
                null as businessId,
                t11.parity as businessName,
                ifnull(t12.counts, 0) + ifnull(t13.counts, 0) + ifnull(t14.counts, 0) - ifnull(t15.counts, 0) as count
        from
        (
        select name as parity
        from doctor_basics
        where type = 9
        ) t11 left join
        (
        -- 当前
        select case when t2.current_parity &lt; 10 then t2.current_parity else 10 end as parity,
        count(1) as counts
        from doctor_pigs t1
        left join doctor_pig_tracks t2 on t1.id = t2.pig_id
        where t1.is_removal = 0
        and t1.pig_type = 1
        and t1.farm_id = #{farmId}
        group by case when t2.current_parity &lt; 10 then t2.current_parity else 10 end
        ) t12 on t11.parity = t12.parity
        left join
        (
        -- 离场-进场
        select case when parity &lt; 10 then parity else 10 end as parity,
        sum(case type when 6 then 1 else 0 end) - sum(case type when 7 then 1 else 0 end ) as counts
        from doctor_pig_events
        where kind = 1
        and type in (6, 7)
        and farm_id = #{farmId}
        and event_at &gt;= #{startAt}
        group by case when parity &lt; 10 then parity else '10' end
        ) t13 on t11.parity = t13.parity
        left join
        (
        -- 配种影响下一胎次
        select case when parity-1 &lt; 9 then parity-1 else '10' end as parity ,
        count(1) as counts
        from doctor_pig_events
        where kind = 1
        and type = 9
        and farm_id = #{farmId}
        and event_at &gt;= #{startAt}
        group by case when parity-1 &lt; 9 then parity-1 else '10' end
        ) t14 on t11.parity = t14.parity
        left join (
        -- 配种影响当前胎次
        select case when parity &lt; 10 then parity else '10' end as parity ,
        count(1) as counts
        from doctor_pig_events
        where kind = 1
        and type = 9
        and parity > 1
        and farm_id = #{farmId}
        and event_at &gt;= #{startAt}
        group by case when parity &lt; 10 then parity else '10' end
        ) t15 on t11.parity = t15.parity
    </select>

    <select id="getBreedStockMonthly" parameterType="map" resultType="io.terminus.doctor.event.dto.report.monthly.DoctorStockStructureMonthlyReport">
        select
              date_format(#{endAt}, '%Y-%m-%d') as sumAt,
              2 as type,
              t11.breed_id as businessId,
              t11.breed_name as businessName,
              t11.counts - ifnull(t12.inCounts, 0) + ifnull(t12.outCounts, 0) as count
        from(
        SELECT t1.id as breed_id, t1.name as breed_name, ifnull(t2.counts, 0) as counts
          FROM doctor_basics t1
          left join  (
          select breed_id,breed_name, count(1) as counts
          from doctor_pigs
         WHERE is_removal = 0
           AND pig_type = 1
           AND farm_id = #{farmId}
        group by breed_id, breed_name) t2 on t1.id = t2.breed_id and t1.name = t2.breed_name
        where t1.type = 1
        ) t11
        left join (
        SELECT    t2.breed_id,
                t2.breed_name,
                 count(1) AS quantity,
               sum(case type when 6 then 1 else 0 end) as outCounts,
                sum(case type when 7 then 1 else 0 end) as inCounts
           FROM doctor_pig_events t1
           join doctor_pigs t2 on t1.pig_code = t2.pig_code
          WHERE t1.kind = 1
            AND t1.type IN (6, 7)
            and t1.event_at &gt;= #{startAt}
            AND t1.farm_id = #{farmId}
        GROUP BY t2.breed_id, t2.breed_name
        ) t12 on t11.breed_id = t12.breed_id and t11.breed_name = t12.breed_name;
    </select>
</mapper>