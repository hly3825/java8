<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorBoarMonthlyReport">
    <resultMap id="DoctorBoarMonthlyReportMap" type="DoctorBoarMonthlyReport">
        <id column="id" property="id"/>
        <result column="farm_id" property="farmId"/>
        <result column="boar_code" property="boarCode"/>
        <result column="pz_count" property="pzCount"/>
        <result column="spmz_count" property="spmzCount"/>
        <result column="st_count" property="stCount"/>
        <result column="cmz_count" property="cmzCount"/>
        <result column="pjcz_count" property="pjczCount"/>
        <result column="pjchz_count" property="pjchzCount"/>
        <result column="st_rate" property="stRate"/>
        <result column="fm_rate" property="fmRate"/>
        <result column="sum_at" property="sumAt"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        doctor_boar_monthly_reports
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        farm_id, 
        boar_code, 
        pz_count, 
        spmz_count, 
        st_count, 
        cmz_count, 
        pjcz_count, 
        pjchz_count, 
        st_rate, 
        fm_rate, 
        sum_at, 
        created_at, 
        updated_at
        
    </sql>

    <sql id="vals">
        #{farmId}, 
        #{boarCode}, 
        #{pzCount}, 
        #{spmzCount}, 
        #{stCount}, 
        #{cmzCount}, 
        #{pjczCount}, 
        #{pjchzCount}, 
        #{stRate}, 
        #{fmRate}, 
        #{sumAt}, 
        now(), 
        now()
        
    </sql>

    <sql id="criteria">
        <if test="id != null">AND id = #{id}</if>
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="boarCode != null">AND boar_code = #{boarCode}</if>
        <if test="pzCount != null">AND pz_count = #{pzCount}</if>
        <if test="spmzCount != null">AND spmz_count = #{spmzCount}</if>
        <if test="stCount != null">AND st_count = #{stCount}</if>
        <if test="cmzCount != null">AND cmz_count = #{cmzCount}</if>
        <if test="pjczCount != null">AND pjcz_count = #{pjczCount}</if>
        <if test="pjchzCount != null">AND pjchz_count = #{pjchzCount}</if>
        <if test="stRate != null">AND st_rate = #{stRate}</if>
        <if test="fmRate != null">AND fm_rate = #{fmRate}</if>
        <if test="sumAt != null">AND sum_at = #{sumAt}</if>
        
        
        
    </sql>

    <insert id="create" parameterType="DoctorBoarMonthlyReport" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorBoarMonthlyReportMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="DoctorBoarMonthlyReport">
        UPDATE <include refid="tb"/>
        <set>
            <if test="farmId != null">farm_id = #{farmId},</if>
            <if test="boarCode != null">boar_code = #{boarCode},</if>
            <if test="pzCount != null">pz_count = #{pzCount},</if>
            <if test="spmzCount != null">spmz_count = #{spmzCount},</if>
            <if test="stCount != null">st_count = #{stCount},</if>
            <if test="cmzCount != null">cmz_count = #{cmzCount},</if>
            <if test="pjczCount != null">pjcz_count = #{pjczCount},</if>
            <if test="pjchzCount != null">pjchz_count = #{pjchzCount},</if>
            <if test="stRate != null">st_rate = #{stRate},</if>
            <if test="fmRate != null">fm_rate = #{fmRate},</if>
            <if test="sumAt != null">sum_at = #{sumAt},</if>
            
            
            
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="DoctorBoarMonthlyReportMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorBoarMonthlyReportMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        LIMIT #{offset}, #{limit}
    </select>

    <delete id="deleteBySumAt" parameterType="map">
        DELETE FROM <include refid="tb"/>
        WHERE sum_at = #{sumAt}
    </delete>

    <delete id="deleteByFarmIdAndSumAt" parameterType="map">
        DELETE FROM <include refid="tb"/>
        WHERE farm_id = #{farmId} AND sum_at = #{sumAt}
    </delete>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        <foreach collection="list" separator="," item="item">
            (
            #{item.farmId},
            #{item.boarCode},
            #{item.pzCount},
            #{item.spmzCount},
            #{item.stCount},
            #{item.cmzCount},
            #{item.pjczCount},
            #{item.pjchzCount},
            #{item.stRate},
            #{item.fmRate},
            #{item.sumAt},
            now(),
            now()
            )
        </foreach>
    </insert>

    <select id="findDoctorBoarMonthlyReports" parameterType="map" resultMap="DoctorBoarMonthlyReportMap">
        select <include refid="cols_all"/>
        FROM <include refid="tb"/>
        where farm_id = #{farmId}
        and sum_at = #{sumAt}
    </select>

    <sql id="reportCriteria">
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="startAt != null">AND event_at &gt;= #{startAt}</if>
        <if test="endAt != null">AND event_at &lt;= #{endAt}</if>
    </sql>

    <!-- 公猪生产成绩月报-->
    <select id="constructorDoctorBoarMonthlyReports" parameterType="map" resultMap="DoctorBoarMonthlyReportMap">
        select
        t11.farm_id as farmId,
        t11.boar_code as boarCode,
        ifnull(t11.pzCount, 0) as pzCount,
        ifnull(t12.spmzCount, 0) as spmzCount,
        ifnull(t13.stCount, 0) as stCount,
        ifnull(t14.cmzCount, 0) as cmzCount,
        ifnull(t14.pjczCount, 0) as pjczCount,
        ifnull(t14.pjchzCount, 0) as pjchzCount,
        ifnull(t13.stCount/t11.pzCount,0) as stRate,
        ifnull(t15.fmCount/t11.pzCount,0) as fmRate,
        date_format(#{startAt}, '%Y-%m') as sumAt
        from (select farm_id, boar_code, count(1) as pzCount
        from doctor_pig_events
        where type = 9
        and boar_code is not null
        <include refid="reportCriteria"/>
        group by farm_id, boar_code) t11
        left join (
        select farm_id, boar_code, count(1) as spmzCount
        from doctor_pig_events
        where type = 9
        and boar_code is not null
        and current_mating_count = 1
        <include refid="reportCriteria"/>
        group by farm_id, boar_code
        ) t12 on t11.farm_id = t12.farm_id and t11.boar_code = t12.boar_code
        left join (
        select t1.farm_id, t1.boar_code, count(1) as stCount
        FROM
        (select farm_id, boar_code, pig_code, parity
        from doctor_pig_events
        where type = 9
        and boar_code is not null
        <include refid="reportCriteria"/>
        group by farm_id, boar_code, pig_code,parity) as t1
        left join doctor_pig_events t2 on t1.farm_id =t2.farm_id and t1.boar_code = t2.boar_code and t1.pig_code = t2.pig_code and t1.parity = t2.parity
        where t2.type = 11
        and preg_check_result = 1
        group by t1.farm_id, t1.boar_code
        ) t13 on t11.farm_id = t13.farm_id and t11.boar_code = t13.boar_code
        left join(
        select t1.farm_id, t1.boar_code, count(1) as cmzCount, sum(t2.live_count + t2.dead_count + t2.jx_count + t2.mny_count + t2.black_count)/count(1) as pjczCount, sum(t2.live_count)/count(1) as pjchzCount
        FROM
        (select farm_id, boar_code, pig_code, parity
        from doctor_pig_events
        where type = 9
        and boar_code is not null
        <include refid="reportCriteria"/>
        group by farm_id, boar_code, pig_code,parity) as t1
        left join doctor_pig_events t2 on t1.farm_id =t2.farm_id and t1.boar_code = t2.boar_code and t1.pig_code = t2.pig_code and t1.parity = t2.parity
        where t2.type = 15
        group by t1.farm_id, t1.boar_code
        ) t14 on t11.farm_id = t14.farm_id and t11.boar_code = t14.boar_code
        left join(
        select t1.farm_id, t1.boar_code, count(1) as fmCount
        FROM
        (select farm_id, boar_code, pig_code, parity
        from doctor_pig_events
        where type = 9
        and boar_code is not null
        <include refid="reportCriteria"/>
        group by farm_id, boar_code, pig_code,parity) as t1
        left join doctor_pig_events t2 on t1.farm_id =t2.farm_id and t1.boar_code = t2.boar_code and t1.pig_code = t2.pig_code and t1.parity = t2.parity
        where t2.type = 15
        group by t1.farm_id, t1.boar_code
        ) t15 on t11.farm_id = t15.farm_id and t11.boar_code = t15.boar_code
    </select>

</mapper>