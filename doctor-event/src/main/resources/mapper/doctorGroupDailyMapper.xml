<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorGroupDaily">
    <resultMap id="DoctorGroupDailyMap" type="DoctorGroupDaily">
        <id property="id" column="id"/>
        <result property="orgId" column="org_id"/>
        <result property="orgName" column="org_name"/>
        <result property="farmId" column="farm_id"/>
        <result property="farmName" column="farm_name"/>
        <result property="pigType" column="pig_type"/>
        <result property="sumAt" column="sum_at"/>
        <result property="start" column="start"/>
        <result property="turnInto" column="turn_into"/>
        <result property="turnIntoWeight" column="turn_into_weight"/>
        <result property="turnIntoAge" column="turn_into_age"/>
        <result property="chgFarmIn" column="chg_farm_in"/>
        <result property="deliverHandTurnInto" column="deliver_hand_turn_into"/>
        <result property="chgFarm" column="chg_farm"/>
        <result property="chgFarmWeight" column="chg_farm_weight"/>
        <result property="sale" column="sale"/>
        <result property="saleWeight" column="sale_weight"/>
        <result property="dead" column="dead"/>
        <result property="weedOut" column="weed_out"/>
        <result property="otherChange" column="other_change"/>
        <result property="toNursery" column="to_nursery"/>
        <result property="toNurseryWeight" column="to_nursery_weight"/>
        <result property="toFatten" column="to_fatten"/>
        <result property="toFattenWeight" column="to_fatten_weight"/>
        <result property="toHoubei" column="to_houbei"/>
        <result property="toHoubeiWeight" column="to_houbei_weight"/>
        <result property="turnSeed" column="turn_seed"/>
        <result property="turnOutWeight" column="turn_out_weight"/>
        <result property="turnActualCount" column="turn_actual_count"/>
        <result property="turnActualWeight" column="turn_actual_weight"/>
        <result property="turnActualAge" column="turn_actual_age"/>
        <result property="netWeightGain" column="net_weight_gain"/>
        <result property="deliverTurnOutAge" column="deliver_turn_out_age"/>
        <result property="end" column="end"/>
        <result property="version" column="version"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        doctor_group_dailies
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `org_id`, `org_name`, `farm_id`, `farm_name`, `pig_type`, `sum_at`, `start`, `turn_into`, `turn_into_weight`, `turn_into_age`, `chg_farm_in`, `deliver_hand_turn_into`, `chg_farm`, `chg_farm_weight`, `sale`, `sale_weight`, `dead`, `weed_out`, `other_change`, `to_nursery`, `to_nursery_weight`, `to_fatten`, `to_fatten_weight`, `to_houbei`, `to_houbei_weight`, `turn_seed`, `turn_out_weight`, `turn_actual_count`, `turn_actual_weight`, `turn_actual_age`, `net_weight_gain`, `deliver_turn_out_age`, `end`, `version`,
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{orgId}, #{orgName}, #{farmId}, #{farmName}, #{pigType}, #{sumAt}, #{start}, #{turnInto}, #{turnIntoWeight}, #{turnIntoAge}, #{chgFarmIn}, #{deliverHandTurnInto}, #{chgFarm}, #{chgFarmWeight}, #{sale}, #{saleWeight}, #{dead}, #{weedOut}, #{otherChange}, #{toNursery}, #{toNurseryWeight}, #{toFatten}, #{toFattenWeight}, #{toHoubei}, #{toHoubeiWeight}, #{turnSeed}, #{turnOutWeight}, #{turnActualCount}, #{turnActualWeight}, #{turnActualAge}, #{netWeightGain}, #{deliverTurnOutAge}, #{end}, 1,
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="orgName != null">AND `org_name` = #{orgName}</if>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="farmName != null">AND `farm_name` = #{farmName}</if>
            <if test="pigType != null">AND `pig_type` = #{pigType}</if>
            <if test="sumAt != null">AND `sum_at` = #{sumAt}</if>
            <if test="start != null">AND `start` = #{start}</if>
            <if test="turnInto != null">AND `turn_into` = #{turnInto}</if>
            <if test="turnIntoWeight != null">AND `turn_into_weight` = #{turnIntoWeight}</if>
            <if test="turnIntoAge != null">AND `turn_into_age` = #{turnIntoAge}</if>
            <if test="chgFarmIn != null">AND `chg_farm_in` = #{chgFarmIn}</if>
            <if test="deliverHandTurnInto != null">AND `deliver_hand_turn_into` = #{deliverHandTurnInto}</if>
            <if test="chgFarm != null">AND `chg_farm` = #{chgFarm}</if>
            <if test="chgFarmWeight != null">AND `chg_farm_weight` = #{chgFarmWeight}</if>
            <if test="sale != null">AND `sale` = #{sale}</if>
            <if test="saleWeight != null">AND `sale_weight` = #{saleWeight}</if>
            <if test="dead != null">AND `dead` = #{dead}</if>
            <if test="weedOut != null">AND `weed_out` = #{weedOut}</if>
            <if test="otherChange != null">AND `other_change` = #{otherChange}</if>
            <if test="toNursery != null">AND `to_nursery` = #{toNursery}</if>
            <if test="toNurseryWeight != null">AND `to_nursery_weight` = #{toNurseryWeight}</if>
            <if test="toFatten != null">AND `to_fatten` = #{toFatten}</if>
            <if test="toFattenWeight != null">AND `to_fatten_weight` = #{toFattenWeight}</if>
            <if test="toHoubei != null">AND `to_houbei` = #{toHoubei}</if>
            <if test="toHoubeiWeight != null">AND `to_houbei_weight` = #{toHoubeiWeight}</if>
            <if test="turnSeed != null">AND `turn_seed` = #{turnSeed}</if>
            <if test="turnOutWeight != null">AND `turn_out_weight` = #{turnOutWeight}</if>
            <if test="turnActualCount != null">AND `turn_actual_count` = #{turnActualCount}</if>
            <if test="turnActualWeight != null">AND `turn_actual_weight` = #{turnActualWeight}</if>
            <if test="turnActualAge != null">AND `turn_actual_age` = #{turnActualAge}</if>
            <if test="netWeightGain != null">AND `net_weight_gain` = #{netWeightGain}</if>
            <if test="deliverTurnOutAge != null">AND `deliver_turn_out_age` = #{deliverTurnOutAge}</if>
            <if test="end != null">AND `end` = #{end}</if>
            <if test="version != null">AND `version` = #{version}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="DoctorGroupDaily" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorGroupDailyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorGroupDailyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorGroupDaily">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="orgId != null">`org_id` = #{orgId},</if>
            <if test="orgName != null">`org_name` = #{orgName},</if>
            <if test="farmId != null">`farm_id` = #{farmId},</if>
            <if test="farmName != null">`farm_name` = #{farmName},</if>
            <if test="pigType != null">`pig_type` = #{pigType},</if>
            <if test="sumAt != null">`sum_at` = #{sumAt},</if>
            <if test="start != null">`start` = #{start},</if>
            <if test="turnInto != null">`turn_into` = #{turnInto},</if>
            <if test="turnIntoWeight != null">`turn_into_weight` = #{turnIntoWeight},</if>
            <if test="turnIntoAge != null">`turn_into_age` = #{turnIntoAge},</if>
            <if test="chgFarmIn != null">`chg_farm_in` = #{chgFarmIn},</if>
            <if test="deliverHandTurnInto != null">`deliver_hand_turn_into` = #{deliverHandTurnInto},</if>
            <if test="chgFarm != null">`chg_farm` = #{chgFarm},</if>
            <if test="chgFarmWeight != null">`chg_farm_weight` = #{chgFarmWeight},</if>
            <if test="sale != null">`sale` = #{sale},</if>
            <if test="saleWeight != null">`sale_weight` = #{saleWeight},</if>
            <if test="dead != null">`dead` = #{dead},</if>
            <if test="weedOut != null">`weed_out` = #{weedOut},</if>
            <if test="otherChange != null">`other_change` = #{otherChange},</if>
            <if test="toNursery != null">`to_nursery` = #{toNursery},</if>
            <if test="toNurseryWeight != null">`to_nursery_weight` = #{toNurseryWeight},</if>
            <if test="toFatten != null">`to_fatten` = #{toFatten},</if>
            <if test="toFattenWeight != null">`to_fatten_weight` = #{toFattenWeight},</if>
            <if test="toHoubei != null">`to_houbei` = #{toHoubei},</if>
            <if test="toHoubeiWeight != null">`to_houbei_weight` = #{toHoubeiWeight},</if>
            <if test="turnSeed != null">`turn_seed` = #{turnSeed},</if>
            <if test="turnOutWeight != null">`turn_out_weight` = #{turnOutWeight},</if>
            <if test="turnActualCount != null">`turn_actual_count` = #{turnActualCount},</if>
            <if test="turnActualWeight != null">`turn_actual_weight` = #{turnActualWeight},</if>
            <if test="turnActualAge != null">`turn_actual_age` = #{turnActualAge},</if>
            <if test="netWeightGain != null">`net_weight_gain` = #{netWeightGain},</if>
            <if test="deliverTurnOutAge != null">`deliver_turn_out_age` = #{deliverTurnOutAge},</if>
            <if test="end != null">`end` = #{end},</if>
            <if test="version != null">`version` = #{version},</if>
            version= version +1,
            updated_at = now()
        </set>
        WHERE id = #{id} and version = #{version}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="DoctorGroupDailyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorGroupDailyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        limit #{offset}, #{limit}
    </select>

    <select id="findBy" parameterType="map" resultMap="DoctorGroupDailyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE
        farm_id = #{farmId}
        and pig_type = #{pigType}
        and sum_at = #{sumAt}
    </select>


    <update id="updateDailyGroupLiveStock" parameterType="map" >
        UPDATE <include refid="tb"/>
        SET start = start + #{changeCount},
        `end` = `end` + #{changeCount}
        WHERE
        farm_id = #{farmId}
        AND pig_type = #{pigType}
        AND sum_at &gt;= date_format(#{sumAt}, '%Y-%m-%d')
    </update>

    <select id="queryAfterSumAt" parameterType="map" resultMap="DoctorGroupDailyMap" >
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            farm_id = #{farmId}
            AND pig_type = #{pigType}
            AND sum_at &gt;= date_format(#{sumAt}, '%Y-%m-%d')
        </where>
    </select>

    <sql id="forSum">
        org_id as orgId,
        org_name as orgName,
        farm_id as farmId,
        farm_name as farmName,
        pig_type as pigType,
        sum_at as sumAt,
        AVG(`end`) as dailyLivestockOnHand,
        ifnull(sum(turn_into), 0) as turnInto,
        ifnull(sum(chg_farm_in), 0) as chgFarmIn,
        ifnull(sum(deliver_hand_turn_into), 0) as deliverHandTurnInto,
        ifnull(sum(turn_into_weight), 0) as turnIntoWeight,
        ifnull(sum(turn_into_age), 0) as turnIntoAge,
        ifnull(sum(chg_farm), 0) as chgFarm,
        ifnull(sum(chg_farm_weight), 0) as chgFarmWeight,
        ifnull(sum(sale), 0) as sale,
        ifnull(sum(sale_weight), 0) as saleWeight,
        ifnull(sum(dead), 0) as dead,
        ifnull(sum(weed_out), 0) as weedOut,
        ifnull(sum(other_change), 0) as otherChange,
        ifnull(sum(to_nursery), 0) as toNursery,
        ifnull(sum(to_fatten), 0) as toFatten,
        ifnull(sum(to_fatten_weight), 0) as toFattenWeight,
        ifnull(sum(to_houbei), 0) as toHoubei,
        ifnull(sum(to_houbei_weight), 0) as toHoubeiWeight,
        ifnull(sum(turn_seed), 0) as turnSeed,
        ifnull(sum(turn_out_weight), 0) as turnOutWeight,
        ifnull(sum(turn_actual_count), 0) as turnActualCount,
        ifnull(sum(turn_actual_weight), 0) as turnActualWeight,
        ifnull(sum(turn_actual_age), 0) as turnActualAge,
        ifnull(sum(net_weight_gain), 0) as netWeightGain,
        ifnull(sum(deliver_turn_out_age), 0) as deliverTurnOutAge
    </sql>

    <select id="sumForDimension" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="io.terminus.doctor.event.dto.reportBi.DoctorGroupDailyExtend">
        SELECT
        <include refid="forSum"/>
        FROM <include refid="tb"/>
        GROUP BY
        <if test="orzType == 2">org_id,</if>
        <if test="orzType == 3">farm_id,</if>
        <if test="dateType == 1"> date_format(sum_at, '%y-%m-%d'),</if>
        <if test="dateType == 2"> date_format(sum_at, '%x-%v'),</if>
        <if test="dateType == 3"> date_format(sum_at, '%y-%m'),</if>
        <if test="dateType == 4"> concat(date_format(sum_at, '%y-'), QUARTER(sum_at)),</if>
        <if test="dateType == 5"> date_format(sum_at, '%y'),</if>
        pig_type
    </select>

    <sql id="dimensionCri">
        <where>
            1=1
            <if test="orzType == 2">AND org_id = #{orzId}</if>
            <if test="orzType == 3">AND  farm_id = #{orzId}</if>
            <if test="dateType == 1">AND date_format(sum_at, '%y-%m-%d') = date_format(#{sumAt}, '%y-%m-%d')</if>
            <if test="dateType == 2">AND date_format(sum_at, '%x-%v') = date_format(#{sumAt}, '%x-%v')</if>
            <if test="dateType == 3">AND date_format(sum_at, '%y-%m') = date_format(#{sumAt}, '%y-%m')</if>
            <if test="dateType == 4">AND concat(date_format(sum_at, '%y-'), QUARTER(sum_at)) =
                concat(date_format(#{sumAt}, '%y-'), QUARTER(#{sumAt}))
            </if>
            <if test="dateType == 5">AND date_format(sum_at, '%y') = date_format(#{sumAt}, '%y')</if>
            AND pig_type = #{pigType}
        </where>
    </sql>
    <select id="selectOneSumForDimension" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="io.terminus.doctor.event.dto.reportBi.DoctorGroupDailyExtend">
        SELECT
        <include refid="forSum"/>
        FROM
        <include refid="tb"/>
        <include refid="dimensionCri"/>
    </select>

    <select id="findByAfter" parameterType="map" resultMap="DoctorGroupDailyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE
        updated_at &gt;= date_format(#{sumAt}, '%Y-%m-%d %H:%i:%s')
    </select>

    <select id="findByDateType" parameterType="map" resultType="io.terminus.doctor.event.dto.DoctorDimensionCriteria">
        SELECT
        case WHEN #{orzType} = 2 then org_id else farm_id end as orzId,
        #{orzType} as orzType,
        sum_at as sumAt,
        #{dateType} as dateType,
        pig_type as pigType
        FROM <include refid="tb"/>
        WHERE
        updated_at &gt;= date_format(#{sumAt}, '%Y-%m-%d %H:%i:%s')
        GROUP BY
        <if test="orzType == 2">org_id,</if>
        <if test="orzType == 3">farm_id,</if>
        <if test="dateType == 1"> date_format(sum_at, '%y-%m-%d'),</if>
        <if test="dateType == 2"> date_format(sum_at, '%x-%v'),</if>
        <if test="dateType == 3"> date_format(sum_at, '%y-%m'),</if>
        <if test="dateType == 4"> concat(date_format(sum_at, '%y-'), QUARTER(sum_at)),</if>
        <if test="dateType == 5"> date_format(sum_at, '%y'),</if>
        pig_type
    </select>

    <select id="findBySumAt" parameterType="map" resultType="io.terminus.doctor.event.dto.DoctorDimensionCriteria">
        SELECT
        case WHEN #{orzType} = 2 then org_id else farm_id end as orzId,
        #{orzType} as orzType,
        sum_at as sumAt,
        #{dateType} as dateType,
        pig_type as pigType
        FROM <include refid="tb"/>
        WHERE
        sum_at &gt;= date_format(#{sumAt}, '%Y-%m-%d')
        GROUP BY
        <if test="orzType == 2">org_id,</if>
        <if test="orzType == 3">farm_id,</if>
        <if test="dateType == 1"> date_format(sum_at, '%y-%m-%d'),</if>
        <if test="dateType == 2"> date_format(sum_at, '%x-%v'),</if>
        <if test="dateType == 3"> date_format(sum_at, '%y-%m'),</if>
        <if test="dateType == 4"> concat(date_format(sum_at, '%y-'), QUARTER(sum_at)),</if>
        <if test="dateType == 5"> date_format(sum_at, '%y'),</if>
        pig_type
    </select>

    <select id="farmStart" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="int">
        SELECT
        `start`
        FROM <include refid="tb"/>
        <include refid="dimensionCri"/>
        order by sum_at asc
        limit 1
    </select>

    <select id="farmEnd" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="int">
        SELECT
        `end`
        FROM <include refid="tb"/>
        <include refid="dimensionCri"/>
        order by sum_at desc
        limit 1
    </select>

    <select id="orgStart" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="int">
        SELECT
        sum(`start`)
        FROM <include refid="tb"/>
        <include refid="dimensionCri"/>
        group by sum_at
        order by sum_at asc
        limit 1
    </select>

    <select id="orgEnd" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="int">
        SELECT
        sum(`end`)
        FROM <include refid="tb"/>
        <include refid="dimensionCri"/>
        group by sum_at
        order by sum_at desc
        limit 1
    </select>

    <select id="findByFarmAndAfter" parameterType="map" resultMap="DoctorGroupDailyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE
        farm_id = #{farmId}
        AND sum_at &gt;= date_format(#{sumAt}, '%Y-%m-%d')
    </select>

    <select id="orgDayAvgLiveStock" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="int">
        SELECT (
        select sum(`end`)
        FROM <include refid="tb"/>
        <include refid="dimensionCri"/>
        )
        /
        (
        select count(1)
        from (select *
        FROM <include refid="tb"/>
        <include refid="dimensionCri"/>
        group by sum_at
        ) a
        )
        from dual
    </select>

</mapper>