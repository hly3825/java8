<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorGroupDaily">
    <resultMap id="DoctorGroupDailyMap" type="DoctorGroupDaily">
        <id column="id" property="id"/>
        <result column="org_id" property="orgId"/>
        <result column="org_name" property="orgName"/>
        <result column="farm_id" property="farmId"/>
        <result column="farm_name" property="farmName"/>
        <result column="pig_type" property="pigType"/>
        <result column="sum_at" property="sumAt"/>
        <result column="start" property="start"/>
        <result column="turn_into" property="turnInto"/>
        <result column="turn_into_weight" property="turnIntoWeight"/>
        <result column="turn_into_age" property="turnIntoAge"/>
        <result column="chg_farm_in" property="chgFarmIn"/>
        <result column="chg_farm" property="chgFarm"/>
        <result column="chg_farm_weight" property="chgFarmWeight"/>
        <result column="sale" property="sale"/>
        <result column="sale_weight" property="saleWeight"/>
        <result column="dead" property="dead"/>
        <result column="weed_out" property="weedOut"/>
        <result column="other_change" property="otherChange"/>
        <result column="to_nursery" property="toNursery"/>
        <result column="to_fatten" property="toFatten"/>
        <result column="to_fatten_weight" property="toFattenWeight"/>
        <result column="to_houbei" property="toHoubei"/>
        <result column="to_houbei_weight" property="toHoubeiWeight"/>
        <result column="turn_seed" property="turnSeed"/>
        <result column="turn_out_weight" property="turnOutWeight"/>
        <result column="end" property="end"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="version" property="version"/>
    </resultMap>

    <sql id="tb">
        doctor_group_dailies
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        org_id, org_name, farm_id, farm_name, `pig_type`, sum_at, start, turn_into, turn_into_weight, turn_into_age, chg_farm_in, chg_farm, chg_farm_weight, sale, sale_weight,
        dead, weed_out, other_change, to_nursery, to_fatten, to_fatten_weight, to_houbei, to_houbei_weight,
        turn_seed, turn_out_weight, `end`, created_at, updated_at, version
    </sql>

    <sql id="vals">
       #{orgId}, #{orgName}, #{farmId}, #{farmName}, #{pigType}, #{sumAt}, #{start}, #{turnInto}, #{turnIntoWeight}, #{turnIntoAge}, #{chgFarmIn}, #{chgFarm}, #{chgFarmWeight}, #{sale}, #{saleWeight},
       #{dead}, #{weedOut}, #{otherChange}, #{toNursery}, #{toFatten}, #{toFattenWeight}, #{toHoubei}, #{toHoubeiWeight},
       #{turnSeed}, #{turnOutWeight}, #{end}, now(), now(), 1
    </sql>

    <sql id="criteria">
    </sql>

    <insert id="create" parameterType="DoctorGroupDaily" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorGroupDailyMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="DoctorGroupDaily">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="orgId != null">org_id = #{orgId},</if>
            <if test="orgName != null">org_name = #{orgName},</if>
            <if test="farmId != null">farm_id = #{farmId},</if>
            <if test="farmName != null">farm_name = #{farmName},</if>
            <if test="pigType != null">pig_type = #{pigType},</if>
            <if test="sumAt != null"> sum_at= #{sumAt},</if>
            <if test="start != null">start = #{start},</if>
            <if test="turnInto != null">turn_into = #{turnInto},</if>
            <if test="turnIntoWeight != null">turn_into_weight = #{turnIntoWeight},</if>
            <if test="turnIntoAge != null">turn_into_age = #{turnIntoAge},</if>
            <if test="chgFarmIn != null">chg_farm_in = #{chgFarmIn},</if>
            <if test="chgFarm != null">chg_farm = #{chgFarm},</if>
            <if test="chgFarmWeight != null">chg_farm_weight = #{chgFarmWeight},</if>
            <if test="sale != null">sale = #{sale},</if>
            <if test="saleWeight != null">sale_weight = #{saleWeight},</if>
            <if test="dead != null">dead = #{dead},</if>
            <if test="weedOut != null">weed_out = #{weedOut},</if>
            <if test="otherChange != null">other_change = #{otherChange},</if>
            <if test="toNursery != null">to_nursery = #{toNursery},</if>
            <if test="toFatten != null">to_fatten = #{toFatten},</if>
            <if test="toFattenWeight != null">to_fatten_weight = #{toFattenWeight},</if>
            <if test="toHoubei != null">to_houbei = #{toHoubei},</if>
            <if test="toHoubeiWeight != null">to_houbei_weight = #{toHoubeiWeight},</if>
            <if test="turnSeed != null">turn_seed = #{turnSeed},</if>
            <if test="turnOutWeight != null">turn_out_weight = #{turnOutWeight},</if>
            updated_at=now(),
            version = version + 1
        </set>
        WHERE id = #{id}
        and version = #{version}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="DoctorGroupDailyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorGroupDailyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        limit #{offset}, #{limit}
    </select>

    <select id="findBy" parameterType="map" resultMap="DoctorGroupDailyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE
        farm_id = #{farmId}
        and pig_type = #{pigType}
        and sum_at = #{sumAt}
    </select>


    <update id="updateDailyGroupLiveStock" parameterType="map" >
        UPDATE <include refid="tb"/>
        SET start = start + #{changeCount},
        `end` = `end` + #{changeCount}
        WHERE
        farm_id = #{farmId}
        AND pig_type = #{pigType}
        AND sum_at &gt;= date_format(#{sumAt}, '%Y-%m-%d')
    </update>

    <sql id="forSum">
        org_id as orgId,
        org_name as orgName,
        farm_id as farmId,
        farm_name as farmName,
        pig_type as pigType,
        sum_at as sumAt,
        AVG(`end`) as dailyLivestockOnHand,
        ifnull(sum(turn_into), 0) as turnInto,
        ifnull(sum(chg_farm_in), 0) as chgFarmIn,
        ifnull(sum(turn_into_weight), 0) as turnIntoWeight,
        ifnull(sum(turn_into_age), 0) as turnIntoAge,
        ifnull(sum(chg_farm), 0) as chgFarm,
        ifnull(sum(chg_farm_weight), 0) as chgFarmWeight,
        ifnull(sum(sale), 0) as sale,
        ifnull(sum(sale_weight), 0) as saleWeight,
        ifnull(sum(dead), 0) as dead,
        ifnull(sum(weed_out), 0) as weedOut,
        ifnull(sum(other_change), 0) as otherChange,
        ifnull(sum(to_nursery), 0) as toNursery,
        ifnull(sum(to_fatten), 0) as toFatten,
        ifnull(sum(to_fatten_weight), 0) as toFattenWeight,
        ifnull(sum(to_houbei), 0) as toHoubei,
        ifnull(sum(to_houbei_weight), 0) as toHoubeiWeight,
        ifnull(sum(turn_seed), 0) as turnSeed,
        ifnull(sum(turn_out_weight), 0) as turnOutWeight
    </sql>

    <select id="sumForDimension" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="io.terminus.doctor.event.dto.reportBi.DoctorGroupDailyExtend">
        SELECT
        <include refid="forSum"/>
        FROM <include refid="tb"/>
        GROUP BY
        <if test="orzType == 2">org_id,</if>
        <if test="orzType == 3">farm_id,</if>
        <if test="dateType == 1"> date_format(sum_at, '%y-%m-%d'),</if>
        <if test="dateType == 2"> date_format(sum_at, '%y-%u'),</if>
        <if test="dateType == 3"> date_format(sum_at, '%y-%m'),</if>
        <if test="dateType == 4"> concat(date_format(sum_at, '%y-'), QUARTER(sum_at)),</if>
        <if test="dateType == 5"> date_format(sum_at, '%y'),</if>
        pig_type
    </select>

    <sql id="dimensionCri">
        <where>
            1=1
            <if test="orzType == 2">AND farm_id = #{orzId}</if>
            <if test="orzType == 3">AND org_id = #{orzId}</if>
            <if test="dateType == 1">AND date_format(sum_at, '%y-%m-%d') = date_format(#{sumAt}, '%y-%m-%d')</if>
            <if test="dateType == 2">AND date_format(sum_at, '%y-%u') = date_format(#{sumAt}, '%y-%u')</if>
            <if test="dateType == 3">AND date_format(sum_at, '%y-%m') = date_format(#{sumAt}, '%y-%m')</if>
            <if test="dateType == 4">AND concat(date_format(sum_at, '%y-'), QUARTER(sum_at)) =
                concat(date_format(sum_at, '%y-'), QUARTER(#{sumAt}))
            </if>
            <if test="dateType == 5">AND date_format(sum_at, '%y') = date_format(#{sumAt}, '%y')</if>
            AND pig_type = #{pigType}
        </where>
    </sql>
    <select id="selectOneSumForDimension" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="io.terminus.doctor.event.dto.reportBi.DoctorGroupDailyExtend">
        SELECT
        <include refid="forSum"/>
        FROM
        <include refid="tb"/>
        <include refid="dimensionCri"/>
    </select>

    <select id="findByAfter" parameterType="map" resultMap="DoctorGroupDailyMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE
        updated_at >= date_format(#{sumAt}, '%Y-%m-%d %H:%i:%s')
    </select>

    <select id="findByDateType" parameterType="map" resultType="io.terminus.doctor.event.dto.DoctorDimensionCriteria">
        SELECT
        case WHEN #{orzType} = 2 then org_id else farm_id end as orzId,
        #{orzType} as orzType,
        sum_at as sumAt,
        #{dateType} as dateType,
        pig_type as pigType
        FROM <include refid="tb"/>
        WHERE
        updated_at >= date_format(#{sumAt}, '%Y-%m-%d %H:%i:%s')
        GROUP BY
        <if test="orzType == 2">org_id,</if>
        <if test="orzType == 3">farm_id,</if>
        <if test="dateType == 1"> date_format(sum_at, '%y-%m-%d'),</if>
        <if test="dateType == 2"> date_format(sum_at, '%y-%u'),</if>
        <if test="dateType == 3"> date_format(sum_at, '%y-%m'),</if>
        <if test="dateType == 4"> concat(date_format(sum_at, '%y-'), QUARTER(sum_at)),</if>
        <if test="dateType == 5"> date_format(sum_at, '%y'),</if>
        pig_type
    </select>

    <select id="start" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="int">
        SELECT
        start
        FROM <include refid="tb"/>
        <include refid="dimensionCri"/>
        order by sum_at asc
        limit 1
    </select>

    <select id="end" parameterType="io.terminus.doctor.event.dto.DoctorDimensionCriteria" resultType="int">
        SELECT
        `end`
        FROM <include refid="tb"/>
        <include refid="dimensionCri"/>
        order by sum_at desc
        limit 1
    </select>
</mapper>