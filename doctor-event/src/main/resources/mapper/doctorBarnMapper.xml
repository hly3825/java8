<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorBarn">
    <resultMap id="DoctorBarnMap" type="DoctorBarn">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="org_id" property="orgId"/>
        <result column="org_name" property="orgName"/>
        <result column="farm_id" property="farmId"/>
        <result column="farm_name" property="farmName"/>
        <result column="pig_type" property="pigType"/>
        <result column="can_open_group" property="canOpenGroup"/>
        <result column="status" property="status"/>
        <result column="capacity" property="capacity"/>
        <result column="staff_id" property="staffId"/>
        <result column="staff_name" property="staffName"/>
        <result column="out_id" property="outId"/>
        <result column="extra" property="extra"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        doctor_barns
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        name, org_id, org_name, farm_id, farm_name, pig_type, can_open_group, status, capacity, staff_id, staff_name, out_id, extra, created_at, updated_at
    </sql>

    <sql id="vals">
        #{name}, #{orgId}, #{orgName}, #{farmId}, #{farmName}, #{pigType}, #{canOpenGroup}, #{status}, #{capacity}, #{staffId}, #{staffName}, #{outId}, #{extra}, now(), now()
    </sql>

    <insert id="create" parameterType="DoctorBarn" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorBarnMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="DoctorBarn">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="orgId != null">org_id = #{orgId},</if>
            <if test="orgName != null">org_name = #{orgName},</if>
            <if test="farmId != null">farm_id = #{farmId},</if>
            <if test="farmName != null">farm_name = #{farmName},</if>
            <if test="pigType != null">pig_type = #{pigType},</if>
            <if test="canOpenGroup != null">can_open_group = #{canOpenGroup},</if>
            <if test="status != null">status = #{status},</if>
            <if test="capacity != null">capacity = #{capacity},</if>
            <if test="staffId != null">staff_id = #{staffId},</if>
            <if test="staffName != null">staff_name = #{staffName},</if>
            <if test="outId != null">out_id = #{outId},</if>
            <if test="extra != null">extra = #{extra},</if>
            
            
            
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>
    
    <select id="findByFarmId" parameterType="long" resultMap="DoctorBarnMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE farm_id = #{farmId}
    </select>

    <select id="findByEnums" parameterType="long" resultMap="DoctorBarnMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <where>
            <if test="farmId != null">AND farm_id = #{farmId}</if>
            <if test="pigType != null">AND pig_type = #{pigType}</if>
            <if test="canOpenGroup != null">AND can_open_group = #{canOpenGroup}</if>
            <if test="status != null">AND status = #{status}</if>
        </where>
    </select>

    <!-- search api start -->
    <select id="maxId" resultType="long">
        SELECT MAX(id) FROM
        <include refid="tb"/>
    </select>

    <select id="listSince" resultMap="DoctorBarnMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE  <![CDATA[
          id < #{lastId} AND updated_at > #{since}
        ]]>
        ORDER BY id DESC LIMIT #{limit}
    </select>
    <!-- search api end -->
</mapper>