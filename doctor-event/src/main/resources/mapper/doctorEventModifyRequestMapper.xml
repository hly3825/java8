<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorEventModifyRequest">
    <resultMap id="DoctorEventModifyRequestMap" type="DoctorEventModifyRequest">
        <id column="id" property="id"/>
        <result column="farm_id" property="farmId"/>
        <result column="start_event_id" property="startEventId"/>
        <result column="event_id" property="eventId"/>
        <result column="type" property="type"/>
        <result column="content" property="content"/>
        <result column="status" property="status"/>
        <result column="reason" property="reason"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        doctor_event_modify_requests
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        farm_id, start_event_id, event_id, type, content, status, reason, user_id, user_name, created_at, updated_at
    </sql>

    <sql id="vals">
        #{farmId}, #{startEventId}, #{eventId}, #{type}, #{content}, #{status},#{reason}, #{userId}, #{userName}, now(), now()
    </sql>

    <insert id="create" parameterType="DoctorEventModifyRequest" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        <foreach collection="list" item="i" separator=",">
            (#{i.farmId}, #{i.startEventId}, #{i.eventId}, #{i.type}, #{i.content}, #{i.status}, #{reason}, #{i.userId}, #{i.userName},now(), now())
        </foreach>
    </insert>

    <select id="findById" parameterType="long" resultType="DoctorEventModifyRequest" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="long" resultType="DoctorEventModifyRequest" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorEventModifyRequest">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="farmId != null">farm_id = #{farmId},</if>
            <if test="startEventId != null">start_event_id = #{startEventId},</if>
            <if test="eventId != null">event_id = #{eventId},</if>
            <if test="type != null">type = #{type},</if>
            <if test="content != null">content = #{content},</if>
            <if test="status != null">status = #{status},</if>
            <if test="reason != null">reason = #{reason},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>

            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" item="i" open="(" separator="," close=")">
            #{i}
        </foreach>
    </delete>

    <sql id="criteria">
        <where>
            <if test="farmId != null">AND farm_id = #{farmId}</if>
            <if test="startEventId != null">AND start_event_id = #{startEventId}</if>
            <if test="eventId != null">AND event_id = #{eventId}</if>
            <if test="type != null">AND type = #{type}</if>
            <if test="status != null">AND status = #{status}</if>
            <if test="userId != null">AND user_id = #{userId}</if>

        </where>
    </sql>

    <select id="list" parameterType="map" resultType="DoctorEventModifyRequest">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultType="DoctorEventModifyRequest">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        <if test="sortBy != null">
            <if test="desc != null">
                ORDER BY ${sortBy} ${desc}
            </if>
        </if>
        <if test="sortBy == null">
            order by `id` desc -- 最新
        </if>
        LIMIT #{offset}, #{limit}
    </select>


</mapper>