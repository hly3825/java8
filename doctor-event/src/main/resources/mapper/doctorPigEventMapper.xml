<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorPigEvent">

    <resultMap id="DoctorPigEventMap" type="DoctorPigEvent">

        <result column="id" property="id"/>
        <result column="org_id" property="orgId"/>
        <result column="org_name" property="orgName"/>
        <result column="farm_id" property="farmId"/>
        <result column="farm_name" property="farmName"/>
        <result column="pig_id" property="pigId"/>
        <result column="pig_code" property="pigCode"/>
        <result column="event_at" property="eventAt"/>
        <result column="type" property="type"/>
        <result column="kind" property="kind"/>
        <result column="name" property="name"/>
        <result column="desc" property="desc"/>
        <result column="barn_id" property="barnId"/>
        <result column="barn_name" property="barnName"/>
        <result column="rel_event_id" property="relEventId"/>
        <result column="out_id" property="outId"/>
        <result column="extra" property="extra"/>
        <result column="remark" property="remark"/>
        <result column="creator_id" property="creatorId"/>
        <result column="creator_name" property="creatorName"/>
        <result column="updator_id" property="updatorId"/>
        <result column="updator_name" property="updatorName"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    
    </resultMap>

    <sql id="tb"> doctor_pig_events </sql>

    <sql id="cols_all">
      id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        `org_id`,`org_name`,`farm_id`,`farm_name`,`pig_id`,`pig_code`,`event_at`,`type`,`kind`,`name`,`desc`,`barn_id`,`barn_name`,`rel_event_id`,`out_id`,`extra`,`remark`,`creator_id`,`creator_name`,`updator_id`,`updator_name`,`created_at`,`updated_at`
    </sql>

    <sql id="vals">
        #{orgId},#{orgName},#{farmId},#{farmName},#{pigId},#{pigCode},#{eventAt},#{type},#{kind},#{name},#{desc},#{barnId},#{barnName},#{relEventId},#{outId},#{extra},#{remark},#{creatorId},#{creatorName},#{updatorId},#{updatorName},now(),now()
    </sql>

    <sql id="criteria">
        <if test="orgId != null" > AND `org_id` = #{orgId}</if>
        <if test="farmId != null" > AND `farm_id` = #{farmId}</if>
        <if test="pigId != null" > AND `pig_id` = #{pigId}</if>
        <if test="pigCode != null" > AND `pig_code` = #{pigCode}</if>
        <if test="beginDate != null"> AND <![CDATA[ event_at >= #{beginDate} ]]> </if>
        <if test="endDate != null"> AND <![CDATA[ event_at <= #{endDate} ]]> </if>
        <if test="type != null" > AND `type` = #{type}</if>
        <if test="kind != null" > AND `kind` = #{kind}</if>
        <if test="barnId != null" > AND `barn_id` = #{barnId}</if>
        <if test="relEventId != null" > AND `rel_event_id` = #{relEventId}</if>
        <if test="outId != null" > AND `out_id` = #{outId}</if>
    </sql>

    <insert id="create" parameterType="DoctorPigEvent" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
            VALUES (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb"/>
        ( <include refid="cols_exclude_id"/> )
        VALUES
        <foreach collection="list" item="i" separator=",">
        ( #{i.orgId},#{i.orgName},#{i.farmId},#{i.farmName},#{i.pigId},#{i.pigCode},#{i.eventAt},#{i.type},#{i.kind},#{i.name},#{i.desc},#{i.barnId},#{i.barnName},#{i.relEventId},#{i.outId},#{i.extra},#{i.remark},#{i.creatorId},#{i.creatorName},#{i.updatorId},#{i.updatorName},now(),now()
 )
        </foreach>
    </insert>

    <delete id="delete" parameterType="Long">
    DELETE FROM <include refid="tb"/> WHERE
    id=#{id}
</delete>

    <select id="findById" parameterType="long" resultMap="DoctorPigEventMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="list" resultMap="DoctorPigEventMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="queryAllFarmInEvent" resultType="long">
        select distinct(farm_id) from <include refid="tb"/>
    </select>

    <select id="countPigEventTypeDuration" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <if test="farmId != null" > AND `farm_id` = #{farmId}</if>
            <if test="eventType != null" > AND `type` = #{eventType}</if>
            <if test="startDate != null">AND created_at &gt;= #{startDate} </if>
            <if test="endDate != null">AND created_at &lt;= #{endDate} </if>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) from <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="queryLastPigEventById" parameterType="long" resultMap="DoctorPigEventMap">
        select <include refid="cols_all"/> from <include refid="tb"/>
        where pig_id = #{pigId}
        order by created_at desc limit 1;
    </select>

    <select id="queryAllEventsByPigId" parameterType="long" resultMap="DoctorPigEventMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE pig_id = #{pigId}
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorPigEventMap">
        SELECT <include refid="cols_all"/> from <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        <if test="ordered!=null">
            ORDER BY event_at
            <if test="ordered == 0">
                DESC
            </if>
        </if>

        LIMIT #{offset}, #{limit}
    </select>

    <update id="updatePigEventFarmIdByPigId" parameterType="map">
        UPDATE <include refid="tb"/>
        <set>
            updated_at = now()
            <if test="farmId != null" > ,`farm_id` = #{farmId}</if>
            <if test="farmName != null" > ,`farm_name` = #{farmName}</if>
        </set>
        WHERE `pig_id` = #{pigId}
    </update>

    <update id="update" parameterType="DoctorPigEvent">
        UPDATE <include refid="tb"/>
        <set>
        updated_at = now()
            <if test="orgId != null" > ,`org_id` = #{orgId}</if>
            <if test="orgName != null" > ,`org_name` = #{orgName}</if>
            <if test="farmId != null" > ,`farm_id` = #{farmId}</if>
            <if test="farmName != null" > ,`farm_name` = #{farmName}</if>
            <if test="pigId != null" > ,`pig_id` = #{pigId}</if>
            <if test="pigCode != null" > ,`pig_code` = #{pigCode}</if>
            <if test="eventAt != null" > ,`event_at` = #{eventAt}</if>
            <if test="type != null" > ,`type` = #{type}</if>
            <if test="kind != null" > ,`kind` = #{kind}</if>
            <if test="name != null" > ,`name` = #{name}</if>
            <if test="desc != null" > ,`desc` = #{desc}</if>
            <if test="barnId != null" > ,`barn_id` = #{barnId}</if>
            <if test="barnName != null" > ,`barn_name` = #{barnName}</if>
            <if test="relEventId != null" > ,`rel_event_id` = #{relEventId}</if>
            <if test="outId != null" > ,`out_id` = #{outId}</if>
            <if test="extra != null" > ,`extra` = #{extra}</if>
            <if test="remark != null" > ,`remark` = #{remark}</if>
            <if test="creatorId != null" > ,`creator_id` = #{creatorId}</if>
            <if test="creatorName != null" > ,`creator_name` = #{creatorName}</if>
            <if test="updatorId != null" > ,`updator_id` = #{updatorId}</if>
            <if test="updatorName != null" > ,`updator_name` = #{updatorName}</if>
            <if test="createdAt != null" > ,`created_at` = #{createdAt}</if>
        </set>
        WHERE id=#{id}
    </update>
</mapper>