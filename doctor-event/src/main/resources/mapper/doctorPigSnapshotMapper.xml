<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorPigSnapshot">

    <resultMap id="DoctorPigSnapshotMap" type="DoctorPigSnapshot">

        <result column="id" property="id"/>
        <result column="pig_id" property="pigId"/>
        <result column="from_event_id" property="fromEventId"/>
        <result column="to_event_id" property="toEventId"/>
        <result column="to_pig_info" property="toPigInfo"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    
    </resultMap>

    <sql id="tb"> doctor_pig_snapshots </sql>

    <sql id="cols_all">
      id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
       `pig_id`, `from_event_id`, `to_event_id`, `to_pig_info`, `created_at`, `updated_at`
    </sql>

    <sql id="vals">
        #{pigId}, #{fromEventId}, #{toEventId}, #{toPigInfo}, now(), now()
    </sql>

    <sql id="criteria">
        <if test="pigId != null" > AND `pig_id` = #{pigId}</if>
        <if test="fromEventId != null" > AND `from_event_id` = #{fromEventId}</if>
        <if test="toEventId != null" > AND `to_event_id` = #{toEventId}</if>
    </sql>

    <insert id="create" parameterType="DoctorPigSnapshot" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
            VALUES (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb"/>
        ( <include refid="cols_exclude_id"/> )
        VALUES
        <foreach collection="list" item="i" separator=",">
        (#{i.pigId},#{i.fromEventId},#{i.toEventId},#{i.toPigInfo},now(),now())
        </foreach>
    </insert>

    <update id="updates" parameterType="list">
        <foreach collection="list" item="i" separator=";">
          UPDATE <include refid="tb"/> SET
            `updated_at` = now(),
            `pig_id` = #{i.pigId},
            `from_event_id` = #{i.fromEventId},
            `to_event_id` = #{i.toEventId},
            `to_pig_info` = #{i.toPigInfo}
          WHERE id = #{i.id}
        </foreach>
    </update>

    <delete id="delete" parameterType="Long">
        DELETE FROM <include refid="tb"/> WHERE
        id=#{id}
    </delete>

    <delete id="deleteByEventId" parameterType="long">
        DELETE FROM <include refid="tb"/> WHERE
        to_event_id = #{eventId};
    </delete>

    <select id="findById" parameterType="long" resultMap="DoctorPigSnapshotMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="queryByEventId" parameterType="long" resultMap="DoctorPigSnapshotMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE to_event_id = (
        SELECT from_event_id
        FROM <include refid="tb"/>
        WHERE to_event_id = #{eventId}
        )
    </select>

    <select id="list" resultMap="DoctorPigSnapshotMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <update id="update" parameterType="DoctorPigSnapshot">
        UPDATE
        <include refid="tb"/>
        <set>
            updated_at = now()
            <if test="pigId != null">,`pig_id` = #{pigId}</if>
            <if test="fromEventId != null">,`from_event_id` = #{fromEventId}</if>
            <if test="toEventId != null">,`to_event_id` = #{toEventId}</if>
            <if test="toPigInfo != null">,`to_pig_info` = #{toPigInfo}</if>
            <if test="createdAt != null">,`created_at` = #{createdAt}</if>
        </set>
        WHERE id=#{id}
    </update>

    <select id="queryLastByPigId" parameterType="long" resultMap="DoctorPigSnapshotMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE pig_id = #{pigId} AND id = (
        select max(id) from
        <include refid="tb"/>
        where pig_id = #{pigId}
        )
    </select>

    <select id="findByPigId" parameterType="long" resultMap="DoctorPigSnapshotMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE pig_id = #{pigId}
    </select>

    <select id="findByToEventId" parameterType="long" resultMap="DoctorPigSnapshotMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE to_event_id = #{toEventId}
    </select>

    <select id="queryNotSnapshotPigId" resultType="long" >
        SELECT a.id
        FROM doctor_pigs a LEFT JOIN doctor_pig_snapshots b on a.id = b.pig_id
        WHERE b.pig_id IS NULL AND a.is_removal = 0
    </select>

    <delete id="deleteForPigId" parameterType="long" >
        DELETE
        FROM <include refid="tb"/>
        WHERE pig_id = #{pigId}
    </delete>

    <select id="findByFromEventId" parameterType="long" resultMap="DoctorPigSnapshotMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE from_event_id = #{fromEventId}
    </select>

    <update id="updateFromEventIdByFromEventId" parameterType="map" >
        UPDATE <include refid="tb"/>
        SET from_event_id = #{newFromEventId}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="deleteAfterAndInclude" parameterType="map" >
        DELETE
        FROM <include refid="tb"/>
        WHERE pig_id = #{pigId}
        AND id >= #{id}
    </delete>
</mapper>