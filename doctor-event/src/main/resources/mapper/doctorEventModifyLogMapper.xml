<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorEventModifyLog">
    <resultMap id="DoctorEventModifyLogMap" type="DoctorEventModifyLog">
        <id column="id" property="id"/>
        <result column="farm_id" property="farmId"/>
        <result column="business_id" property="businessId"/>
        <result column="business_code" property="businessCode"/>
        <result column="type" property="type"/>
        <result column="modify_request_id" property="modifyRequestId"/>
        <result column="delete_event" property="deleteEvent"/>
        <result column="from_event" property="fromEvent"/>
        <result column="to_event" property="toEvent"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        doctor_event_modify_logs
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        farm_id, 
        business_id, 
        business_code, 
        type, 
        modify_request_id, 
        delete_event,
        from_event,
        to_event,
        created_at, 
        updated_at
        
    </sql>

    <sql id="vals">
        #{farmId}, 
        #{businessId}, 
        #{businessCode}, 
        #{type}, 
        #{modifyRequestId}, 
        #{deleteEvent},
        #{fromEvent},
        #{toEvent},
        now(), 
        now()
        
    </sql>

    <sql id="criteria">
        <if test="id != null">AND id = #{id}</if>
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="businessId != null">AND business_id = #{businessId}</if>
        <if test="businessCode != null">AND business_code = #{businessCode}</if>
        <if test="type != null">AND type = #{type}</if>
        <if test="modifyRequestId != null">AND modify_request_id = #{modifyRequestId}</if>
        <if test="deleteEvent != null">AND delete_event = #{deleteEvent}</if>
        <if test="fromEvent != null">AND from_event = #{fromEvent}</if>
        <if test="toEvent != null">AND to_event = #{toEvent}</if>
    </sql>

    <insert id="create" parameterType="DoctorEventModifyLog" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorEventModifyLogMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="DoctorEventModifyLog">
        UPDATE <include refid="tb"/>
        <set>
            <if test="farmId != null">farm_id = #{farmId},</if>
            <if test="businessId != null">business_id = #{businessId},</if>
            <if test="businessCode != null">business_code = #{businessCode},</if>
            <if test="type != null">type = #{type},</if>
            <if test="modifyRequestId != null">modify_request_id = #{modifyRequestId},</if>
            <if test="deleteEvent != null">delete_event = #{deleteEvent},</if>
            <if test="fromEvent != null">from_event = #{fromEvent},</if>
            <if test="toEvent != null">to_event = #{toEvent},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="DoctorEventModifyLogMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorEventModifyLogMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        ORDER BY id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countExcludeDeleteLog" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            delete_event is NULL
            <include refid="criteria"/>
        </where>
    </select>

    <select id="pagingExcludeDeleteLog" parameterType="map" resultMap="DoctorEventModifyLogMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            delete_event is NULL
            <include refid="criteria"/>
        </where>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getEventModifyLog" parameterType="string" resultMap="DoctorEventModifyLogMap" >
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            updated_at &gt;= #{startDate}
        </where>
    </select>

</mapper>