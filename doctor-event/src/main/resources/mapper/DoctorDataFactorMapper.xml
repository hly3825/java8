<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DoctorDataFactor">
    <resultMap id="DoctorDataFactorMap" type="DoctorDataFactor">
        <id property="id" column="id"/>
        <result property="type" column="type"/>
        <result property="typeName" column="type_name"/>
        <result property="subType" column="sub_type"/>
        <result property="subTypeName" column="sub_type_name"/>
        <result property="factor" column="factor"/>
        <result property="rangeFrom" column="range_from"/>
        <result property="rangeTo" column="range_to"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        doctor_data_factors
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `type`, `type_name`, `sub_type`, `sub_type_name`, `factor`, `range_from`, `range_to`, `is_delete`, 
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{type}, #{typeName}, #{subType}, #{subTypeName}, #{factor}, #{rangeFrom}, #{rangeTo}, #{isDelete}, 
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="type != null">AND `type` = #{type}</if>
            <if test="typeName != null">AND `type_name` = #{typeName}</if>
            <if test="subType != null">AND `sub_type` = #{subType}</if>
            <if test="subTypeName != null">AND `sub_type_name` = #{subTypeName}</if>
            <if test="factor != null">AND `factor` = #{factor}</if>
            <if test="rangeFrom != null">AND `range_from` = #{rangeFrom}</if>
            <if test="rangeTo != null">AND `range_to` = #{rangeTo}</if>
            <if test="isDelete != null">AND `is_delete` = #{isDelete}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="DoctorDataFactor" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <insert id="creates" parameterType="DoctorDataFactor">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        <foreach collection="list" item="i" index="index" separator=",">
            ( #{i.type}, #{i.typeName}, #{i.subType}, #{i.subTypeName}, #{i.factor}, #{i.rangeFrom}, #{i.rangeTo}, #{i.isDelete},
            now(), now())
        </foreach>
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorDataFactorMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorDataFactorMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorDataFactor">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="type != null">`type` = #{type},</if>
            <if test="typeName != null">`type_name` = #{typeName},</if>
            <if test="subType != null">`sub_type` = #{subType},</if>
            <if test="subTypeName != null">`sub_type_name` = #{subTypeName},</if>
            <if test="factor != null">`factor` = #{factor},</if>
            <if test="rangeFrom != null">`range_from` = #{rangeFrom},</if>
            <if test="rangeTo != null">`range_to` = #{rangeTo},</if>
            <if test="isDelete != null">`is_delete` = #{isDelete},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <!--  查询记录数  -->
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT (1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <!--  分页  -->
    <select id="paging" parameterType="map" resultMap="DoctorDataFactorMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="DoctorDataFactorMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>


    <delete id="deleteAll" parameterType="int">
        DELETE FROM <include refid="tb"/>
        WHERE `type` = #{type}
    </delete>

</mapper>
