<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorGroupEvent">
    <resultMap id="DoctorGroupEventMap" type="DoctorGroupEvent">
        <id column="id" property="id"/>
        <result column="org_id" property="orgId"/>
        <result column="org_name" property="orgName"/>
        <result column="farm_id" property="farmId"/>
        <result column="farm_name" property="farmName"/>
        <result column="group_id" property="groupId"/>
        <result column="group_code" property="groupCode"/>
        <result column="event_at" property="eventAt"/>
        <result column="type" property="type"/>
        <result column="name" property="name"/>
        <result column="desc" property="desc"/>
        <result column="barn_id" property="barnId"/>
        <result column="barn_name" property="barnName"/>
        <result column="pig_type" property="pigType"/>
        <result column="quantity" property="quantity"/>
        <result column="weight" property="weight"/>
        <result column="avg_weight" property="avgWeight"/>
        <result column="base_weight" property="baseWeight"/>
        <result column="avg_day_age" property="avgDayAge"/>
        <result column="is_auto" property="isAuto"/>
        <result column="change_type_id" property="changeTypeId"/>
        <result column="price" property="price"/>
        <result column="amount" property="amount"/>
        <result column="over_price" property="overPrice"/>
        <result column="trans_group_type" property="transGroupType"/>
        <result column="out_id" property="outId"/>
        <result column="remark" property="remark"/>
        <result column="extra" property="extra"/>
        <result column="created_at" property="createdAt"/>
        <result column="creator_id" property="creatorId"/>
        <result column="creator_name" property="creatorName"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="updator_id" property="updatorId"/>
        <result column="updator_name" property="updatorName"/>
    </resultMap>

    <sql id="tb">
        doctor_group_events
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        org_id,
        org_name,
        farm_id,
        farm_name,
        group_id,
        group_code,
        event_at,
        `type`,
        `name`,
        `desc`,
        barn_id,
        barn_name,
        pig_type,
        quantity,
        weight,
        avg_weight,
        base_weight,
        avg_day_age,
        is_auto,
        change_type_id,
        price,
        amount,
        over_price,
        trans_group_type,
        out_id,
        remark,
        extra,
        created_at,
        creator_id,
        creator_name,
        updated_at,
        updator_id,
        updator_name
    </sql>

    <sql id="vals">
        #{orgId},
        #{orgName},
        #{farmId},
        #{farmName},
        #{groupId},
        #{groupCode},
        #{eventAt},
        #{type},
        #{name},
        #{desc},
        #{barnId},
        #{barnName},
        #{pigType},
        #{quantity},
        #{weight},
        #{avgWeight},
        #{baseWeight},
        #{avgDayAge},
        #{isAuto},
        #{changeTypeId},
        #{price},
        #{amount},
        #{overPrice},
        #{transGroupType},
        #{outId},
        #{remark},
        #{extra},
        now(),
        #{creatorId},
        #{creatorName},
        now(),
        #{updatorId},
        #{updatorName}
    </sql>

    <insert id="create" parameterType="DoctorGroupEvent" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorGroupEventMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="countByBarnId" parameterType="long" resultType="long">
        select count(id) from <include refid="tb" /> where `barn_id` = #{barnId}
    </select>

    <update id="update" parameterType="DoctorGroupEvent">
        UPDATE <include refid="tb"/>
        <set>
            <if test="orgId != null">org_id = #{orgId},</if>
            <if test="orgName != null">org_name = #{orgName},</if>
            <if test="farmId != null">farm_id = #{farmId},</if>
            <if test="farmName != null">farm_name = #{farmName},</if>
            <if test="groupId != null">group_id = #{groupId},</if>
            <if test="groupCode != null">group_code = #{groupCode},</if>
            <if test="eventAt != null">event_at = #{eventAt},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="name != null">`name` = #{name},</if>
            <if test="desc != null">`desc` = #{desc},</if>
            <if test="barnId != null">barn_id = #{barnId},</if>
            <if test="barnName != null">barn_name = #{barnName},</if>
            <if test="pigType != null">pig_type = #{pigType},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="weight != null">weight = #{weight},</if>
            <if test="avgWeight != null">avg_weight = #{avgWeight},</if>
            <if test="baseWeight != null">base_weight = #{baseWeight},</if>
            <if test="avgDayAge != null">avg_day_age = #{avgDayAge},</if>
            <if test="isAuto != null">is_auto = #{isAuto},</if>
            <if test="changeTypeId != null">change_type_id = #{changeTypeId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="overPrice != null">over_price = #{overPrice},</if>
            <if test="transGroupType != null">trans_group_type = #{transGroupType},</if>
            <if test="outId != null">out_id = #{outId},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="extra != null">extra = #{extra},</if>
            <if test="creatorId != null">creator_id = #{creatorId},</if>
            <if test="creatorName != null">creator_name = #{creatorName},</if>
            <if test="updatorId != null">updator_id = #{updatorId},</if>
            <if test="updatorName != null">updator_name = #{updatorName},</if>

            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="findByFarmId" parameterType="long" resultMap="DoctorGroupEventMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE farm_id = #{farmId}
    </select>

    <select id="updateGroupCodeByGroupId" parameterType="map" resultMap="DoctorGroupEventMap">
        UPDATE <include refid="tb"/>
        SET group_code = #{groupCode}
        WHERE group_id = #{groupId}
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) from <include refid="tb"/>
        <where>
            <if test="farmId != null">AND farm_id = #{farmId}</if>
            <if test="groupId != null">AND group_id = #{groupId}</if>
            <if test="type != null">AND `type` = #{type}</if>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorGroupEventMap">
        SELECT <include refid="cols_all"/> from <include refid="tb"/>
        <where>
            <if test="farmId != null">AND farm_id = #{farmId}</if>
            <if test="groupId != null">AND group_id = #{groupId}</if>
            <if test="type != null">AND `type` = #{type}</if>
        </where>
        ORDER BY event_at DESC, created_at DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="findGroupEventsByEventTypeAndDate" parameterType="map" resultMap="DoctorGroupEventMap">
        SELECT <include refid="cols_all"/> from <include refid="tb"/>
        <where>
            <if test="farmId != null">AND farm_id = #{farmId}</if>
            <if test="eventType != null">AND `type` = #{eventType}</if>
            <if test="startAt != null">AND event_at &gt;= #{startAt}</if>
            <if test="endAt != null">AND event_at &lt;= #{endAt}</if>
        </where>
    </select>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        <foreach collection="list" separator="," item="item">
            (
            #{item.orgId},
            #{item.orgName},
            #{item.farmId},
            #{item.farmName},
            #{item.groupId},
            #{item.groupCode},
            #{item.eventAt},
            #{item.type},
            #{item.name},
            #{item.desc},
            #{item.barnId},
            #{item.barnName},
            #{item.pigType},
            #{item.quantity},
            #{item.weight},
            #{item.avgWeight},
            #{item.baseWeight},
            #{item.avgDayAge},
            #{item.isAuto},
            #{item.changeTypeId},
            #{item.price},
            #{item.amount},
            #{item.overPrice},
            #{item.transGroupType},
            #{item.outId},
            #{item.remark},
            #{item.extra},
            now(),
            #{item.creatorId},
            #{item.creatorName},
            now(),
            #{item.updatorId},
            #{item.updatorName}
            )
        </foreach>
    </insert>

    <select id="findByDateRange" parameterType="map" resultMap="DoctorGroupEventMap">
        select
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        where 1 = 1
        <if test="beginDate != null">
            <![CDATA[ and event_at >= #{beginDate} ]]>
        </if>
        <if test="endDate != null">
            <![CDATA[ and event_at < #{endDate} ]]>
        </if>
        limit 5000
    </select>
</mapper>