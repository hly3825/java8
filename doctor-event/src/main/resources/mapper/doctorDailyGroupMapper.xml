<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorDailyGroup">
    <resultMap id="DoctorDailyGroupMap" type="DoctorDailyGroup">
        <id column="id" property="id"/>
        <result column="farm_id" property="farmId"/>
        <result column="group_id" property="groupId"/>
        <result column="type" property="type"/>
        <result column="sum_at" property="sumAt"/>
        <result column="start" property="start"/>
        <result column="wean_count" property="weanCount"/>
        <result column="unwean_count" property="unweanCount"/>
        <result column="inner_in" property="innerIn"/>
        <result column="outer_in" property="outerIn"/>
        <result column="sale" property="sale"/>
        <result column="dead" property="dead"/>
        <result column="weed_out" property="weedOut"/>
        <result column="other_change" property="otherChange"/>
        <result column="chg_farm" property="chgFarm"/>
        <result column="inner_out" property="innerOut"/>
        <result column="outer_out" property="outerOut"/>
        <result column="end" property="end"/>

    </resultMap>

    <sql id="tb">
        doctor_daily_groups
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        farm_id,
        group_id,
        type,
        sum_at,
        start,
        wean_count,
        unwean_count,
        inner_in,
        outer_in,
        sale,
        dead,
        weed_out,
        other_change,
        chg_farm,
        inner_out,
        outer_out,
        end

    </sql>

    <sql id="vals">
        #{farmId},
        #{groupId},
        #{type},
        #{sumAt},
        #{start},
        #{weanCount},
        #{unweanCount},
        #{innerIn},
        #{outerIn},
        #{sale},
        #{dead},
        #{weedOut},
        #{otherChange},
        #{chgFarm},
        #{innerOut},
        #{outerOut},
        #{end}

    </sql>

    <sql id="criteria">
        <if test="id != null">AND id = #{id}</if>
        <if test="farmId != null">AND farm_id = #{farmId}</if>
        <if test="groupId != null">AND group_id = #{groupId}</if>
        <if test="type != null">AND type = #{type}</if>
        <if test="sumAt != null">AND sum_at = #{sumAt}</if>
        <if test="start != null">AND start = #{start}</if>
        <if test="weanCount != null">AND wean_count = #{weanCount}</if>
        <if test="unweanCount != null">AND unwean_count = #{unweanCount}</if>
        <if test="innerIn != null">AND inner_in = #{innerIn}</if>
        <if test="outerIn != null">AND outer_in = #{outerIn}</if>
        <if test="sale != null">AND sale = #{sale}</if>
        <if test="dead != null">AND dead = #{dead}</if>
        <if test="weedOut != null">AND weed_out = #{weedOut}</if>
        <if test="otherChange != null">AND other_change = #{otherChange}</if>
        <if test="chgFarm != null">AND chg_farm = #{chgFarm}</if>
        <if test="innerOut != null">AND inner_out = #{innerOut}</if>
        <if test="outerOut != null">AND outer_out = #{outerOut}</if>
        <if test="end != null">AND end = #{end}</if>

    </sql>

    <insert id="create" parameterType="DoctorDailyGroup" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        <foreach collection="list" separator="," item="item">
            (
                #{item.farmId},
                #{item.groupId},
                #{item.type},
                #{item.sumAt},
                #{item.start},
                #{item.weanCount},
                #{item.unweanCount},
                #{item.innerIn},
                #{item.outerIn},
                #{item.sale},
                #{item.dead},
                #{item.weedOut},
                #{item.otherChange},
                #{item.chgFarm},
                #{item.innerOut},
                #{item.outerOut},
                #{item.end}
            )
        </foreach>
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorDailyGroupMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="DoctorDailyGroup">
        UPDATE <include refid="tb"/>
        <set>
            <if test="farmId != null">farm_id = #{farmId},</if>
            <if test="groupId != null">group_id = #{groupId},</if>
            <if test="type != null">type = #{type},</if>
            <if test="sumAt != null">sum_at = #{sumAt},</if>
            <if test="start != null">start = #{start},</if>
            <if test="weanCount != null">wean_count = #{weanCount},</if>
            <if test="unweanCount != null">unwean_count = #{unweanCount},</if>
            <if test="innerIn != null">inner_in = #{innerIn},</if>
            <if test="outerIn != null">outer_in = #{outerIn},</if>
            <if test="sale != null">sale = #{sale},</if>
            <if test="dead != null">dead = #{dead},</if>
            <if test="weedOut != null">weed_out = #{weedOut},</if>
            <if test="otherChange != null">other_change = #{otherChange},</if>
            <if test="chgFarm != null">chg_farm = #{chgFarm},</if>
            <if test="innerOut != null">inner_out = #{innerOut},</if>
            <if test="outerOut != null">outer_out = #{outerOut},</if>
            <if test="end != null">end = #{end},</if>

            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="list" parameterType="map" resultMap="DoctorDailyGroupMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1) FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorDailyGroupMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        LIMIT #{offset}, #{limit}
    </select>

    <delete id="deleteBySumAt" parameterType="map">
        DELETE FROM <include refid="tb"/>
        WHERE  sum_at = #{sumAt}
    </delete>

    <delete id="deleteByFarmIdAndSumAt" parameterType="map">
        DELETE FROM <include refid="tb"/>
        WHERE farm_id = #{farmId}
        AND sum_at = #{sumAt}
    </delete>

    <select id="getGroupStock" parameterType="map" resultType="io.terminus.doctor.event.model.DoctorGroupStock">
        select
            farm_id,
            sum(case `type` when 7 then `end` else 0 end) as farrowEnd,
            sum(case `type` when 2 then `end` else 0 end) as nurseryEnd,
            sum(case `type` when 3 then `end` else 0 end) as fattenEnd,
            sum(case `type` when 4 then `end` else 0 end) as houbeiEnd
        from doctor_daily_groups
        where farm_id = #{farmId}
        and sum_at = #{sumAt}
        group by farm_id
    </select>

</mapper>