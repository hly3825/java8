package io.terminus.doctor.event.dao;

import com.google.common.collect.ImmutableMap;
import io.terminus.common.mysql.dao.MyBatisDao;
import io.terminus.doctor.event.model.DoctorDailyGroup;
import org.springframework.stereotype.Repository;

import java.util.Date;

/**
 * Code generated by terminus code gen
 * Desc: 猪群数量每天记录表Dao类
 * Date: 2017-04-17
 */
@Repository
public class DoctorDailyGroupDao extends MyBatisDao<DoctorDailyGroup> {

    /**
     * 删除某一天的猪群统计
     * @param farmId
     * @param date
     */
    public void deleteByFarmIdAndSumAt(Long farmId, Date date) {
        getSqlSession().delete(sqlId("deleteByFarmIdAndSumAt"), ImmutableMap.of("farmId", farmId, "sumAt", date));
    }

    /**
     * 删除某一天的猪群统计
     * @param date
     */
    public void deleteByFarmIdAndSumAt(Date date) {
        getSqlSession().delete(sqlId("deleteBySumAt"), ImmutableMap.of("sumAt", date));
    }

    /**
     * 获取猪群某一天统计记录
     * @param groupId 猪群id
     * @param sumAt 统计时间
     * @return 记录
     */
    public DoctorDailyGroup findByGroupIdAndSumAt(Long groupId, Date sumAt) {
        return getSqlSession().selectOne(sqlId("findByGroupIdAndSumAt"), ImmutableMap.of("groupId", groupId, "sumAt", sumAt));
    }

    /**
     * 更新猪群某天及某天之后的存栏数量
     * @param groupId 猪群id
     * @param sumAt 统计时间
     * @param changeCount 存栏变化量
     */
    public void updateDailyGroupLiveStock(Long groupId, Date sumAt, Integer changeCount) {
        getSqlSession().update(sqlId("updateDailyGroupLiveStock"), ImmutableMap.of("groupId", groupId, "sumAt", sumAt, "changeCount", changeCount));
    }
}
