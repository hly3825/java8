package io.terminus.doctor.event.dao;

import com.google.common.collect.Maps;
import io.terminus.common.model.Paging;
import io.terminus.common.mysql.dao.MyBatisDao;
import io.terminus.common.utils.Constants;
import io.terminus.common.utils.JsonMapper;
import io.terminus.doctor.common.constants.JacksonType;
import io.terminus.doctor.event.model.DoctorEventModifyLog;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

/**
 * Code generated by terminus code gen
 * Desc: Dao类
 * Date: 2017-04-05
 */
@Repository
public class DoctorEventModifyLogDao extends MyBatisDao<DoctorEventModifyLog> {
    /**
     * 分页查询排除删除事件
     * @param offset
     * @param limit
     * @param criteria
     * @return
     */
    public Paging<DoctorEventModifyLog> pagingExcludeDeleteLog(Integer offset, Integer limit, DoctorEventModifyLog criteria){
        Map<String, Object> params = Maps.newHashMap();
        if (criteria != null) {    //查询条件不为空
            Map<String, Object> objMap = JsonMapper.nonDefaultMapper().getMapper().convertValue(criteria, JacksonType.MAP_OF_OBJECT);
            params.putAll(objMap);
        }
        // get total count
        Long total = sqlSession.selectOne(sqlId("countExcludeDeleteLog"), criteria);
        if (total <= 0){
            return Paging.empty();
        }
        params.put(Constants.VAR_OFFSET, offset);
        params.put(Constants.VAR_LIMIT, limit);
        // get data
        List<DoctorEventModifyLog> datas = sqlSession.selectList(sqlId("pagingExcludeDeleteLog"), params);
        return new Paging<>(total, datas);
    }

    public List<DoctorEventModifyLog> getEventModifyLog(String startDate) {
        return sqlSession.selectList(sqlId("getEventModifyLog"), startDate);
    }

}
