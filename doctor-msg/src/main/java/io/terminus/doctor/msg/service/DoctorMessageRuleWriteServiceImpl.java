package io.terminus.doctor.msg.service;

import com.google.common.base.Throwables;
import io.terminus.common.model.Response;
import io.terminus.doctor.msg.dao.DoctorMessageRuleDao;
import io.terminus.doctor.msg.model.DoctorMessageRule;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Code generated by terminus code gen
 * Desc: 猪场软件消息规则表写服务实现类
 * Date: 2016-05-31
 * Author: chk@terminus.io
 */
@Slf4j
@Service
public class DoctorMessageRuleWriteServiceImpl implements DoctorMessageRuleWriteService {

    private final DoctorMessageRuleDao doctorMessageRuleDao;

    @Autowired
    public DoctorMessageRuleWriteServiceImpl(DoctorMessageRuleDao doctorMessageRuleDao) {
        this.doctorMessageRuleDao = doctorMessageRuleDao;
    }

    @Override
    public Response<Long> createMessageRule(DoctorMessageRule messageRule) {
        try {
            doctorMessageRuleDao.create(messageRule);
            return Response.ok(messageRule.getId());
        } catch (Exception e) {
            log.error("create messageRule failed, messageRule:{}, cause:{}", messageRule, Throwables.getStackTraceAsString(e));
            return Response.fail("messageRule.create.fail");
        }
    }

    @Override
    public Response<Boolean> updateMessageRule(DoctorMessageRule messageRule) {
        try {
            return Response.ok(doctorMessageRuleDao.update(messageRule));
        } catch (Exception e) {
            log.error("update messageRule failed, messageRule:{}, cause:{}", messageRule, Throwables.getStackTraceAsString(e));
            return Response.fail("messageRule.update.fail");
        }
    }

    @Override
    public Response<Boolean> deleteMessageRuleById(Long messageRuleId) {
        try {
            return Response.ok(doctorMessageRuleDao.delete(messageRuleId));
        } catch (Exception e) {
            log.error("delete messageRule failed, messageRuleId:{}, cause:{}", messageRuleId, Throwables.getStackTraceAsString(e));
            return Response.fail("messageRule.delete.fail");
        }
    }
}
