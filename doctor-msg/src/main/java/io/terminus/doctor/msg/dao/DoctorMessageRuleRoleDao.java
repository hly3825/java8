package io.terminus.doctor.msg.dao;

import com.google.common.collect.ImmutableMap;
import io.terminus.common.mysql.dao.MyBatisDao;
import io.terminus.doctor.msg.model.DoctorMessageRuleRole;
import org.springframework.stereotype.Repository;

import java.util.List;

/**
 * Code generated by terminus code gen
 * Desc: 猪场软件消息规则与角色表Dao类
 * Date: 2016-05-30
 * Author: chk@terminus.io
 */
@Repository
public class DoctorMessageRuleRoleDao extends MyBatisDao<DoctorMessageRuleRole> {

    /**
     * 根据默认消息模板id查询规则与角色关系
     * @param tplId     默认消息模板id
     * @return
     */
    public List<DoctorMessageRuleRole> findByTplId(Long tplId) {
        return getSqlSession().selectList(sqlId("findByTplId"), tplId);
    }

    /**
     * 根据模板id和farmid获取与角色绑定的信息
     * @param tplId     模板id
     * @param farmId    猪场id
     * @return
     */
    public List<DoctorMessageRuleRole> findByTplAndFarmId(Long tplId, Long farmId) {
        return getSqlSession().selectList(sqlId("findByTplAndFarmId"),
                ImmutableMap.of("templateId", tplId, "farmId", farmId));
    }

    /**
     * 根据规则id获取
     * @param ruleId    规则id
     * @return
     */
    public List<DoctorMessageRuleRole> findByRuleId(Long ruleId) {
        return getSqlSession().selectList(sqlId("findByRuleId"), ruleId);
    }

    /**
     * 根据角色id获取
     * @param roleId    规则id
     * @return
     */
    public List<DoctorMessageRuleRole> findByRoleId(Long roleId) {
        return getSqlSession().selectList(sqlId("findByRoleId"), roleId);
    }

    /**
     * 根据规则id和角色id查询
     * @param ruleId    规则id
     * @param roleId    角色id
     * @return
     */
    public DoctorMessageRuleRole findByRuleAndRoleId(Long ruleId, Long roleId) {
        return getSqlSession().selectOne(sqlId("findByRuleAndRoleId"),
                ImmutableMap.of("ruleId", ruleId, "roleId", roleId));
    }
}
