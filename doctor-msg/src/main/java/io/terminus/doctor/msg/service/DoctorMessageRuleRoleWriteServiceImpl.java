package io.terminus.doctor.msg.service;

import com.google.common.base.Throwables;
import io.terminus.common.model.Response;
import io.terminus.doctor.msg.dao.DoctorMessageRuleRoleDao;
import io.terminus.doctor.msg.model.DoctorMessageRuleRole;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Code generated by terminus code gen
 * Desc: 猪场软件消息规则与角色表写服务实现类
 * Date: 2016-05-31
 * Author: chk@terminus.io
 */
@Slf4j
@Service
public class DoctorMessageRuleRoleWriteServiceImpl implements DoctorMessageRuleRoleWriteService {

    private final DoctorMessageRuleRoleDao doctorMessageRuleRoleDao;

    @Autowired
    public DoctorMessageRuleRoleWriteServiceImpl(DoctorMessageRuleRoleDao doctorMessageRuleRoleDao) {
        this.doctorMessageRuleRoleDao = doctorMessageRuleRoleDao;
    }

    @Override
    public Response<Long> createMessageRuleRole(DoctorMessageRuleRole messageRuleRole) {
        try {
            doctorMessageRuleRoleDao.create(messageRuleRole);
            return Response.ok(messageRuleRole.getId());
        } catch (Exception e) {
            log.error("create messageRuleRole failed, messageRuleRole:{}, cause:{}", messageRuleRole, Throwables.getStackTraceAsString(e));
            return Response.fail("messageRuleRole.create.fail");
        }
    }

    @Override
    public Response<Boolean> updateMessageRuleRole(DoctorMessageRuleRole messageRuleRole) {
        try {
            return Response.ok(doctorMessageRuleRoleDao.update(messageRuleRole));
        } catch (Exception e) {
            log.error("update messageRuleRole failed, messageRuleRole:{}, cause:{}", messageRuleRole, Throwables.getStackTraceAsString(e));
            return Response.fail("messageRuleRole.update.fail");
        }
    }

    @Override
    public Response<Boolean> deleteMessageRuleRoleById(Long messageRuleRoleId) {
        try {
            return Response.ok(doctorMessageRuleRoleDao.delete(messageRuleRoleId));
        } catch (Exception e) {
            log.error("delete messageRuleRole failed, messageRuleRoleId:{}, cause:{}", messageRuleRoleId, Throwables.getStackTraceAsString(e));
            return Response.fail("messageRuleRole.delete.fail");
        }
    }
}
