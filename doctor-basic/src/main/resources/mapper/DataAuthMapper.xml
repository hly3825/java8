<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DataAuth">

    <select id="getUserRoleInfoCount" parameterType="Map" resultType="Integer">
        select count(1) as ct
        from parana_users a
        join doctor_user_subs b on a.id=b.user_id
        join doctor_sub_roles c on b.role_id=c.id
        where (b.user_type=1 or b.user_type=2)
        and (c.role_type=0 or c.role_type=1 or c.role_type=2)
        <if test="userId != null">
            and a.id=#{userId}
        </if>
        <if test="userName != null">
            and a.`name` like contact('%',#{userName},'%')
        </if>
        <if test="mobile != null">
            and a.mobile like contact('%',#{mobile},'%')
        </if>
        <if test="userType != null">
            and b.user_type = #{userType}
        </if>
    </select>

    <select id="getUserRoleInfo" parameterType="Map" resultType="Map">
        select a.id,a.`name`,b.real_name as realName,a.mobile,b.user_type as userType,c.`name` as roleName
        from parana_users a
        join doctor_user_subs b on a.id=b.user_id
        join doctor_sub_roles c on b.role_id=c.id
        where (b.user_type=1 or b.user_type=2)
        and (c.role_type=0 or c.role_type=1 or c.role_type=2)
        <if test="userId != null">
          and a.id=#{userId}
        </if>
        <if test="userName != null">
          and a.`name` like contact('%',#{userName},'%')
        </if>
        <if test="mobile != null">
          and a.mobile like contact('%',#{mobile},'%')
        </if>
        <if test="userType != null">
          and b.user_type = #{userType}
        </if>
        order by a.id
        limit ${pageNo},${pageSize}
    </select>

    <select id="userSingleRoleInfo" parameterType="Integer" resultType="Map">
        select
        b.role_id as roleId,
        a.`name`,
        b.real_name as realName,
        a.mobile,
        b.user_type as userType,
        a.password
        from parana_users a
        join doctor_user_subs b on a.id=b.user_id
        join doctor_sub_roles c on b.role_id=c.id
        where (b.user_type=1 or b.user_type=2)
        and (c.role_type=0 or c.role_type=1 or c.role_type=2)
        and a.id = #{userId}
    </select>


    <!-- 新增用户 -->
    <insert id="insertUser" parameterType="Map">
        insert into parana_users(`name`,mobile,password)
        values(#{userName},#{mobile},#{password})
    </insert>

    <select id="selectUserById" parameterType="String" resultType="Integer">
        select id from parana_users where id = #{userId}
    </select>

    <select id="selectUserByName" parameterType="String" resultType="Integer">
        select id from parana_users where `name` = #{userName}
    </select>

    <select id="selectUserByMobile" parameterType="String" resultType="Integer">
        select id from parana_users where mobile = #{mobile}
    </select>

    <insert id="insertUserRole" parameterType="Map">
        insert into doctor_user_subs(user_id,user_name,real_name,role_id,user_type)
        values(#{userId},#{userName},#{realName},#{roleId},#{userType})
    </insert>

    <!-- 修改用户 -->
    <update id="updateUser" parameterType="Map">
        update parana_users set mobile = #{mobile}
        <if test="password != null">
        ,password = #{password}
        </if>
        where id = #{userId}
    </update>

    <!-- 修改用户 -->
    <update id="updateUserRole" parameterType="Map">
        update doctor_user_subs set real_name = #{realName},role_id = #{roleId},user_type=#{userType}
        where user_id = #{userId}
    </update>


    <!-- 数据范围授权接口 -->
    <select id="selectTreeAll" resultType="Map">
        select groupId,groupName,orgId,orgName,c.id as farmId,c.`name` as farmName
        from (select a.id as groupId,a.`name` as groupName,a.type,b.id as orgId,b.`name` as orgName,b.type as orgType
        from doctor_orgs a left join  doctor_orgs b on a.id=b.parent_id
        where (a.type = 1 or b.type=2)
        order by a.id,b.id) as group_org_result
        left join doctor_farms c
        on group_org_result.orgId = c.org_id
        order by group_org_result.groupId,group_org_result.orgId,c.id
    </select>

    <select id="selectUserPermission" parameterType="Integer" resultType="Map">
            select group_ids,org_ids,farm_ids from doctor_user_data_permissions
            where user_id=#{userId}
    </select>

    <select id="selectUserType" parameterType="Integer" resultType="String">
        select user_type from doctor_user_subs where user_id=#{userId}
    </select>

    <!-- 批量操作数据范围授权接口 -->
    <delete id="deletePerssion" parameterType="String">
        delete from doctor_user_data_permissions where user_id=#{userId}
    </delete>

    <update id="updateSubUserType" parameterType="Map">
        update doctor_sub_roles set user_type = #{userType} where user_id = #{userId}
    </update>

    <insert id="insertPerssion" parameterType="Map">
        insert into doctor_user_data_permissions(user_id,group_ids,org_ids,farm_ids)
        values(#{userId},#{groupIds},#{orgIds},#{farmIds})
    </insert>

</mapper>