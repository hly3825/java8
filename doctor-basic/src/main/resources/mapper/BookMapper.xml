<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 ~ Desc:
 ~ Mail: [ your email ]
 ~ Date: 2018-04-12 20:38:39
 ~ Created by [ your name ]
-->

<mapper namespace="Book">
    <resultMap id="BookMap" type="Book">
        <id property="id" column="id"/>
        <result property="bookName" column="book_name"/>
        <result property="bookAuth" column="book_auth"/>
        <result property="bookType" column="book_type"/>
        <result property="bookPrice" column="book_price"/>
        <result property="bookTime" column="book_time"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        book
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `book_name`, `book_auth`, `book_type`, `book_price`, `book_time`, 
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{bookName}, #{bookAuth}, #{bookType}, #{bookPrice}, #{bookTime}, 
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="bookName != null">AND `book_name` = #{bookName}</if>
            <if test="bookAuth != null">AND `book_auth` = #{bookAuth}</if>
            <if test="bookType != null">AND `book_type` = #{bookType}</if>
            <if test="bookPrice != null">AND `book_price` = #{bookPrice}</if>
            <if test="bookTime != null">AND `book_time` = #{bookTime}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="Book" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="BookMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="BookMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="Book">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="bookName != null">`book_name` = #{bookName},</if>
            <if test="bookAuth != null">`book_auth` = #{bookAuth},</if>
            <if test="bookType != null">`book_type` = #{bookType},</if>
            <if test="bookPrice != null">`book_price` = #{bookPrice},</if>
            <if test="bookTime != null">`book_time` = #{bookTime},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>
    
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="BookMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="BookMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

</mapper>
