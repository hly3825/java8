<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 ~ Desc:
 ~ Mail: [ your email ]
 ~ Date: 2018-04-19 17:05:11
 ~ Created by [ your name ]
-->

<mapper namespace="DoctorWarehouseStockMonthly">
    <resultMap id="DoctorWarehouseStockMonthlyMap" type="DoctorWarehouseStockMonthly">
        <id property="id" column="id"/>
        <result property="orgId" column="org_id"/>
        <result property="farmId" column="farm_id"/>
        <result property="warehouseId" column="warehouse_id"/>
        <result property="materialId" column="material_id"/>
        <result property="balanceQuantity" column="balance_quantity"/>
        <result property="balanceAmount" column="balance_amount"/>
        <result property="settlementDate" column="settlement_date"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        doctor_warehouse_stock_monthly
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `org_id`, `farm_id`, `warehouse_id`, `material_id`, `balance_quantity`, `balance_amount`, `settlement_date`, 
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{orgId}, #{farmId}, #{warehouseId}, #{materialId}, #{balanceQuantity}, #{balanceAmount}, #{settlementDate}, 
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="warehouseId != null">AND `warehouse_id` = #{warehouseId}</if>
            <if test="materialId != null">AND `material_id` = #{materialId}</if>
            <if test="balanceQuantity != null">AND `balance_quantity` = #{balanceQuantity}</if>
            <if test="balanceAmount != null">AND `balance_amount` = #{balanceAmount}</if>
            <if test="settlementDate != null">AND `settlement_date` = #{settlementDate}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="DoctorWarehouseStockMonthly" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorWarehouseStockMonthly">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="orgId != null">`org_id` = #{orgId},</if>
            <if test="farmId != null">`farm_id` = #{farmId},</if>
            <if test="warehouseId != null">`warehouse_id` = #{warehouseId},</if>
            <if test="materialId != null">`material_id` = #{materialId},</if>
            <if test="balanceQuantity != null">`balance_quantity` = #{balanceQuantity},</if>
            <if test="balanceAmount != null">`balance_amount` = #{balanceAmount},</if>
            <if test="settlementDate != null">`settlement_date` = #{settlementDate},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>
    
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

    <select id="statistics" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        sum(balance_quantity) as balanceQuantity,sum(balacne_amount) as balacneAmount,warehouse_id,material_id
        FROM
        <include refid="tb"/>
        <where>
            <if test="warehouseId !=null">
                AND warehouse_id=#{warehouseId}
            </if>
            <if test="warehouseIds !=null and warehouseIds.size() >0">
                AND
                <foreach collection="warehouseIds" item="t" open="(" separator="or" close=")">
                    warehouse_id=#{t}
                </foreach>
            </if>
            <if test="skuId !=null">
                AND material_id=#{skuId}
            </if>
        </where>
        GROUP BY warehouse_id,material_id
    </select>

    <select id="statisticsGroupBySku" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        material_id,sum(balacne_amount) as balacneAmount,sum(balance_quantity) as balanceQuantity
        FROM
        <include refid="tb"/>
        where warehouse_id =#{warehouseId}
        <if test="handleDate !=null">AND <![CDATA[handle_date<=#{handleDate}]]></if>
        GROUP BY material_id
    </select>

    <select id="statisticsWarehouse" parameterType="map" resultMap="DoctorWarehouseStockMonthlyMap">
        SELECT
        warehouse_id,sum(balacne_amount) as balacneAmount,sum(balance_quantity) as balanceQuantity
        FROM
        <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        and <![CDATA[handle_date<=#{handleDate}]]>
    </select>

</mapper>
