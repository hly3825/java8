<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 ~ Desc:
 ~ Mail: [ your email ]
 ~ Date: 2018-04-19 19:40:59
 ~ Created by [ your name ]
-->

<mapper namespace="DoctorWarehouseMaterialHandle">
    <resultMap id="DoctorWarehouseMaterialHandleMap" type="DoctorWarehouseMaterialHandle">
        <id property="id" column="id"/>
        <result property="stockHandleId" column="stock_handle_id"/>
        <result property="orgId" column="org_id"/>
        <result property="farmId" column="farm_id"/>
        <result property="warehouseId" column="warehouse_id"/>
        <result property="warehouseType" column="warehouse_type"/>
        <result property="warehouseName" column="warehouse_name"/>
        <result property="relMaterialHandleId" column="rel_material_handle_id"/>
        <result property="vendorName" column="vendor_name"/>
        <result property="materialId" column="material_id"/>
        <result property="materialName" column="material_name"/>
        <result property="type" column="type"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="unit" column="unit"/>
        <result property="deleteFlag" column="delete_flag"/>
        <result property="beforeStockQuantity" column="before_stock_quantity"/>
        <result property="quantity" column="quantity"/>
        <result property="handleDate" column="handle_date"/>
        <result property="handleYear" column="handle_year"/>
        <result property="handleMonth" column="handle_month"/>
        <result property="operatorId" column="operator_id"/>
        <result property="operatorName" column="operator_name"/>
        <result property="remark" column="remark"/>
        <result property="settlementDate" column="settlement_date"/>
        <result property="amount" column="amount"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        doctor_warehouse_material_handle
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `stock_handle_id`, `org_id`, `farm_id`, `warehouse_id`, `warehouse_type`, `warehouse_name`, `rel_material_handle_id`, `vendor_name`, `material_id`, `material_name`, `type`, `unit_price`, `unit`, `delete_flag`, `before_stock_quantity`, `quantity`, `handle_date`, `handle_year`, `handle_month`, `operator_id`, `operator_name`, `remark`, `settlement_date`, `amount`,
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{stockHandleId}, #{orgId}, #{farmId}, #{warehouseId}, #{warehouseType}, #{warehouseName}, #{relMaterialHandleId}, #{vendorName}, #{materialId}, #{materialName}, #{type}, #{unitPrice}, #{unit}, #{deleteFlag}, #{beforeStockQuantity}, #{quantity}, #{handleDate}, #{handleYear}, #{handleMonth}, #{operatorId}, #{operatorName}, #{remark}, #{settlementDate}, #{amount},
        now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="stockHandleId != null">AND `stock_handle_id` = #{stockHandleId}</if>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="warehouseId != null">AND `warehouse_id` = #{warehouseId}</if>
            <if test="warehouseType != null">AND `warehouse_type` = #{warehouseType}</if>
            <if test="warehouseName != null">AND `warehouse_name` = #{warehouseName}</if>
            <if test="relMaterialHandleId != null">AND `rel_material_handle_id` = #{relMaterialHandleId}</if>
            <if test="vendorName != null">AND `vendor_name` = #{vendorName}</if>
            <if test="materialId != null">AND `material_id` = #{materialId}</if>
            <if test="materialName != null">AND `material_name` = #{materialName}</if>
            <if test="type != null">AND `type` = #{type}</if>
            <if test="unitPrice != null">AND `unit_price` = #{unitPrice}</if>
            <if test="unit != null">AND `unit` = #{unit}</if>
            <if test="deleteFlag != null">AND `delete_flag` = #{deleteFlag}</if>
            <if test="beforeStockQuantity != null">AND `before_stock_quantity` = #{beforeStockQuantity}</if>
            <if test="quantity != null">AND `quantity` = #{quantity}</if>
            <if test="handleDate != null">AND `handle_date` = #{handleDate}</if>
            <if test="handleYear != null">AND `handle_year` = #{handleYear}</if>
            <if test="handleMonth != null">AND `handle_month` = #{handleMonth}</if>
            <if test="operatorId != null">AND `operator_id` = #{operatorId}</if>
            <if test="operatorName != null">AND `operator_name` = #{operatorName}</if>
            <if test="remark != null">AND `remark` = #{remark}</if>
            <if test="settlementDate != null">AND `settlement_date` = #{settlementDate}</if>
            <if test="amount != null">AND `amount` = #{amount}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <sql id="adv_criteria">
        <where>
            <if test="stockHandleId != null">AND `stock_handle_id` = #{stockHandleId}</if>
            <if test="orgId != null">AND `org_id` = #{orgId}</if>
            <if test="farmId != null">AND `farm_id` = #{farmId}</if>
            <if test="warehouseId != null">AND `warehouse_id` = #{warehouseId}</if>
            <if test="warehouseType != null">AND `warehouse_type` = #{warehouseType}</if>
            <if test="warehouseName != null">AND `warehouse_name` = #{warehouseName}</if>
            <if test="relMaterialHandleId != null">AND `rel_material_handle_id` = #{relMaterialHandleId}</if>
            <if test="vendorName != null">AND `vendor_name` = #{vendorName}</if>
            <if test="materialId != null">AND `material_id` = #{materialId}</if>
            <if test="materialName != null">AND `material_name` = #{materialName}</if>
            <if test="type != null">AND `type` = #{type}</if>
            <if test="unitPrice != null">AND `unit_price` = #{unitPrice}</if>
            <if test="unit != null">AND `unit` = #{unit}</if>
            <if test="deleteFlag != null">AND `delete_flag` = #{deleteFlag}</if>
            <if test="beforeStockQuantity != null">AND `before_stock_quantity` = #{beforeStockQuantity}</if>
            <if test="quantity != null">AND `quantity` = #{quantity}</if>
            <if test="handleDate != null">AND `handle_date` = #{handleDate}</if>
            <if test="handleYear != null">AND `handle_year` = #{handleYear}</if>
            <if test="handleMonth != null">AND `handle_month` = #{handleMonth}</if>
            <if test="operatorId != null">AND `operator_id` = #{operatorId}</if>
            <if test="operatorName != null">AND `operator_name` = #{operatorName}</if>
            <if test="remark != null">AND `remark` = #{remark}</if>
            <if test="settlementDate != null">AND `settlement_date` = #{settlementDate}</if>
            <if test="amount != null">AND `amount` = #{amount}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>

            <if test="bigType != null and bigType.size() > 0">
                AND
                <foreach collection="bigType" item="t" open="(" separator="or" close=")">
                    type =#{t}
                </foreach>
            </if>
            <if test="startDate != null">AND handle_date between #{startDate} and #{endDate}</if>
            <if test="startDate ==null and endDate!=null">AND <![CDATA[ handle_date <= #{endDate}]]></if>
            <if test="materialNameLike != null">AND `material_name` like CONCAT('%',#{materialNameLike},'%')</if>
            <if test="skuIds != null and skuIds.size() > 0">
                AND
                <foreach collection="skuIds" item="t" open="(" separator="or" close=")">
                    material_id =#{t}
                </foreach>
            </if>

            <if test="settlementDateStart">AND <![CDATA[settlement_date >= #{settlementDateStart}]]></if>
            <if test="settlementDateEnd">AND <![CDATA[settlement_date <= #{settlementDateEnd}]]></if>
        </where>
    </sql>

    <insert id="create" parameterType="DoctorWarehouseMaterialHandle" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="DoctorWarehouseMaterialHandle">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="stockHandleId != null">`stock_handle_id` = #{stockHandleId},</if>
            <if test="orgId != null">`org_id` = #{orgId},</if>
            <if test="farmId != null">`farm_id` = #{farmId},</if>
            <if test="warehouseId != null">`warehouse_id` = #{warehouseId},</if>
            <if test="warehouseType != null">`warehouse_type` = #{warehouseType},</if>
            <if test="warehouseName != null">`warehouse_name` = #{warehouseName},</if>
            <if test="relMaterialHandleId != null">`rel_material_handle_id` = #{relMaterialHandleId},</if>
            <if test="vendorName != null">`vendor_name` = #{vendorName},</if>
            <if test="materialId != null">`material_id` = #{materialId},</if>
            <if test="materialName != null">`material_name` = #{materialName},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="unitPrice != null">`unit_price` = #{unitPrice},</if>
            <if test="unit != null">`unit` = #{unit},</if>
            <if test="deleteFlag != null">`delete_flag` = #{deleteFlag},</if>
            <if test="beforeStockQuantity != null">`before_stock_quantity` = #{beforeStockQuantity},</if>
            <if test="quantity != null">`quantity` = #{quantity},</if>
            <if test="handleDate != null">`handle_date` = #{handleDate},</if>
            <if test="handleYear != null">`handle_year` = #{handleYear},</if>
            <if test="handleMonth != null">`handle_month` = #{handleMonth},</if>
            <if test="operatorId != null">`operator_id` = #{operatorId},</if>
            <if test="operatorName != null">`operator_name` = #{operatorName},</if>
            <if test="remark != null">`remark` = #{remark},</if>
            <if test="settlementDate != null">`settlement_date` = #{settlementDate},</if>
            <if test="amount != null">`amount` = #{amount},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>
    
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

    <select id="advCount" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="adv_criteria"/>
    </select>

    <select id="advPaging" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="adv_criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="advList" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="adv_criteria"/>
        ORDER BY `id` DESC
    </select>


    <select id="findAfterByDate" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND material_id=#{skuId}
        <choose>
            <when test="includeHandleDate">
                AND <![CDATA[ handle_date >= #{handleDate}]]>
            </when>
            <otherwise>
                AND <![CDATA[ handle_date > #{handleDate}]]>
            </otherwise>
        </choose>
        AND delete_flag=1
        ORDER BY handle_date ASC,id ASC
    </select>

    <select id="countHistoryStock" parameterType="map" resultType="BigDecimal">
        SELECT ifnull(sum(
        case type
        when '1' then quantity
        when '2' then -quantity
        when '7' then quantity
        when '8' then -quantity
        when '9' then quantity
        when '10' then -quantity
        when '11' then quantity
        when '12' then -quantity
        when '13' then quantity end
        ),0) as quantity
        FROM <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND material_id=#{skuId}
        <choose>
            <when test="include">
                AND <![CDATA[ handle_date <= #{handleDate}]]>
            </when>
            <otherwise>
                AND <![CDATA[ handle_date < #{handleDate}]]>
            </otherwise>
        </choose>

        AND delete_flag=1
        ORDER BY handle_date ASC,id ASC
    </select>

    <select id="findByOrgAndSettlementDate" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE org_id=#{orgId}
        AND settlement_date=#{settlementDate}
        AND delete_flag=1
        ORDER BY handle_date ASC,id ASC
    </select>

    <select id="findBalanceByAccountingDate" parameterType="map" resultType="map">
        SELECT
        ifnull(sum(
        case type
        when '1' then quantity
        when '2' then -quantity
        when '7' then quantity
        when '8' then -quantity
        when '9' then quantity
        when '10' then -quantity
        when '11' then quantity
        when '12' then -quantity
        when '13' then quantity end
        ),0) as quantity,
        ifnull(sum(
        case type
        when '1' then amount
        when '2' then -amount
        when '7' then amount
        when '8' then -amount
        when '9' then amount
        when '10' then -amount
        when '11' then amount
        when '12' then -amount
        when '13' then amount end
        ),0) as amount
        FROM <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND settlement_date = #{settlementDate}
        AND delete_flag=1
    </select>

    <select id="findBalanceBySettlementDate" parameterType="map" resultType="map">
        SELECT
        ifnull(sum(
        case type
        when '1' then quantity
        when '2' then -quantity
        when '7' then quantity
        when '8' then -quantity
        when '9' then quantity
        when '10' then -quantity
        when '11' then quantity
        when '12' then -quantity
        when '13' then quantity end
        ),0) as quantity,
        ifnull(sum(
        case type
        when '1' then amount
        when '2' then -amount
        when '7' then amount
        when '8' then -amount
        when '9' then amount
        when '10' then -amount
        when '11' then amount
        when '12' then -amount
        when '13' then amount end
        ),0) as amount
        FROM <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND material_id=#{skuId}
        AND settlement_date = #{settlementDate}
        AND delete_flag=1
    </select>

    <update id="updateHandleDateAndSettlementDate" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET handle_date=#{handleDate},
        settlement_date=#{settlementDate},
        handle_year=#{year},
        handle_month=#{month}
        WHERE rel_material_handle_id=#{materialHandleId}
    </update>

    <select id="findFirstRefundHandleDate" parameterType="list" resultType="Date">
        SELECT min(handle_date)
        FROM <include refid="tb"/>
        WHERE
        <foreach collection="outMaterialHandleIds" item="i" open="(" separator="or" close=")">
            rel_material_handle_id=#{i}
        </foreach>
        AND type=13
    </select>

    <select id="findPrevious" parameterType="map" resultMap="DoctorWarehouseMaterialHandleMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE warehouse_id=#{warehouseId}
        AND type=#{type}
        AND <![CDATA[ handle_date <= #{handleDate}]]>
        AND delete_flag=1
        ORDER BY handle_date DESC,id DESC
        LIMIT 1
    </select>

    <update id="reverseSettlement" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET unit_price=0,amount=0
        WHERE farm_id=#{farmId}
        AND (type=2 or type=8 or type=9 or type=10 or type=11 or type=12 or type=13)
        AND handle_year = #{year} AND handle_month=#{month}
        AND delete_flag=1
    </update>

    <update id="reverseSettlementByOrg" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET unit_price=0,amount=0
        WHERE org_id=#{orgId}
        AND (type=2 or type=8 or type=9 or type=10 or type=11 or type=12 or type=13)
        AND settlement_date=#{settlementDate}
        AND delete_flag=1
    </update>

    <select id="countQuantityAlreadyRefund" parameterType="long" resultType="BigDecimal">
        select ifnull(sum(quantity),0) from doctor_warehouse_material_handle where rel_material_handle_id=#{countQuantityAlreadyRefund}
    </select>

    <select id="getWarehouseMaterialHandleCount" resultType="int">
        select count(1) as count from  doctor_warehouse_material_handle
        where  warehouse_id = #{id}
    </select>

    <select id="findLibraryById" parameterType="long" resultType="BigDecimal">
        select quantity from <include refid="tb"/>
        where id=#{id} and type=2
    </select>

    <select id="findRetreatingById" parameterType="DoctorWarehouseMaterialHandle" resultType="BigDecimal">
        select ifnull(sum(quantity),0) from <include refid="tb"/>
        where type=13 and rel_material_handle_id=#{relMaterialHandleId}
        and <![CDATA[ settlement_date <= #{settlementDate}]]>
        order by settlement_date ,id desc;
    </select>

    <select id="findByStockHandleId" parameterType="long" resultType="DoctorWarehouseMaterialHandle">
        select * from  doctor_warehouse_material_handle
        where  stock_handle_id = #{id}
    </select>

    <select id="listByFarmIdTime" parameterType="map" resultType="map">
        select a.farm_id as farmId,ifnull(f.name,'') as farmName,a.type as type,max(a.handle_Date) as handleDate,
        a.handle_year as handleYear,a.handle_Month as handleMonth,a.org_id as orgId,
        <include refid="inAmount"/>
        <include refid="outAmount"/>
        <include refid="balanceAmount"/>
        from doctor_warehouse_material_handle a
        left join doctor_farms f on a.farm_id = f.number
        where a.delete_flag = 1
        <if test="farmId!=null">
            and a.farm_id = #{farmId,jdbcType = BIGINT}
        </if>
        <if test="handleMonth!=null">
            and a.handle_month = #{handleMonth,jdbcType=BIGINT}
        </if>
        <if test="handleYear!=null">
            and a.handle_year = #{handleYear,jdbcType=BIGINT}
        </if>
        <if test="orgId!=null">
            and a.org_id = #{orgId,jdbcType=BIGINT}
        </if>
        group by a.farm_id
        order by a.farm_id
    </select>
    <select id="wlbdReport" parameterType="Map" resultType="map">
        select
        '' as id,'上月结存' as material_name,
        '' as material_type,'' as ware_house_name,'' as handle_date,
        '' as settlement_date,'' as handler_type,
        '' as rksl,'' as rkdj,'' as rkje,
        '' as cksl,'' as ckdj,'' as ckje,
        ifnull(sum(a.balance_quantity),'') as jcsl,
        ifnull(sum(a.balance_amount) / sum(a.balance_quantity),'') as jcdj,
        ifnull(sum(a.balance_amount),'') as jcje,
        '' as pig_barn_name,
        '' as pig_type,
        '' as pig_group_name,
        '' as apply_staff_name,
        '' as farm_name,
        '' as unit,
        '' as provider_name,
        '' as specification
        from  doctor_warehouse_stock_monthly  a
        join  doctor_warehouse_sku b on a.material_id=b.id
        where 1=1
        <if test="settlementDate != null">
          and date_format(a.settlement_date,'%Y-%m')=date_format(DATE_SUB(CONCAT(#{settlementDate},'-01'), INTERVAL 1 MONTH),'%Y-%m')
        </if>
        <if test="farmId != null">
          and a.farm_id=#{farmId}
        </if>
        <if test="warehouseId != null">
          and a.warehouse_id=#{warehouseId}
        </if>
        <if test="materialName != null">
          and b.`name` like CONCAT('%',#{materialName},'%')
        </if>
        union all
        select * from (
        select b.id,b.material_name,d.type as material_type,a.ware_house_name,
        date_format(b.handle_date,'%Y-%m-%d') as handle_date,
        date_format(b.settlement_date,'%Y-%m') as settlement_date,
        b.type as handler_type,
        ifnull(case when b.type in (1,2,3,4,5)
        then b.quantity end,'') as rksl,
        ifnull(case when b.type in (1,2,3,4,5)
        then  b.unit_price end,'') as rkdj,
        ifnull(case when b.type in (1,2,3,4,5)
        then b.amount end,'') as rkje,
        ifnull(case when b.type in (6,7,8,9)
        then b.quantity end,'') as cksl,
        ifnull(case when b.type in (6,7,8,9)
        then  b.unit_price end,'') as ckdj,
        ifnull(case when b.type in (6,7,8,9)
        then b.amount end,'') as ckje,
        (
        ifnull(case when b.type in (6,7,8,9)
        then b.quantity end,'')
        -
        ifnull(case when b.type in (1,2,3,4,5)
        then b.quantity end,'')
        ) as jcsl,
        ifnull((
        (
        ifnull(case when b.type in (6,7,8,9)
        then b.amount end,'')
        -
        ifnull(case when b.type in (1,2,3,4,5)
        then b.amount end,'')
        )
        /
        ifnull(case when b.type in (6,7,8,9)
        then b.quantity end,'')
        -
        ifnull(case when b.type in (1,2,3,4,5)
        then b.quantity end,'')
        ),'') as jcdj,
        (
        ifnull(case when b.type in (6,7,8,9)
        then b.amount end,'')
        -
        ifnull(case when b.type in (1,2,3,4,5)
        then b.amount end,'')
        ) as jcje,
        f.pig_barn_name,
        f.pig_type,
        f.pig_group_name,
        f.apply_staff_name,
        c.`name` as farm_name,
        b.unit,
        e.`name` as provider_name,
        d.specification
        from doctor_warehouse_material_handle b
        join doctor_ware_houses a
        on b.warehouse_id=a.id
        left join doctor_warehouse_material_apply f
        on b.id=f.material_handle_id
        join doctor_farms c
        on a.farm_id=c.id
        join doctor_warehouse_sku d
        on b.material_id=d.id
        join doctor_warehouse_vendor e
        on d.vendor_id=e.id
        where b.delete_flag=1
        <if test="farmId != null">
          and b.farm_id=#{farmId}
        </if>
        <if test="settlementDate != null">
          and date_format(b.settlement_date,'%Y-%m')=#{settlementDate}
        </if>
        <if test="warehouseId != null">
          and b.warehouse_id=#{warehouseId}
        </if>
        <if test="materialName != null">
            and d.`name` like CONCAT('%',#{materialName},'%')
        </if>
        <if test="pigBarnType != null">
            and f.pig_type=#{pigBarnType}
        </if>
        <if test="pigBarnId != null">
            and f.pig_barn_id=#{pigBarnId}
        </if>
        <if test="pigGroupId != null">
            and f.pig_group_id=#{pigGroupId}
        </if>
        <if test="handlerType != null">
            and b.type=#{handlerType}
        </if>
        <if test="type != null">
            and d.type=#{type}
        </if>
        order by b.settlement_date,b.id
        ) as bjdata
        union all
        select
        '' as id,'本月结存' as material_name,
        '' as material_type,'' as ware_house_name,'' as handle_date,
        '' as settlement_date,'' as 	handler_type,
        '' as rksl,'' as rkdj,'' as rkje,
        '' as cksl,'' as ckdj,'' as ckje,
        case when
        (ifnull(case when b.type in (6,7,8,9) then sum(b.quantity) end,0)
        -
        ifnull(case when b.type in (1,2,3,4,5) then sum(b.quantity) end,0)) = 0
        then ''
        else
        (ifnull(case when b.type in (6,7,8,9) then sum(b.quantity) end,0)
        -
        ifnull(case when b.type in (1,2,3,4,5) then sum(b.quantity) end,0))
        end as jcsl,
        ifnull(
        (ifnull(case when b.type in (6,7,8,9) then sum(b.amount) end,0)
        -
        ifnull(case when b.type in (1,2,3,4,5) then sum(b.amount) end,0))
        /
        (ifnull(case when b.type in (6,7,8,9) then sum(b.quantity) end,0)
        -
        ifnull(case when b.type in (1,2,3,4,5) then sum(b.quantity) end,0)),'')
        as jcdj,
        case when
        (ifnull(case when b.type in (6,7,8,9) then sum(b.amount) end,0)
        -
        ifnull(case when b.type in (1,2,3,4,5) then sum(b.amount) end,0)) = 0
        then ''
        else
        (ifnull(case when b.type in (6,7,8,9) then sum(b.amount) end,0)
        -
        ifnull(case when b.type in (1,2,3,4,5) then sum(b.amount) end,0))
        end as jcje,
        '' as pig_barn_name,
        '' as pig_type,
        '' as pig_group_name,
        '' as apply_staff_name,
        '' as farm_name,
        '' as unit,
        '' as provider_name,
        '' as specification
        from  doctor_warehouse_material_handle b
        join doctor_ware_houses a
        on b.warehouse_id=a.id
        left join doctor_warehouse_material_apply f
        on b.id=f.material_handle_id
        join doctor_farms c
        on a.farm_id=c.id
        join doctor_warehouse_sku d
        on b.material_id=d.id
        join doctor_warehouse_vendor e
        on d.vendor_id=e.id
        where b.delete_flag=1
        <if test="farmId != null">
          and b.farm_id=#{farmId}
        </if>
        <if test="settlementDate != null">
          and date_format(b.settlement_date,'%Y-%m')=#{settlementDate}
        </if>
        <if test="warehouseId != null">
          and b.warehouse_id=#{warehouseId}
        </if>
        <if test="materialName != null">
          and d.`name` like CONCAT('%',#{materialName},'%')
        </if>
    </select>

    <sql id ="balanceAmount">
        ifnull((select sum(b.balance_amount)
        from doctor_warehouse_stock_monthly b
        where b.farm_id = a.farm_id
        and b.settlement_date = a.settlement_date
        ),0)as balanceAmount
    </sql>

    <sql id="inAmount">
        ifnull((select  sum(c.amount)
        from doctor_warehouse_material_handle c
        where c.farm_id = a.farm_id
        and c.delete_flag = 1
        and c.handle_year = #{handleYear,jdbcType=BIGINT}
        and c.handle_month = #{handleMonth,jdbcType=BIGINT}
        and c.type in (
           1,7,9,11,13
        )
        ),0) as inAmount,
    </sql>

    <sql id="outAmount">
         ifnull((select sum(d.amount)
            from doctor_warehouse_material_handle d
            where d.farm_id = a.farm_id
            and d.delete_flag = 1
            and d.handle_year = #{handleYear,jdbcType=BIGINT}
            and d.handle_month = #{handleMonth,jdbcType=BIGINT}
            and d.type in (
                2,8,10,12
            )
        ),0) as outAmount,
    </sql>

    <select id="getPigBarnNameOption" parameterType="Map" resultType="map">
        select id,`name` from doctor_barns where farm_id=#{farmId} and pig_type=#{pigType}
    </select>

    <select id="getPigGroupNameOption" parameterType="Map" resultType="map">
        select id,group_code from doctor_groups where farm_id=#{farmId} and current_barn_id=#{barnId}
    </select>

    <select id="getWareHouseDataOption" parameterType="long" resultType="map">
        select id,ware_house_name from doctor_ware_houses where farm_id=#{farmId}
    </select>
</mapper>
