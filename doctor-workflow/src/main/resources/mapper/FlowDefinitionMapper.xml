<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="FlowDefinition">

    <resultMap id="FlowDefinitionMap" type="FlowDefinition">
        <id column="id" property="id"/>
        <result column="key" property="key"/>
        <result column="name" property="name"/>
        <result column="version" property="version"/>
        <result column="resource_name" property="resourceName"/>
        <result column="resource" property="resource"/>
        <result column="status" property="status"/>
        <result column="operator_id" property="operatorId"/>
        <result column="operator_name" property="operatorName"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        workflow_definitions
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `key`,`name`,`version`,`resource_name`,`resource`,`status`,`operator_id`,`operator_name`,`created_at`,`updated_at`    </sql>

    <sql id="vals">
        #{key},#{name},#{version},#{resourceName},#{resource},#{status},#{operatorId},#{operatorName},now(),now()    </sql>

    <insert id="create" parameterType="FlowDefinition" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="FlowDefinitionMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="FlowDefinition">
        UPDATE
        <include refid="tb"/>
        <set>
            updated_at = now()
            <if test="key != null">,`key` = #{key}</if>
            <if test="name != null">,`name` = #{name}</if>
            <if test="version != null">,`version` = #{version}</if>
            <if test="resourceName != null">,`resource_name` = #{resourceName}</if>
            <if test="resource != null">,`resource` = #{resource}</if>
            <if test="status != null">,`status` = #{status}</if>
            <if test="operatorId != null">,`operator_id` = #{operatorId}</if>
            <if test="operatorName != null">,`operator_name` = #{operatorName}</if>
            <if test="createdAt != null">,`created_at` = #{createdAt}</if>
        </set>
        WHERE id=#{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </delete>

    <sql id="criteria">
        <where>
            <if test="id != null"> AND `id` = #{id} </if>
            <if test="key != null"> AND `key` = #{key} </if>
            <if test="name != null"> AND `name` = #{name} </if>
            <if test="status != null"> AND `status` = #{status}</if>
            <if test="operatorId != null"> AND `operator_id` = #{operatorId}</if>
            <if test="operatorName != null"> AND `operator_name` LIKE CONCAT('%',#{operator_name},'%') </if>
            <if test="startAt != null">AND  `created_at` >= #{startAt}</if>
            <if test="endAt != null">AND  `created_at` &lt;= #{endAt}</if>
        </where>
    </sql>

    <select id="list" resultMap="FlowDefinitionMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        <if test="orderBy != null"> ORDER BY ${orderBy}</if>
        <if test="desc != null"> DESC </if>
    </select>

    <!-- 计数 -->
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <!-- 分页查询 -->
    <select id="paging" parameterType="map" resultMap="FlowDefinitionMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        <if test="orderBy != null"> ORDER BY ${orderBy}</if>
        <if test="desc != null"> DESC </if>
        LIMIT #{offset}, #{limit}
    </select>

</mapper>