<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="FlowDefinitionNode">

    <resultMap id="FlowDefinitionNodeMap" type="FlowDefinitionNode">
        <id column="id" property="id"/>
        <result column="flow_definition_id" property="flowDefinitionId"/>
        <result column="name" property="name"/>
        <result column="value" property="value"/>
        <result column="node_name" property="nodeName"/>
        <result column="type" property="type"/>
        <result column="assignee" property="assignee"/>
        <result column="timer" property="timer"/>
        <result column="itimer" property="iTimer"/>
        <result column="point_x" property="pointX"/>
        <result column="point_y" property="pointY"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        workflow_definition_nodes
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `flow_definition_id`,`name`,`value`,`node_name`,`type`,`assignee`,`timer`, `itimer`, `point_x`,`point_y`,`created_at`,`updated_at`    </sql>

    <sql id="vals">
        #{flowDefinitionId},#{name},#{value},#{nodeName},#{type},#{assignee},#{timer},#{iTimer},#{pointX},#{pointY},now(),now()    </sql>

    <insert id="create" parameterType="FlowDefinitionNode" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="FlowDefinitionNodeMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>


    <update id="update" parameterType="FlowDefinitionNode">
        UPDATE
        <include refid="tb"/>
        <set>
            updated_at = now()
            <if test="flowDefinitionId != null">,`flow_definition_id` = #{flowDefinitionId}</if>
            <if test="name != null">,`name` = #{name}</if>
            <if test="value != null">,`value` = #{value}</if>
            <if test="nodeName != null">,`node_name` = #{nodeName}</if>
            <if test="type != null">,`type` = #{type}</if>
            <if test="assignee != null">,`assignee` = #{assignee}</if>
            <if test="timer != null">,`timer` = #{timer}</if>
            <if test="pointX != null">,`point_x` = #{pointX}</if>
            <if test="pointY != null">,`point_y` = #{pointY}</if>
            <if test="createdAt != null">,`created_at` = #{createdAt}</if>
        </set>
        WHERE id=#{id}
    </update>


    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </delete>

    <sql id="criteria">
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="flowDefinitionId != null">AND `flow_definition_id` = #{flowDefinitionId}</if>
            <if test="name != null">AND `name` = #{name}</if>
            <if test="value != null">AND `value` = #{value}</if>
            <if test="nodeName != null">AND `node_name` = #{nodeName}</if>
            <if test="type != null">AND `type` = #{type}</if>
            <if test="assignee != null">AND `assignee` = #{assignee}</if>
            <if test="startAt != null">AND `created_at` >= #{startAt}</if>
            <if test="endAt != null">AND `created_at` &lt;= #{endAt}</if>
        </where>
    </sql>

    <select id="list" parameterType="map" resultMap="FlowDefinitionNodeMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        <if test="orderBy != null"> ORDER BY ${orderBy}</if>
        <if test="desc != null"> DESC </if>
    </select>

    <!-- 计数 -->
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <!-- 分页查询 -->
    <select id="paging" parameterType="map" resultMap="FlowDefinitionNodeMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        <if test="orderBy != null"> ORDER BY ${orderBy}</if>
        <if test="desc != null"> DESC </if>
        LIMIT #{offset}, #{limit}
    </select>

</mapper>