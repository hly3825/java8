<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司, Code Generated by terminus code gen
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="DoctorMaterialConsumeAvg">

    <resultMap id="DoctorMaterialConsumeAvgMap" type="DoctorMaterialConsumeAvg">

        <result column="id" property="id"/>
        <result column="farm_id" property="farmId"/>
        <result column="ware_house_id" property="wareHouseId"/>
        <result column="material_id" property="materialId"/>
        <result column="type" property="type"/>
        <result column="consume_avg_count" property="consumeAvgCount"/>
        <result column="consume_count" property="consumeCount"/>
        <result column="consume_date" property="consumeDate"/>
        <result column="extra" property="extra"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    
    </resultMap>

    <sql id="tb"> doctor_material_consume_avgs </sql>

    <sql id="cols_all">
      id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        `farm_id`,`ware_house_id`,`material_id`,`type`,`consume_avg_count`,`consume_count`,`consume_date`,`extra`,`created_at`,`updated_at`
    </sql>

    <sql id="vals">
        #{farmId},#{wareHouseId},#{materialId},#{type},#{consumeAvgCount},#{consumeCount},#{consumeDate},#{extra},now(),now()
    </sql>

    <insert id="create" parameterType="DoctorMaterialConsumeAvg" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
            VALUES (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb"/>
        ( <include refid="cols_exclude_id"/> )
        VALUES
        <foreach collection="list" item="i" separator=",">
        (#{i.farmId},#{i.wareHouseId},#{i.materialId},#{type},#{i.consumeAvgCount},#{i.consumeCount},#{i.consumeDate},#{i.extra},now(),now())
        </foreach>
    </insert>

    <delete id="delete" parameterType="Long">
        DELETE FROM <include refid="tb"/> WHERE
        id=#{id}
    </delete>

    <select id="list" resultMap="DoctorMaterialConsumeAvgMap">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        <where>
            <if test="farmId != null" > AND `farm_id` = #{farmId}</if>
            <if test="wareHouseId != null" > AND `ware_house_id` = #{wareHouseId}</if>
            <if test="materialId != null" > AND `material_id` = #{materialId}</if>
        </where>
    </select>

    <select id="findById" parameterType="long" resultMap="DoctorMaterialConsumeAvgMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="queryByIds" parameterType="map" resultMap="DoctorMaterialConsumeAvgMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE farm_id=#{farmId} and ware_house_id=#{wareHouseId} and material_id=#{materialId}
    </select>

    <select id="queryByFarmIdAndType" parameterType="map" resultMap="DoctorMaterialConsumeAvgMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        WHERE farm_id = #{farm_id} and `type` = #{type}
    </select>

    <update id="update" parameterType="DoctorMaterialConsumeAvg">
        UPDATE <include refid="tb"/>
        <set>
        updated_at = now()
        <if test="farmId != null" > ,`farm_id` = #{farmId}</if>
        <if test="wareHouseId != null" > ,`ware_house_id` = #{wareHouseId}</if>
        <if test="materialId != null" > ,`material_id` = #{materialId}</if>
        <if test="type != null"> ,`type` = #{type} </if>
        <if test="consumeAvgCount != null" > ,`consume_avg_count` = #{consumeAvgCount}</if>
        <if test="consumeCount != null" > ,`consume_count` = #{consumeCount}</if>
        <if test="consumeDate != null" > ,`consume_date` = #{consumeDate}</if>
        <if test="extra != null" > ,`extra` = #{extra}</if>
        <if test="createdAt != null" > ,`created_at` = #{createdAt}</if>
        </set>
        WHERE id=#{id}
    </update>
</mapper>