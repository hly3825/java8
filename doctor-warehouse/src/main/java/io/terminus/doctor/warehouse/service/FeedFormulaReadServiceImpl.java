package io.terminus.doctor.warehouse.service;

import com.google.common.base.Throwables;
import io.terminus.common.model.Response;
import io.terminus.doctor.warehouse.dao.FeedFormulaDao;
import io.terminus.doctor.warehouse.model.FeedFormula;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * Code generated by terminus code gen
 * Desc: 饲料配方表读服务实现类
 * Date: 2016-09-26
 */
@Slf4j
@Service
public class FeedFormulaReadServiceImpl implements FeedFormulaReadService {

    private final FeedFormulaDao feedFormulaDao;

    @Autowired
    public FeedFormulaReadServiceImpl(FeedFormulaDao feedFormulaDao) {
        this.feedFormulaDao = feedFormulaDao;
    }

    @Override
    public Response<FeedFormula> findFeedFormulaById(Long feedFormulaId) {
        try {
            return Response.ok(feedFormulaDao.findById(feedFormulaId));
        } catch (Exception e) {
            log.error("find feedFormula by id failed, feedFormulaId:{}, cause:{}", feedFormulaId, Throwables.getStackTraceAsString(e));
            return Response.fail("feedFormula.find.fail");
        }
    }

    @Override
    public Response<FeedFormula> findFeedFormulaById(Long feedId, Long farmId) {
        try {
            return Response.ok(feedFormulaDao.findByFeedIdAndFarmId(feedId, farmId));
        } catch (Exception e) {
            log.error("find feedFormula by id failed, feedId:{}, farmId:{}, cause:{}", feedId, farmId, Throwables.getStackTraceAsString(e));
            return Response.fail("feedFormula.find.fail");
        }
    }
}
